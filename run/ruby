#!/bin/bash
set -eo pipefail

base="$( cd "$(dirname "$0")" ; pwd -P )"/..

if [ -z "$runfile" ]; then
    llvmir=$(mktemp -d)
    runfile=$(mktemp)
    rmtmp=1
fi

cleanup() {
    if [ -n "$rmtmp" ]; then
        rm -r "$llvmir" "$runfile"
    fi
}

trap cleanup EXIT

echo "require '$base/run/preamble.rb';" > "$runfile"
echo "require '$base/run/patch_require.rb';" >> "$runfile"

rb=$1
shift
echo "load '$rb';" >> "$runfile"

setRoot() {
    root=$( cd "$(dirname "$rb")"; pwd -P)
    while [ ! -f "$root/sorbet/config" ]; do
        root=$(dirname "$root")
        if [ "$root" == "/" ]; then
            root=""
            return
        fi
    done
}

if [ -z "$root" ]; then
    setRoot
fi
if [ -z "$root" ]; then
    # Still no root? I guess we're just compiling this one file
    "$base/run/compile" "$llvmir" "$rb"
else
    cd "$root"
    "$base/run/compile" "$llvmir"
    cd - > /dev/null
fi

if [ -f "$base/external/ruby_2_6_3/ruby" ]; then
    ruby="$base/external/ruby_2_6_3/ruby"
else
    ruby="$base/bazel-bin/external/ruby_2_6_3/ruby"
    if [ ! -f "$ruby" ]; then
        cd "$base"
        bazel build @ruby_2_6_3//:ruby --config=dbg 2> /dev/null
        cd - > /dev/null
    fi
fi
llvmir=$llvmir $ruby "$runfile" "$@"
