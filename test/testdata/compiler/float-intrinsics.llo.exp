; ModuleID = 'payload'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"

%struct.rb_vm_struct = type { i64, %struct.rb_global_vm_lock_struct, %struct.rb_thread_struct*, %struct.rb_thread_struct*, i8*, i64, %union.pthread_mutex_t, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i32, i32, i8, i32, i64, [5 x i64], i64, i64, i64, i64, i64, i64, i64, %struct.st_table*, %struct.st_table*, %struct.anon.3, %struct.rb_hook_list_struct, %struct.st_table*, %struct.rb_postponed_job_struct*, i32, i32, %struct.list_head, %union.pthread_mutex_t, i64, i64, i64, i64, i64, i32, %struct.st_table*, %struct.rb_objspace*, %struct.rb_at_exit_list*, i64*, %struct.st_table*, %struct.rb_builtin_function*, i32, %struct.anon.4, [29 x i16] }
%struct.rb_global_vm_lock_struct = type { %struct.rb_thread_struct*, %union.pthread_mutex_t, %struct.list_head, %struct.rb_thread_struct*, i32, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32 }
%union.pthread_cond_t = type { %struct.anon.2 }
%struct.anon.2 = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%struct.rb_thread_struct = type { %struct.list_node, i64, %struct.rb_vm_struct*, %struct.rb_execution_context_struct*, i64, %struct.rb_calling_info*, i64, i64, i64, i8, i8, i32, %struct.native_thread_data_struct, i8*, i64, i64, i64, i64, %union.pthread_mutex_t, %struct.rb_unblock_callback, i64, %struct.rb_mutex_struct*, %struct.rb_thread_list_struct*, %union.anon.7, i32, i64, %struct.rb_fiber_struct*, [5 x i8*], i64 }
%struct.list_node = type { %struct.list_node*, %struct.list_node* }
%struct.rb_execution_context_struct = type { i64*, i64, %struct.rb_control_frame_struct*, %struct.rb_vm_tag*, %struct.rb_vm_protect_tag*, i32, i32, %struct.rb_fiber_struct*, %struct.rb_thread_struct*, %struct.st_table*, i64, i64, i64*, i64, %struct.rb_ensure_list*, %struct.rb_trace_arg_struct*, i64, i64, i8, i8, i64, %struct.anon.5 }
%struct.rb_control_frame_struct = type { i64*, i64*, %struct.rb_iseq_struct*, i64, i64*, i8*, i64* }
%struct.rb_iseq_struct = type { i64, i64, %struct.rb_iseq_constant_body*, %union.anon.14 }
%struct.rb_iseq_constant_body = type { i32, i32, i64*, %struct.anon, %struct.rb_iseq_location_struct, %struct.iseq_insn_info, i64*, %struct.iseq_catch_table*, %struct.rb_iseq_struct*, %struct.rb_iseq_struct*, %union.iseq_inline_storage_entry*, %struct.rb_call_data*, %struct.anon.13, i32, i32, i32, i32, i32, i8, i64 }
%struct.anon = type { %struct.anon.0, i32, i32, i32, i32, i32, i32, i32, i64*, %struct.rb_iseq_param_keyword* }
%struct.anon.0 = type { i16, [2 x i8] }
%struct.rb_iseq_param_keyword = type { i32, i32, i32, i32, i64*, i64* }
%struct.rb_iseq_location_struct = type { i64, i64, i64, i64, i32, %struct.rb_code_location_struct }
%struct.rb_code_location_struct = type { %struct.rb_code_position_struct, %struct.rb_code_position_struct }
%struct.rb_code_position_struct = type { i32, i32 }
%struct.iseq_insn_info = type { %struct.iseq_insn_info_entry*, i32*, i32, %struct.succ_index_table* }
%struct.iseq_insn_info_entry = type opaque
%struct.succ_index_table = type opaque
%struct.iseq_catch_table = type opaque
%union.iseq_inline_storage_entry = type { %struct.iseq_inline_cache_entry }
%struct.iseq_inline_cache_entry = type { i64, %struct.rb_cref_struct*, i64 }
%struct.rb_cref_struct = type { i64, i64, i64, %struct.rb_cref_struct*, %struct.rb_scope_visi_struct }
%struct.rb_scope_visi_struct = type { i8, [3 x i8] }
%struct.rb_call_data = type { %struct.rb_call_cache, %struct.rb_call_info }
%struct.rb_call_cache = type { i64, [3 x i64], %struct.rb_callable_method_entry_struct*, i64, i64 (%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_calling_info*, %struct.rb_call_data*)*, %union.anon.12 }
%struct.rb_callable_method_entry_struct = type { i64, i64, %struct.rb_method_definition_struct*, i64, i64 }
%struct.rb_method_definition_struct = type { i64, %union.anon.10, i64, i64 }
%union.anon.10 = type { %struct.rb_method_cfunc_struct }
%struct.rb_method_cfunc_struct = type { i64 (...)*, i64 (i64, i32, i64*, i64 (...)*)*, i32 }
%union.anon.12 = type { i32 }
%struct.rb_call_info = type { i64, i32, i32 }
%struct.anon.13 = type { i64, i64, i64, i64* }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i64, i32 }
%struct.rb_vm_tag = type { i64, i64, [5 x i8*], %struct.rb_vm_tag*, i32 }
%struct.rb_vm_protect_tag = type { %struct.rb_vm_protect_tag* }
%struct.rb_ensure_list = type { %struct.rb_ensure_list*, %struct.rb_ensure_entry }
%struct.rb_ensure_entry = type { i64, i64 (i64)*, i64 }
%struct.rb_trace_arg_struct = type { i32, %struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, i64, i64, i64, i64, i64, i32, i32, i64 }
%struct.anon.5 = type { i64*, i64*, i64, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.rb_calling_info = type { i64, i64, i32, i32 }
%struct.native_thread_data_struct = type { %struct.list_head, %union.anon.6 }
%union.anon.6 = type { %union.pthread_cond_t }
%struct.rb_unblock_callback = type { void (i8*)*, i8* }
%struct.rb_mutex_struct = type opaque
%struct.rb_thread_list_struct = type { %struct.rb_thread_list_struct*, %struct.rb_thread_struct* }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i64, i64, i32 }
%struct.rb_fiber_struct = type opaque
%struct.anon.3 = type { [65 x i64] }
%struct.rb_hook_list_struct = type { %struct.rb_event_hook_struct*, i32, i32, i32 }
%struct.rb_event_hook_struct = type opaque
%struct.rb_postponed_job_struct = type opaque
%struct.list_head = type { %struct.list_node }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.rb_objspace = type opaque
%struct.rb_at_exit_list = type { void (%struct.rb_vm_struct*)*, %struct.rb_at_exit_list* }
%struct.st_table = type { i8, i8, i8, i32, %struct.st_hash_type*, i64, i64*, i64, i64, %struct.st_table_entry* }
%struct.st_hash_type = type { i32 (i64, i64)*, i64 (i64)* }
%struct.st_table_entry = type opaque
%struct.rb_builtin_function = type opaque
%struct.anon.4 = type { i64, i64, i64, i64 }
%struct.FunctionInlineCache = type { %struct.rb_kwarg_call_data }
%struct.rb_kwarg_call_data = type { %struct.rb_call_cache, %struct.rb_call_info_with_kwarg }
%struct.rb_call_info_with_kwarg = type { %struct.rb_call_info, %struct.rb_call_info_kw_arg* }
%struct.rb_call_info_kw_arg = type { i32, [1 x i64] }
%struct.rb_sorbet_param_struct = type { %struct.anon.0, i32, i32, i32, i32, i32, i32, i32, i64*, i32, i32, i32, i32, i64* }
%struct.iseq_inline_iv_cache_entry = type { i64, i64 }

@ruby_current_vm_ptr = external local_unnamed_addr global %struct.rb_vm_struct*, align 8
@ruby_current_execution_context_ptr = external local_unnamed_addr global %struct.rb_execution_context_struct*, align 8
@ruby_vm_global_constant_state = external local_unnamed_addr global i64, align 8
@rb_eRuntimeError = external local_unnamed_addr global i64, align 8
@.str.8 = private unnamed_addr constant [95 x i8] c"sorbet_getBuildSCMRevision: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"sorbet_getIsReleaseBuild: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@"stackFramePrecomputed_func_Object#plus" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_plus = internal unnamed_addr global i64 0, align 8
@str_plus = private unnamed_addr constant [5 x i8] c"plus\00", align 1
@rubyStrFrozen_plus = internal unnamed_addr global i64 0, align 8
@"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb" = internal unnamed_addr global i64 0, align 8
@"str_test/testdata/compiler/float-intrinsics.rb" = private unnamed_addr constant [43 x i8] c"test/testdata/compiler/float-intrinsics.rb\00", align 1
@str_sig = private unnamed_addr constant [4 x i8] c"sig\00", align 1
@str_Float = private unnamed_addr constant [6 x i8] c"Float\00", align 1
@"rubyIdPrecomputed_+" = internal unnamed_addr global i64 0, align 8
@"str_+" = private unnamed_addr constant [2 x i8] c"+\00", align 1
@"ic_+" = internal global %struct.FunctionInlineCache zeroinitializer
@"str_Return value" = private unnamed_addr constant [13 x i8] c"Return value\00", align 1
@"stackFramePrecomputed_func_Object#minus" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_minus = internal unnamed_addr global i64 0, align 8
@str_minus = private unnamed_addr constant [6 x i8] c"minus\00", align 1
@ic_- = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_- = internal unnamed_addr global i64 0, align 8
@str_- = private unnamed_addr constant [2 x i8] c"-\00", align 1
@"stackFramePrecomputed_func_Object#lt" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_lt = internal unnamed_addr global i64 0, align 8
@str_lt = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@"rubyIdPrecomputed_<" = internal unnamed_addr global i64 0, align 8
@"str_<" = private unnamed_addr constant [2 x i8] c"<\00", align 1
@"ic_<" = internal global %struct.FunctionInlineCache zeroinitializer
@"str_T::Boolean" = private unnamed_addr constant [11 x i8] c"T::Boolean\00", align 1
@"stackFramePrecomputed_func_Object#lte" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_lte = internal unnamed_addr global i64 0, align 8
@str_lte = private unnamed_addr constant [4 x i8] c"lte\00", align 1
@"rubyIdPrecomputed_<=" = internal unnamed_addr global i64 0, align 8
@"str_<=" = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@"ic_<=" = internal global %struct.FunctionInlineCache zeroinitializer
@"stackFramePrecomputed_func_<root>.<static-init>$152" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"rubyIdPrecomputed_<top (required)>" = internal unnamed_addr global i64 0, align 8
@"str_<top (required)>" = private unnamed_addr constant [17 x i8] c"<top (required)>\00", align 1
@"rubyIdPrecomputed_<block-call>" = internal unnamed_addr global i64 0, align 8
@"str_<block-call>" = private unnamed_addr constant [13 x i8] c"<block-call>\00", align 1
@"stackFramePrecomputed_func_<root>.<static-init>$152$block_1" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"rubyIdPrecomputed_block for" = internal unnamed_addr global i64 0, align 8
@"str_block for" = private unnamed_addr constant [10 x i8] c"block for\00", align 1
@"rubyStrFrozen_block for" = internal unnamed_addr global i64 0, align 8
@"stackFramePrecomputed_func_<root>.<static-init>$152$block_2" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.<static-init>$152$block_3" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_<root>.<static-init>$152$block_4" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@ic_sig = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_sig = internal unnamed_addr global i64 0, align 8
@rubyIdPrecomputed_x = internal unnamed_addr global i64 0, align 8
@str_x = private unnamed_addr constant [2 x i8] c"x\00", align 1
@rubyIdPrecomputed_y = internal unnamed_addr global i64 0, align 8
@str_y = private unnamed_addr constant [2 x i8] c"y\00", align 1
@ic_untyped = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_untyped = internal unnamed_addr global i64 0, align 8
@str_untyped = private unnamed_addr constant [8 x i8] c"untyped\00", align 1
@ic_params = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_params = internal unnamed_addr global i64 0, align 8
@str_params = private unnamed_addr constant [7 x i8] c"params\00", align 1
@ic_untyped.1 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_returns = internal unnamed_addr global i64 0, align 8
@str_returns = private unnamed_addr constant [8 x i8] c"returns\00", align 1
@ic_sig.2 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.3 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.4 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.5 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.6 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_sig.7 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.8 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.9 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.10 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_sig.11 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_untyped.12 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_params.13 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_returns.14 = internal global %struct.FunctionInlineCache zeroinitializer
@"str_T::Sig" = private unnamed_addr constant [7 x i8] c"T::Sig\00", align 1
@ic_extend = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_extend = internal unnamed_addr global i64 0, align 8
@str_extend = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@rubyIdPrecomputed_normal = internal unnamed_addr global i64 0, align 8
@str_normal = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@ic_keep_def = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_keep_def = internal unnamed_addr global i64 0, align 8
@str_keep_def = private unnamed_addr constant [9 x i8] c"keep_def\00", align 1
@ic_keep_def.15 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_keep_def.16 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_keep_def.17 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_plus = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_p = internal unnamed_addr global i64 0, align 8
@str_p = private unnamed_addr constant [2 x i8] c"p\00", align 1
@ic_minus = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.18 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.19 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.20 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.21 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.22 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.23 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.24 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.25 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.26 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_plus.27 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.28 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_8.9 = internal unnamed_addr global i64 0, align 8
@str_8.9 = private unnamed_addr constant [4 x i8] c"8.9\00", align 1
@ic_Rational = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_Rational = internal unnamed_addr global i64 0, align 8
@str_Rational = private unnamed_addr constant [9 x i8] c"Rational\00", align 1
@ic_plus.29 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.30 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_5 = internal unnamed_addr global i64 0, align 8
@str_5 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@ic_Complex = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_Complex = internal unnamed_addr global i64 0, align 8
@str_Complex = private unnamed_addr constant [8 x i8] c"Complex\00", align 1
@ic_plus.31 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.32 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.33 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.34 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_15.4 = internal unnamed_addr global i64 0, align 8
@str_15.4 = private unnamed_addr constant [5 x i8] c"15.4\00", align 1
@ic_Rational.35 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.36 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.37 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_18 = internal unnamed_addr global i64 0, align 8
@str_18 = private unnamed_addr constant [3 x i8] c"18\00", align 1
@ic_Complex.38 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_minus.39 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.40 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.41 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.42 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_25.4 = internal unnamed_addr global i64 0, align 8
@str_25.4 = private unnamed_addr constant [5 x i8] c"25.4\00", align 1
@ic_Rational.43 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lt.44 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.45 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.46 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.47 = internal global %struct.FunctionInlineCache zeroinitializer
@rubyStrFrozen_5.923 = internal unnamed_addr global i64 0, align 8
@str_5.923 = private unnamed_addr constant [6 x i8] c"5.923\00", align 1
@ic_Rational.48 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_lte.49 = internal global %struct.FunctionInlineCache zeroinitializer
@ic_p.50 = internal global %struct.FunctionInlineCache zeroinitializer
@"guard_epoch_T::Sig" = linkonce local_unnamed_addr global i64 0
@"guarded_const_T::Sig" = linkonce local_unnamed_addr global i64 0
@rb_cObject = external local_unnamed_addr constant i64
@rb_mKernel = external local_unnamed_addr constant i64

declare i64 @rb_float_plus(i64, i64) local_unnamed_addr #0

declare i64 @sorbet_flo_lt(i64, i64) local_unnamed_addr #0

declare i64 @sorbet_flo_le(i64, i64) local_unnamed_addr #0

; Function Attrs: cold noreturn
declare void @sorbet_cast_failure(i64, i8*, i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @sorbet_raiseArity(i32, i32, i32) local_unnamed_addr #2

declare %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64, i64, i64, i64, %struct.rb_iseq_struct*, i32, i32, i32, i64*, i32, i32) local_unnamed_addr #0

declare i64 @sorbet_getConstant(i8*, i64) local_unnamed_addr #0

declare i64 @sorbet_readRealpath() local_unnamed_addr #0

declare void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache*, i64, i32, i32, i32, i64*) local_unnamed_addr #0

declare i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache*, i64) local_unnamed_addr #0

declare void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_iseq_struct*) local_unnamed_addr #0

declare i64 @rb_intern(i8*) local_unnamed_addr #0

declare void @rb_add_method_sorbet(i64, i64, i64 (i32, i64*, i64)*, %struct.rb_sorbet_param_struct*, i32, i8*) local_unnamed_addr #0

declare i64 @rb_intern2(i8*, i64) local_unnamed_addr #0

declare i64 @rb_id2sym(i64) local_unnamed_addr #0

declare i64 @rb_fstring_new(i8*, i64) local_unnamed_addr #0

declare void @rb_gc_register_mark_object(i64) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @rb_raise(i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define noalias nonnull i8* @sorbet_allocateParamInfo() local_unnamed_addr #3 {
  %1 = tail call noalias nonnull i8* @ruby_xcalloc(i64 1, i64 64) #12
  ret i8* %1
}

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xcalloc(i64, i64) local_unnamed_addr #4

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xmalloc2(i64, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define weak i32 @sorbet_getIsReleaseBuild() local_unnamed_addr #6 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !4
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define weak i8* @sorbet_getBuildSCMRevision() local_unnamed_addr #6 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !4
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.8, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#plus"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw) #7 !dbg !8 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !12
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !14
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  %4 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  %5 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** %4, align 8, !tbaa !18
  %6 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %5, i64 0, i32 2
  %7 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %6, align 8, !tbaa !20
  %8 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %7, i64 0, i32 2
  %9 = load i64*, i64** %8, align 8, !tbaa !22
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  store i64* %10, i64** %3, align 8, !tbaa !12
  %11 = icmp eq i32 %argc, 2, !dbg !31
  br i1 %11, label %fillRequiredArgs, label %argCountFailBlock, !dbg !31, !prof !32

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 2, i32 2) #10, !dbg !31
  unreachable, !dbg !31

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !31
  %12 = getelementptr i64, i64* %argArray, i64 1, !dbg !31
  %rawArg_y = load i64, i64* %12, align 8, !dbg !31
  %13 = and i64 %rawArg_x, 3, !dbg !33
  %14 = icmp eq i64 %13, 2, !dbg !33
  br i1 %14, label %typeTestSuccess16, label %15, !dbg !33

15:                                               ; preds = %fillRequiredArgs
  %16 = and i64 %rawArg_x, 7, !dbg !33
  %17 = icmp ne i64 %16, 0, !dbg !33
  %18 = and i64 %rawArg_x, -9, !dbg !33
  %19 = icmp eq i64 %18, 0, !dbg !33
  %20 = or i1 %17, %19, !dbg !33
  br i1 %20, label %codeRepl, label %sorbet_isa_Float.exit, !dbg !33, !prof !34

sorbet_isa_Float.exit:                            ; preds = %15
  %21 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !33
  %22 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %21, i64 0, i32 0, !dbg !33
  %23 = load i64, i64* %22, align 8, !dbg !33, !tbaa !35
  %24 = and i64 %23, 31, !dbg !33
  %25 = icmp eq i64 %24, 4, !dbg !33
  br i1 %25, label %typeTestSuccess16, label %codeRepl, !dbg !33, !prof !37

codeRepl:                                         ; preds = %sorbet_isa_Float.exit, %15
  tail call void @sorbet_cast_failure(i64 %rawArg_x, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_sig, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str_Float, i64 0, i64 0)) #10, !dbg !38
  unreachable, !dbg !38

typeTestSuccess16:                                ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  %26 = getelementptr inbounds i64, i64* %9, i64 2, !dbg !41
  store i64* %26, i64** %3, align 8, !dbg !41, !tbaa !12
  %27 = tail call i64 @rb_float_plus(i64 %rawArg_x, i64 %rawArg_y) #10, !dbg !42, !noalias !43
  ret i64 %27
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#minus"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw) #7 !dbg !46 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !12
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !14
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  %4 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  %5 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** %4, align 8, !tbaa !18
  %6 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %5, i64 0, i32 2
  %7 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %6, align 8, !tbaa !20
  %8 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %7, i64 0, i32 2
  %9 = load i64*, i64** %8, align 8, !tbaa !22
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  store i64* %10, i64** %3, align 8, !tbaa !12
  %11 = icmp eq i32 %argc, 2, !dbg !47
  br i1 %11, label %fillRequiredArgs, label %argCountFailBlock, !dbg !47, !prof !32

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 2, i32 2) #10, !dbg !47
  unreachable, !dbg !47

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %12 = bitcast i64* %argArray to <2 x i64>*, !dbg !47
  %13 = load <2 x i64>, <2 x i64>* %12, align 8, !dbg !47
  %14 = extractelement <2 x i64> %13, i32 0, !dbg !48
  %15 = and i64 %14, 3, !dbg !48
  %16 = icmp eq i64 %15, 2, !dbg !48
  br i1 %16, label %typeTestSuccess13, label %17, !dbg !48

17:                                               ; preds = %fillRequiredArgs
  %18 = and i64 %14, 7, !dbg !48
  %19 = icmp ne i64 %18, 0, !dbg !48
  %20 = and i64 %14, -9, !dbg !48
  %21 = icmp eq i64 %20, 0, !dbg !48
  %22 = or i1 %19, %21, !dbg !48
  br i1 %22, label %codeRepl, label %sorbet_isa_Float.exit, !dbg !48, !prof !34

sorbet_isa_Float.exit:                            ; preds = %17
  %23 = inttoptr i64 %14 to %struct.iseq_inline_iv_cache_entry*, !dbg !48
  %24 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %23, i64 0, i32 0, !dbg !48
  %25 = load i64, i64* %24, align 8, !dbg !48, !tbaa !35
  %26 = and i64 %25, 31, !dbg !48
  %27 = icmp eq i64 %26, 4, !dbg !48
  br i1 %27, label %typeTestSuccess13, label %codeRepl, !dbg !48, !prof !37

codeRepl:                                         ; preds = %sorbet_isa_Float.exit, %17
  tail call void @sorbet_cast_failure(i64 %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_sig, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str_Float, i64 0, i64 0)) #10, !dbg !49
  unreachable, !dbg !49

typeTestSuccess13:                                ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  %28 = getelementptr inbounds i64, i64* %9, i64 2, !dbg !51
  store i64* %28, i64** %3, align 8, !dbg !51, !tbaa !12
  %29 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !52, !tbaa !12
  %30 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %29, i64 0, i32 2, !dbg !52
  %31 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %30, align 8, !dbg !52, !tbaa !14
  %32 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %31, i64 0, i32 1, !dbg !52
  %33 = load i64*, i64** %32, align 8, !dbg !52, !tbaa !53
  %34 = getelementptr inbounds i64, i64* %33, i64 2, !dbg !52
  store i64* %34, i64** %32, align 8, !dbg !52, !tbaa !53
  %35 = bitcast i64* %33 to <2 x i64>*, !dbg !52
  store <2 x i64> %13, <2 x i64>* %35, align 8, !dbg !52, !tbaa !4
  %send = tail call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_-, i64 0) #10, !dbg !52
  ret i64 %send
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#lt"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw) #7 !dbg !39 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !12
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !14
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  %4 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  %5 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** %4, align 8, !tbaa !18
  %6 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %5, i64 0, i32 2
  %7 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %6, align 8, !tbaa !20
  %8 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %7, i64 0, i32 2
  %9 = load i64*, i64** %8, align 8, !tbaa !22
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  store i64* %10, i64** %3, align 8, !tbaa !12
  %11 = icmp eq i32 %argc, 2, !dbg !54
  br i1 %11, label %fillRequiredArgs, label %argCountFailBlock, !dbg !54, !prof !32

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 2, i32 2) #10, !dbg !54
  unreachable, !dbg !54

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !54
  %12 = getelementptr i64, i64* %argArray, i64 1, !dbg !54
  %rawArg_y = load i64, i64* %12, align 8, !dbg !54
  %13 = and i64 %rawArg_x, 3, !dbg !55
  %14 = icmp eq i64 %13, 2, !dbg !55
  br i1 %14, label %typeTestSuccess7, label %15, !dbg !55

15:                                               ; preds = %fillRequiredArgs
  %16 = and i64 %rawArg_x, 7, !dbg !55
  %17 = icmp ne i64 %16, 0, !dbg !55
  %18 = and i64 %rawArg_x, -9, !dbg !55
  %19 = icmp eq i64 %18, 0, !dbg !55
  %20 = or i1 %17, %19, !dbg !55
  br i1 %20, label %codeRepl28, label %sorbet_isa_Float.exit, !dbg !55, !prof !34

sorbet_isa_Float.exit:                            ; preds = %15
  %21 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !55
  %22 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %21, i64 0, i32 0, !dbg !55
  %23 = load i64, i64* %22, align 8, !dbg !55, !tbaa !35
  %24 = and i64 %23, 31, !dbg !55
  %25 = icmp eq i64 %24, 4, !dbg !55
  br i1 %25, label %typeTestSuccess7, label %codeRepl28, !dbg !55, !prof !37

codeRepl28:                                       ; preds = %sorbet_isa_Float.exit, %15
  tail call fastcc void @"func_Object#lt.cold.2"(i64 %rawArg_x) #14, !dbg !55
  unreachable

typeTestSuccess7:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  %26 = getelementptr inbounds i64, i64* %9, i64 2, !dbg !56
  store i64* %26, i64** %3, align 8, !dbg !56, !tbaa !12
  %27 = tail call i64 @sorbet_flo_lt(i64 %rawArg_x, i64 %rawArg_y) #10, !dbg !57, !noalias !58
  switch i64 %27, label %codeRepl [
    i64 20, label %typeTestSuccess16
    i64 0, label %typeTestSuccess16
  ], !prof !61

typeTestSuccess16:                                ; preds = %typeTestSuccess7, %typeTestSuccess7
  ret i64 %27

codeRepl:                                         ; preds = %typeTestSuccess7
  tail call fastcc void @"func_Object#lt.cold.1"(i64 %27) #14
  unreachable
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_Object#lte"(i32 %argc, i64* nocapture readonly %argArray, i64 %selfRaw) #7 !dbg !62 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !12
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !14
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  %4 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  %5 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** %4, align 8, !tbaa !18
  %6 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %5, i64 0, i32 2
  %7 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %6, align 8, !tbaa !20
  %8 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %7, i64 0, i32 2
  %9 = load i64*, i64** %8, align 8, !tbaa !22
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  store i64* %10, i64** %3, align 8, !tbaa !12
  %11 = icmp eq i32 %argc, 2, !dbg !63
  br i1 %11, label %fillRequiredArgs, label %argCountFailBlock, !dbg !63, !prof !32

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 2, i32 2) #10, !dbg !63
  unreachable, !dbg !63

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %rawArg_x = load i64, i64* %argArray, align 8, !dbg !63
  %12 = getelementptr i64, i64* %argArray, i64 1, !dbg !63
  %rawArg_y = load i64, i64* %12, align 8, !dbg !63
  %13 = and i64 %rawArg_x, 3, !dbg !64
  %14 = icmp eq i64 %13, 2, !dbg !64
  br i1 %14, label %typeTestSuccess7, label %15, !dbg !64

15:                                               ; preds = %fillRequiredArgs
  %16 = and i64 %rawArg_x, 7, !dbg !64
  %17 = icmp ne i64 %16, 0, !dbg !64
  %18 = and i64 %rawArg_x, -9, !dbg !64
  %19 = icmp eq i64 %18, 0, !dbg !64
  %20 = or i1 %17, %19, !dbg !64
  br i1 %20, label %codeRepl28, label %sorbet_isa_Float.exit, !dbg !64, !prof !34

sorbet_isa_Float.exit:                            ; preds = %15
  %21 = inttoptr i64 %rawArg_x to %struct.iseq_inline_iv_cache_entry*, !dbg !64
  %22 = getelementptr inbounds %struct.iseq_inline_iv_cache_entry, %struct.iseq_inline_iv_cache_entry* %21, i64 0, i32 0, !dbg !64
  %23 = load i64, i64* %22, align 8, !dbg !64, !tbaa !35
  %24 = and i64 %23, 31, !dbg !64
  %25 = icmp eq i64 %24, 4, !dbg !64
  br i1 %25, label %typeTestSuccess7, label %codeRepl28, !dbg !64, !prof !37

codeRepl28:                                       ; preds = %sorbet_isa_Float.exit, %15
  tail call void @sorbet_cast_failure(i64 %rawArg_x, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_sig, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str_Float, i64 0, i64 0)) #10, !dbg !65
  unreachable, !dbg !65

typeTestSuccess7:                                 ; preds = %fillRequiredArgs, %sorbet_isa_Float.exit
  %26 = getelementptr inbounds i64, i64* %9, i64 2, !dbg !67
  store i64* %26, i64** %3, align 8, !dbg !67, !tbaa !12
  %27 = tail call i64 @sorbet_flo_le(i64 %rawArg_x, i64 %rawArg_y) #10, !dbg !68, !noalias !69
  switch i64 %27, label %codeRepl [
    i64 20, label %typeTestSuccess16
    i64 0, label %typeTestSuccess16
  ], !prof !61

typeTestSuccess16:                                ; preds = %typeTestSuccess7, %typeTestSuccess7
  ret i64 %27

codeRepl:                                         ; preds = %typeTestSuccess7
  tail call void @sorbet_cast_failure(i64 %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str_Return value", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str_T::Boolean", i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: sspreq
define void @Init_float-intrinsics() local_unnamed_addr #8 {
entry:
  %locals1.i.i = alloca [0 x i64], align 8
  %locals.i.i = alloca i64, align 8
  %keywords174.i = alloca [2 x i64], align 8, !dbg !72
  %keywords17175.i = alloca [2 x i64], align 8, !dbg !75
  %keywords34176.i = alloca [2 x i64], align 8, !dbg !77
  %keywords49177.i = alloca [2 x i64], align 8, !dbg !79
  %realpath = tail call i64 @sorbet_readRealpath()
  %0 = bitcast [2 x i64]* %keywords174.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  %1 = bitcast [2 x i64]* %keywords17175.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1)
  %2 = bitcast [2 x i64]* %keywords34176.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = bitcast [2 x i64]* %keywords49177.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3)
  %4 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str_plus, i64 0, i64 0), i64 4) #10
  store i64 %4, i64* @rubyIdPrecomputed_plus, align 8
  %5 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str_+", i64 0, i64 0), i64 1) #10
  store i64 %5, i64* @"rubyIdPrecomputed_+", align 8
  %6 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str_minus, i64 0, i64 0), i64 5) #10
  store i64 %6, i64* @rubyIdPrecomputed_minus, align 8
  %7 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_-, i64 0, i64 0), i64 1) #10
  store i64 %7, i64* @rubyIdPrecomputed_-, align 8
  %8 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_lt, i64 0, i64 0), i64 2) #10
  store i64 %8, i64* @rubyIdPrecomputed_lt, align 8
  %9 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str_<", i64 0, i64 0), i64 1) #10
  store i64 %9, i64* @"rubyIdPrecomputed_<", align 8
  %10 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_lte, i64 0, i64 0), i64 3) #10
  store i64 %10, i64* @rubyIdPrecomputed_lte, align 8
  %11 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str_<=", i64 0, i64 0), i64 2) #10
  store i64 %11, i64* @"rubyIdPrecomputed_<=", align 8
  %12 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 16) #10
  store i64 %12, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %13 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str_<block-call>", i64 0, i64 0), i64 12) #10
  store i64 %13, i64* @"rubyIdPrecomputed_<block-call>", align 8
  %14 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str_block for", i64 0, i64 0), i64 9) #10
  store i64 %14, i64* @"rubyIdPrecomputed_block for", align 8
  %15 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_sig, i64 0, i64 0), i64 3) #10
  store i64 %15, i64* @rubyIdPrecomputed_sig, align 8
  %16 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_x, i64 0, i64 0), i64 1) #10
  store i64 %16, i64* @rubyIdPrecomputed_x, align 8
  %17 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_y, i64 0, i64 0), i64 1) #10
  store i64 %17, i64* @rubyIdPrecomputed_y, align 8
  %18 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str_untyped, i64 0, i64 0), i64 7) #10
  store i64 %18, i64* @rubyIdPrecomputed_untyped, align 8
  %19 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str_params, i64 0, i64 0), i64 6) #10
  store i64 %19, i64* @rubyIdPrecomputed_params, align 8
  %20 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str_returns, i64 0, i64 0), i64 7) #10
  store i64 %20, i64* @rubyIdPrecomputed_returns, align 8
  %21 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str_extend, i64 0, i64 0), i64 6) #10
  store i64 %21, i64* @rubyIdPrecomputed_extend, align 8
  %22 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str_normal, i64 0, i64 0), i64 6) #10
  store i64 %22, i64* @rubyIdPrecomputed_normal, align 8
  %23 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str_keep_def, i64 0, i64 0), i64 8) #10
  store i64 %23, i64* @rubyIdPrecomputed_keep_def, align 8
  %24 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_p, i64 0, i64 0), i64 1) #10
  store i64 %24, i64* @rubyIdPrecomputed_p, align 8
  %25 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str_Rational, i64 0, i64 0), i64 8) #10
  store i64 %25, i64* @rubyIdPrecomputed_Rational, align 8
  %26 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str_Complex, i64 0, i64 0), i64 7) #10
  store i64 %26, i64* @rubyIdPrecomputed_Complex, align 8
  %27 = tail call i64 @rb_fstring_new(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str_plus, i64 0, i64 0), i64 4) #10
  tail call void @rb_gc_register_mark_object(i64 %27) #10
  store i64 %27, i64* @rubyStrFrozen_plus, align 8
  %28 = tail call i64 @rb_fstring_new(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str_test/testdata/compiler/float-intrinsics.rb", i64 0, i64 0), i64 42) #10
  tail call void @rb_gc_register_mark_object(i64 %28) #10
  store i64 %28, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %29 = bitcast [0 x i64]* %locals1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 0, i8* nonnull %29)
  %rubyId_plus.i.i = load i64, i64* @rubyIdPrecomputed_plus, align 8
  %rubyStr_plus.i.i = load i64, i64* @rubyStrFrozen_plus, align 8
  %locals1.sub.i.i = getelementptr inbounds [0 x i64], [0 x i64]* %locals1.i.i, i64 0, i64 0
  %30 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %rubyStr_plus.i.i, i64 %rubyId_plus.i.i, i64 %28, i64 %realpath, %struct.rb_iseq_struct* null, i32 1, i32 8, i32 10, i64* nonnull %locals1.sub.i.i, i32 0, i32 2)
  store %struct.rb_iseq_struct* %30, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#plus", align 8
  call void @llvm.lifetime.end.p0i8(i64 0, i8* nonnull %29)
  %"rubyId_+.i" = load i64, i64* @"rubyIdPrecomputed_+", align 8, !dbg !42
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @"ic_+", i64 %"rubyId_+.i", i32 16, i32 1, i32 0, i64* null), !dbg !42
  %31 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str_minus, i64 0, i64 0), i64 5) #10
  call void @rb_gc_register_mark_object(i64 %31) #10
  call void @llvm.lifetime.start.p0i8(i64 0, i8* nonnull %29)
  %rubyId_minus.i.i = load i64, i64* @rubyIdPrecomputed_minus, align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i179.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %32 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %31, i64 %rubyId_minus.i.i, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i179.i", i64 %realpath, %struct.rb_iseq_struct* null, i32 1, i32 13, i32 15, i64* nonnull %locals1.sub.i.i, i32 0, i32 2)
  store %struct.rb_iseq_struct* %32, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#minus", align 8
  call void @llvm.lifetime.end.p0i8(i64 0, i8* nonnull %29)
  %rubyId_-.i = load i64, i64* @rubyIdPrecomputed_-, align 8, !dbg !52
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_-, i64 %rubyId_-.i, i32 16, i32 1, i32 0, i64* null), !dbg !52
  %33 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_lt, i64 0, i64 0), i64 2) #10
  call void @rb_gc_register_mark_object(i64 %33) #10
  call void @llvm.lifetime.start.p0i8(i64 0, i8* nonnull %29)
  %rubyId_lt.i.i = load i64, i64* @rubyIdPrecomputed_lt, align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i182.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %34 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %33, i64 %rubyId_lt.i.i, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i182.i", i64 %realpath, %struct.rb_iseq_struct* null, i32 1, i32 18, i32 20, i64* nonnull %locals1.sub.i.i, i32 0, i32 2)
  store %struct.rb_iseq_struct* %34, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#lt", align 8
  call void @llvm.lifetime.end.p0i8(i64 0, i8* nonnull %29)
  %"rubyId_<.i" = load i64, i64* @"rubyIdPrecomputed_<", align 8, !dbg !57
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @"ic_<", i64 %"rubyId_<.i", i32 16, i32 1, i32 0, i64* null), !dbg !57
  %35 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_lte, i64 0, i64 0), i64 3) #10
  call void @rb_gc_register_mark_object(i64 %35) #10
  call void @llvm.lifetime.start.p0i8(i64 0, i8* nonnull %29)
  %rubyId_lte.i.i = load i64, i64* @rubyIdPrecomputed_lte, align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i185.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %36 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %35, i64 %rubyId_lte.i.i, i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i185.i", i64 %realpath, %struct.rb_iseq_struct* null, i32 1, i32 23, i32 25, i64* nonnull %locals1.sub.i.i, i32 0, i32 2)
  store %struct.rb_iseq_struct* %36, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#lte", align 8
  call void @llvm.lifetime.end.p0i8(i64 0, i8* nonnull %29)
  %"rubyId_<=.i" = load i64, i64* @"rubyIdPrecomputed_<=", align 8, !dbg !68
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @"ic_<=", i64 %"rubyId_<=.i", i32 16, i32 1, i32 0, i64* null), !dbg !68
  %37 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 16) #10
  call void @rb_gc_register_mark_object(i64 %37) #10
  %38 = bitcast i64* %locals.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %"rubyId_<top (required)>.i.i" = load i64, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i187.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %"rubyId_<block-call>.i.i" = load i64, i64* @"rubyIdPrecomputed_<block-call>", align 8
  store i64 %"rubyId_<block-call>.i.i", i64* %locals.i.i, align 8
  %39 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %37, i64 %"rubyId_<top (required)>.i.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i187.i", i64 %realpath, %struct.rb_iseq_struct* null, i32 1, i32 1, i32 48, i64* nonnull %locals.i.i, i32 1, i32 4)
  store %struct.rb_iseq_struct* %39, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152", align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  %40 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str_block for", i64 0, i64 0), i64 9) #10
  call void @rb_gc_register_mark_object(i64 %40) #10
  store i64 %40, i64* @"rubyStrFrozen_block for", align 8
  %stackFrame.i.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152", align 8
  %"rubyId_block for.i.i" = load i64, i64* @"rubyIdPrecomputed_block for", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i188.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %41 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %40, i64 %"rubyId_block for.i.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i188.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i.i, i32 2, i32 1, i32 48, i64* null, i32 0, i32 4)
  store %struct.rb_iseq_struct* %41, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152$block_1", align 8
  %stackFrame.i189.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152", align 8
  %"rubyId_block for.i190.i" = load i64, i64* @"rubyIdPrecomputed_block for", align 8
  %"rubyStr_block for.i191.i" = load i64, i64* @"rubyStrFrozen_block for", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i192.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %42 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block for.i191.i", i64 %"rubyId_block for.i190.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i192.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i189.i, i32 2, i32 1, i32 48, i64* null, i32 0, i32 4)
  store %struct.rb_iseq_struct* %42, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152$block_2", align 8
  %stackFrame.i193.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152", align 8
  %"rubyId_block for.i194.i" = load i64, i64* @"rubyIdPrecomputed_block for", align 8
  %"rubyStr_block for.i195.i" = load i64, i64* @"rubyStrFrozen_block for", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i196.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %43 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block for.i195.i", i64 %"rubyId_block for.i194.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i196.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i193.i, i32 2, i32 1, i32 48, i64* null, i32 0, i32 4)
  store %struct.rb_iseq_struct* %43, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152$block_3", align 8
  %stackFrame.i197.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152", align 8
  %"rubyId_block for.i198.i" = load i64, i64* @"rubyIdPrecomputed_block for", align 8
  %"rubyStr_block for.i199.i" = load i64, i64* @"rubyStrFrozen_block for", align 8
  %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i200.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/float-intrinsics.rb", align 8
  %44 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_block for.i199.i", i64 %"rubyId_block for.i198.i", i64 %"rubyStr_test/testdata/compiler/float-intrinsics.rb.i200.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i197.i, i32 2, i32 1, i32 48, i64* null, i32 0, i32 4)
  store %struct.rb_iseq_struct* %44, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152$block_4", align 8
  %rubyId_sig.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !81
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_sig, i64 %rubyId_sig.i, i32 20, i32 1, i32 0, i64* null), !dbg !81
  %rubyId_untyped.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !82
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_untyped, i64 %rubyId_untyped.i, i32 16, i32 0, i32 0, i64* null), !dbg !82
  %rubyId_params.i = load i64, i64* @rubyIdPrecomputed_params, align 8, !dbg !72
  %keywords174.sub.i = getelementptr inbounds [2 x i64], [2 x i64]* %keywords174.i, i64 0, i64 0
  %rubyId_x.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !72
  %45 = call i64 @rb_id2sym(i64 %rubyId_x.i) #10, !dbg !72
  store i64 %45, i64* %keywords174.sub.i, align 8, !dbg !72
  %rubyId_y.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !72
  %46 = call i64 @rb_id2sym(i64 %rubyId_y.i) #10, !dbg !72
  %47 = getelementptr inbounds [2 x i64], [2 x i64]* %keywords174.i, i64 0, i64 1, !dbg !72
  store i64 %46, i64* %47, align 8, !dbg !72
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_params, i64 %rubyId_params.i, i32 68, i32 2, i32 2, i64* nonnull %keywords174.sub.i), !dbg !72
  %rubyId_untyped8.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !83
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_untyped.1, i64 %rubyId_untyped8.i, i32 16, i32 0, i32 0, i64* null), !dbg !83
  %rubyId_returns.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !72
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_returns, i64 %rubyId_returns.i, i32 16, i32 1, i32 0, i64* null), !dbg !72
  %rubyId_sig11.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !84
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_sig.2, i64 %rubyId_sig11.i, i32 20, i32 1, i32 0, i64* null), !dbg !84
  %rubyId_untyped14.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !85
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_untyped.3, i64 %rubyId_untyped14.i, i32 16, i32 0, i32 0, i64* null), !dbg !85
  %rubyId_params16.i = load i64, i64* @rubyIdPrecomputed_params, align 8, !dbg !75
  %keywords17175.sub.i = getelementptr inbounds [2 x i64], [2 x i64]* %keywords17175.i, i64 0, i64 0
  %rubyId_x18.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !75
  %48 = call i64 @rb_id2sym(i64 %rubyId_x18.i) #10, !dbg !75
  store i64 %48, i64* %keywords17175.sub.i, align 8, !dbg !75
  %rubyId_y20.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !75
  %49 = call i64 @rb_id2sym(i64 %rubyId_y20.i) #10, !dbg !75
  %50 = getelementptr inbounds [2 x i64], [2 x i64]* %keywords17175.i, i64 0, i64 1, !dbg !75
  store i64 %49, i64* %50, align 8, !dbg !75
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_params.4, i64 %rubyId_params16.i, i32 68, i32 2, i32 2, i64* nonnull %keywords17175.sub.i), !dbg !75
  %rubyId_untyped24.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !86
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_untyped.5, i64 %rubyId_untyped24.i, i32 16, i32 0, i32 0, i64* null), !dbg !86
  %rubyId_returns26.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !75
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_returns.6, i64 %rubyId_returns26.i, i32 16, i32 1, i32 0, i64* null), !dbg !75
  %rubyId_sig28.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !87
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_sig.7, i64 %rubyId_sig28.i, i32 20, i32 1, i32 0, i64* null), !dbg !87
  %rubyId_untyped31.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !88
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_untyped.8, i64 %rubyId_untyped31.i, i32 16, i32 0, i32 0, i64* null), !dbg !88
  %rubyId_params33.i = load i64, i64* @rubyIdPrecomputed_params, align 8, !dbg !77
  %keywords34176.sub.i = getelementptr inbounds [2 x i64], [2 x i64]* %keywords34176.i, i64 0, i64 0
  %rubyId_x35.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !77
  %51 = call i64 @rb_id2sym(i64 %rubyId_x35.i) #10, !dbg !77
  store i64 %51, i64* %keywords34176.sub.i, align 8, !dbg !77
  %rubyId_y37.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !77
  %52 = call i64 @rb_id2sym(i64 %rubyId_y37.i) #10, !dbg !77
  %53 = getelementptr inbounds [2 x i64], [2 x i64]* %keywords34176.i, i64 0, i64 1, !dbg !77
  store i64 %52, i64* %53, align 8, !dbg !77
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_params.9, i64 %rubyId_params33.i, i32 68, i32 2, i32 2, i64* nonnull %keywords34176.sub.i), !dbg !77
  %rubyId_returns41.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !77
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_returns.10, i64 %rubyId_returns41.i, i32 16, i32 1, i32 0, i64* null), !dbg !77
  %rubyId_sig43.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !89
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_sig.11, i64 %rubyId_sig43.i, i32 20, i32 1, i32 0, i64* null), !dbg !89
  %rubyId_untyped46.i = load i64, i64* @rubyIdPrecomputed_untyped, align 8, !dbg !90
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_untyped.12, i64 %rubyId_untyped46.i, i32 16, i32 0, i32 0, i64* null), !dbg !90
  %rubyId_params48.i = load i64, i64* @rubyIdPrecomputed_params, align 8, !dbg !79
  %keywords49177.sub.i = getelementptr inbounds [2 x i64], [2 x i64]* %keywords49177.i, i64 0, i64 0
  %rubyId_x50.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !79
  %54 = call i64 @rb_id2sym(i64 %rubyId_x50.i) #10, !dbg !79
  store i64 %54, i64* %keywords49177.sub.i, align 8, !dbg !79
  %rubyId_y52.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !79
  %55 = call i64 @rb_id2sym(i64 %rubyId_y52.i) #10, !dbg !79
  %56 = getelementptr inbounds [2 x i64], [2 x i64]* %keywords49177.i, i64 0, i64 1, !dbg !79
  store i64 %55, i64* %56, align 8, !dbg !79
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_params.13, i64 %rubyId_params48.i, i32 68, i32 2, i32 2, i64* nonnull %keywords49177.sub.i), !dbg !79
  %rubyId_returns56.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !79
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_returns.14, i64 %rubyId_returns56.i, i32 16, i32 1, i32 0, i64* null), !dbg !79
  %rubyId_extend.i = load i64, i64* @rubyIdPrecomputed_extend, align 8, !dbg !91
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_extend, i64 %rubyId_extend.i, i32 20, i32 1, i32 0, i64* null), !dbg !91
  %rubyId_keep_def.i = load i64, i64* @rubyIdPrecomputed_keep_def, align 8, !dbg !92
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_keep_def, i64 %rubyId_keep_def.i, i32 16, i32 3, i32 0, i64* null), !dbg !92
  %rubyId_keep_def61.i = load i64, i64* @rubyIdPrecomputed_keep_def, align 8, !dbg !93
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_keep_def.15, i64 %rubyId_keep_def61.i, i32 16, i32 3, i32 0, i64* null), !dbg !93
  %rubyId_keep_def63.i = load i64, i64* @rubyIdPrecomputed_keep_def, align 8, !dbg !94
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_keep_def.16, i64 %rubyId_keep_def63.i, i32 16, i32 3, i32 0, i64* null), !dbg !94
  %rubyId_keep_def65.i = load i64, i64* @rubyIdPrecomputed_keep_def, align 8, !dbg !95
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_keep_def.17, i64 %rubyId_keep_def65.i, i32 16, i32 3, i32 0, i64* null), !dbg !95
  %rubyId_plus.i = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !96
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_plus, i64 %rubyId_plus.i, i32 20, i32 2, i32 0, i64* null), !dbg !96
  %rubyId_p.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !97
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p, i64 %rubyId_p.i, i32 20, i32 1, i32 0, i64* null), !dbg !97
  %rubyId_minus.i = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !98
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_minus, i64 %rubyId_minus.i, i32 20, i32 2, i32 0, i64* null), !dbg !98
  %rubyId_p73.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !99
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.18, i64 %rubyId_p73.i, i32 20, i32 1, i32 0, i64* null), !dbg !99
  %rubyId_lt.i = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !100
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lt, i64 %rubyId_lt.i, i32 20, i32 2, i32 0, i64* null), !dbg !100
  %rubyId_p78.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !101
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.19, i64 %rubyId_p78.i, i32 20, i32 1, i32 0, i64* null), !dbg !101
  %rubyId_lt81.i = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !102
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lt.20, i64 %rubyId_lt81.i, i32 20, i32 2, i32 0, i64* null), !dbg !102
  %rubyId_p84.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !103
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.21, i64 %rubyId_p84.i, i32 20, i32 1, i32 0, i64* null), !dbg !103
  %rubyId_lte.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !104
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lte, i64 %rubyId_lte.i, i32 20, i32 2, i32 0, i64* null), !dbg !104
  %rubyId_p89.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !105
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.22, i64 %rubyId_p89.i, i32 20, i32 1, i32 0, i64* null), !dbg !105
  %rubyId_lte92.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !106
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lte.23, i64 %rubyId_lte92.i, i32 20, i32 2, i32 0, i64* null), !dbg !106
  %rubyId_p95.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !107
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.24, i64 %rubyId_p95.i, i32 20, i32 1, i32 0, i64* null), !dbg !107
  %rubyId_lte98.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !108
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lte.25, i64 %rubyId_lte98.i, i32 20, i32 2, i32 0, i64* null), !dbg !108
  %rubyId_p101.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !109
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.26, i64 %rubyId_p101.i, i32 20, i32 1, i32 0, i64* null), !dbg !109
  %rubyId_plus104.i = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !110
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_plus.27, i64 %rubyId_plus104.i, i32 20, i32 2, i32 0, i64* null), !dbg !110
  %rubyId_p107.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !111
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.28, i64 %rubyId_p107.i, i32 20, i32 1, i32 0, i64* null), !dbg !111
  %57 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_8.9, i64 0, i64 0), i64 3) #10
  call void @rb_gc_register_mark_object(i64 %57) #10
  store i64 %57, i64* @rubyStrFrozen_8.9, align 8
  %rubyId_Rational.i = load i64, i64* @rubyIdPrecomputed_Rational, align 8, !dbg !112
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_Rational, i64 %rubyId_Rational.i, i32 16, i32 1, i32 0, i64* null), !dbg !112
  %rubyId_plus111.i = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !113
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_plus.29, i64 %rubyId_plus111.i, i32 20, i32 2, i32 0, i64* null), !dbg !113
  %rubyId_p114.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !114
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.30, i64 %rubyId_p114.i, i32 20, i32 1, i32 0, i64* null), !dbg !114
  %58 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_5, i64 0, i64 0), i64 1) #10
  call void @rb_gc_register_mark_object(i64 %58) #10
  store i64 %58, i64* @rubyStrFrozen_5, align 8
  %rubyId_Complex.i = load i64, i64* @rubyIdPrecomputed_Complex, align 8, !dbg !115
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_Complex, i64 %rubyId_Complex.i, i32 16, i32 2, i32 0, i64* null), !dbg !115
  %rubyId_plus118.i = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !116
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_plus.31, i64 %rubyId_plus118.i, i32 20, i32 2, i32 0, i64* null), !dbg !116
  %rubyId_p121.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !117
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.32, i64 %rubyId_p121.i, i32 20, i32 1, i32 0, i64* null), !dbg !117
  %rubyId_minus124.i = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !118
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_minus.33, i64 %rubyId_minus124.i, i32 20, i32 2, i32 0, i64* null), !dbg !118
  %rubyId_p127.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !119
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.34, i64 %rubyId_p127.i, i32 20, i32 1, i32 0, i64* null), !dbg !119
  %59 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str_15.4, i64 0, i64 0), i64 4) #10
  call void @rb_gc_register_mark_object(i64 %59) #10
  store i64 %59, i64* @rubyStrFrozen_15.4, align 8
  %rubyId_Rational130.i = load i64, i64* @rubyIdPrecomputed_Rational, align 8, !dbg !120
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_Rational.35, i64 %rubyId_Rational130.i, i32 16, i32 1, i32 0, i64* null), !dbg !120
  %rubyId_minus132.i = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !121
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_minus.36, i64 %rubyId_minus132.i, i32 20, i32 2, i32 0, i64* null), !dbg !121
  %rubyId_p135.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !122
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.37, i64 %rubyId_p135.i, i32 20, i32 1, i32 0, i64* null), !dbg !122
  %60 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_18, i64 0, i64 0), i64 2) #10
  call void @rb_gc_register_mark_object(i64 %60) #10
  store i64 %60, i64* @rubyStrFrozen_18, align 8
  %rubyId_Complex138.i = load i64, i64* @rubyIdPrecomputed_Complex, align 8, !dbg !123
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_Complex.38, i64 %rubyId_Complex138.i, i32 16, i32 2, i32 0, i64* null), !dbg !123
  %rubyId_minus140.i = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !124
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_minus.39, i64 %rubyId_minus140.i, i32 20, i32 2, i32 0, i64* null), !dbg !124
  %rubyId_p143.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !125
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.40, i64 %rubyId_p143.i, i32 20, i32 1, i32 0, i64* null), !dbg !125
  %rubyId_lt146.i = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !126
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lt.41, i64 %rubyId_lt146.i, i32 20, i32 2, i32 0, i64* null), !dbg !126
  %rubyId_p149.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !127
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.42, i64 %rubyId_p149.i, i32 20, i32 1, i32 0, i64* null), !dbg !127
  %61 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str_25.4, i64 0, i64 0), i64 4) #10
  call void @rb_gc_register_mark_object(i64 %61) #10
  store i64 %61, i64* @rubyStrFrozen_25.4, align 8
  %rubyId_Rational152.i = load i64, i64* @rubyIdPrecomputed_Rational, align 8, !dbg !128
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_Rational.43, i64 %rubyId_Rational152.i, i32 16, i32 1, i32 0, i64* null), !dbg !128
  %rubyId_lt154.i = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !129
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lt.44, i64 %rubyId_lt154.i, i32 20, i32 2, i32 0, i64* null), !dbg !129
  %rubyId_p157.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !130
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.45, i64 %rubyId_p157.i, i32 20, i32 1, i32 0, i64* null), !dbg !130
  %rubyId_lte160.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !131
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lte.46, i64 %rubyId_lte160.i, i32 20, i32 2, i32 0, i64* null), !dbg !131
  %rubyId_p163.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !132
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.47, i64 %rubyId_p163.i, i32 20, i32 1, i32 0, i64* null), !dbg !132
  %62 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str_5.923, i64 0, i64 0), i64 5) #10
  call void @rb_gc_register_mark_object(i64 %62) #10
  store i64 %62, i64* @rubyStrFrozen_5.923, align 8
  %rubyId_Rational166.i = load i64, i64* @rubyIdPrecomputed_Rational, align 8, !dbg !133
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_Rational.48, i64 %rubyId_Rational166.i, i32 16, i32 1, i32 0, i64* null), !dbg !133
  %rubyId_lte168.i = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !134
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_lte.49, i64 %rubyId_lte168.i, i32 20, i32 2, i32 0, i64* null), !dbg !134
  %rubyId_p171.i = load i64, i64* @rubyIdPrecomputed_p, align 8, !dbg !135
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_p.50, i64 %rubyId_p171.i, i32 20, i32 1, i32 0, i64* null), !dbg !135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3)
  %63 = load %struct.rb_vm_struct*, %struct.rb_vm_struct** @ruby_current_vm_ptr, align 8, !tbaa !12
  %64 = getelementptr inbounds %struct.rb_vm_struct, %struct.rb_vm_struct* %63, i64 0, i32 18
  %65 = load i64, i64* %64, align 8, !tbaa !136
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3)
  %stackFrame.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152", align 8
  %66 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !12
  %67 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %66, i64 0, i32 2
  %68 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %67, align 8, !tbaa !14
  %69 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %68, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame.i, %struct.rb_iseq_struct** %69, align 8, !tbaa !18
  %70 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %68, i64 0, i32 4
  %71 = load i64*, i64** %70, align 8, !tbaa !145
  %72 = load i64, i64* %71, align 8, !tbaa !4
  %73 = and i64 %72, -33
  store i64 %73, i64* %71, align 8, !tbaa !4
  call void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct* %66, %struct.rb_control_frame_struct* %68, %struct.rb_iseq_struct* %stackFrame.i) #10
  %74 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %68, i64 0, i32 0
  %75 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** %69, align 8, !tbaa !18
  %76 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %75, i64 0, i32 2
  %77 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %76, align 8, !tbaa !20
  %78 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %77, i64 0, i32 2
  %79 = load i64*, i64** %78, align 8, !tbaa !22
  %80 = getelementptr inbounds i64, i64* %79, i64 5
  store i64* %80, i64** %74, align 8, !dbg !89, !tbaa !12
  %81 = load i64, i64* @"guard_epoch_T::Sig", align 8, !dbg !91
  %82 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !91, !tbaa !146
  %needTakeSlowPath = icmp eq i64 %81, %82, !dbg !91
  br i1 %needTakeSlowPath, label %84, label %83, !dbg !91, !prof !147

83:                                               ; preds = %entry
  call void @"const_recompute_T::Sig"(), !dbg !91
  br label %84, !dbg !91

84:                                               ; preds = %entry, %83
  %85 = load i64, i64* @"guarded_const_T::Sig", align 8, !dbg !91
  %86 = load i64, i64* @"guard_epoch_T::Sig", align 8, !dbg !91
  %87 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !91, !tbaa !146
  %guardUpdated = icmp eq i64 %86, %87, !dbg !91
  call void @llvm.assume(i1 %guardUpdated), !dbg !91
  %88 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !91, !tbaa !12
  %89 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %88, i64 0, i32 2, !dbg !91
  %90 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %89, align 8, !dbg !91, !tbaa !14
  %91 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %90, i64 0, i32 1, !dbg !91
  %92 = load i64*, i64** %91, align 8, !dbg !91, !tbaa !53
  %93 = getelementptr inbounds i64, i64* %92, i64 1, !dbg !91
  store i64 %65, i64* %92, align 8, !dbg !91, !tbaa !4
  %94 = getelementptr inbounds i64, i64* %92, i64 2, !dbg !91
  store i64* %94, i64** %91, align 8, !dbg !91, !tbaa !53
  store i64 %85, i64* %93, align 8, !dbg !91, !tbaa !4
  %send.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_extend, i64 0) #10, !dbg !91
  %95 = getelementptr inbounds i64, i64* %79, i64 8, !dbg !91
  store i64* %95, i64** %74, align 8, !dbg !91, !tbaa !12
  %rubyId_plus.i1 = load i64, i64* @rubyIdPrecomputed_plus, align 8, !dbg !92
  %rawSym.i = call i64 @rb_id2sym(i64 %rubyId_plus.i1) #10, !dbg !92
  %rubyId_normal.i = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !92
  %rawSym270.i = call i64 @rb_id2sym(i64 %rubyId_normal.i) #10, !dbg !92
  %96 = load i64, i64* @rb_cObject, align 8, !dbg !92
  %stackFrame2727.i = load i8*, i8** bitcast (%struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#plus" to i8**), align 8, !dbg !92
  %97 = call noalias nonnull i8* @ruby_xcalloc(i64 1, i64 64) #12, !dbg !92
  %98 = bitcast i8* %97 to i16*, !dbg !92
  %99 = load i16, i16* %98, align 8, !dbg !92
  %100 = and i16 %99, -384, !dbg !92
  %101 = or i16 %100, 1, !dbg !92
  store i16 %101, i16* %98, align 8, !dbg !92
  %102 = getelementptr inbounds i8, i8* %97, i64 8, !dbg !92
  %103 = bitcast i8* %102 to i32*, !dbg !92
  store i32 2, i32* %103, align 8, !dbg !92, !tbaa !148
  %104 = getelementptr inbounds i8, i8* %97, i64 12, !dbg !92
  %105 = getelementptr inbounds i8, i8* %97, i64 4, !dbg !92
  %106 = bitcast i8* %105 to i32*, !dbg !92
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %104, i8 0, i64 20, i1 false) #10, !dbg !92
  store i32 2, i32* %106, align 4, !dbg !92, !tbaa !150
  %rubyId_x.i2 = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !92
  store i64 %rubyId_x.i2, i64* %keywords174.sub.i, align 8, !dbg !92
  %rubyId_y.i3 = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !92
  store i64 %rubyId_y.i3, i64* %47, align 8, !dbg !92
  %107 = call noalias nonnull i8* @ruby_xmalloc2(i64 2, i64 8) #12, !dbg !92
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %107, i8* nonnull align 8 %0, i64 16, i1 false) #10, !dbg !92
  %108 = getelementptr inbounds i8, i8* %97, i64 32, !dbg !92
  %109 = bitcast i8* %108 to i8**, !dbg !92
  store i8* %107, i8** %109, align 8, !dbg !92, !tbaa !151
  %110 = call i64 @rb_intern(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str_plus, i64 0, i64 0)) #10, !dbg !92
  %111 = bitcast i8* %97 to %struct.rb_sorbet_param_struct*, !dbg !92
  call void @rb_add_method_sorbet(i64 %96, i64 %110, i64 (i32, i64*, i64)* nonnull @"func_Object#plus", %struct.rb_sorbet_param_struct* nonnull %111, i32 1, i8* %stackFrame2727.i) #10, !dbg !92
  %112 = getelementptr inbounds i64, i64* %79, i64 13, !dbg !92
  store i64* %112, i64** %74, align 8, !dbg !92, !tbaa !12
  %rubyId_minus.i4 = load i64, i64* @rubyIdPrecomputed_minus, align 8, !dbg !93
  %rawSym279.i = call i64 @rb_id2sym(i64 %rubyId_minus.i4) #10, !dbg !93
  %rubyId_normal280.i = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !93
  %rawSym281.i = call i64 @rb_id2sym(i64 %rubyId_normal280.i) #10, !dbg !93
  %stackFrame2865.i = load i8*, i8** bitcast (%struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#minus" to i8**), align 8, !dbg !93
  %113 = call noalias nonnull i8* @ruby_xcalloc(i64 1, i64 64) #12, !dbg !93
  %114 = bitcast i8* %113 to i16*, !dbg !93
  %115 = load i16, i16* %114, align 8, !dbg !93
  %116 = and i16 %115, -384, !dbg !93
  %117 = or i16 %116, 1, !dbg !93
  store i16 %117, i16* %114, align 8, !dbg !93
  %118 = getelementptr inbounds i8, i8* %113, i64 8, !dbg !93
  %119 = bitcast i8* %118 to i32*, !dbg !93
  store i32 2, i32* %119, align 8, !dbg !93, !tbaa !148
  %120 = getelementptr inbounds i8, i8* %113, i64 12, !dbg !93
  %121 = getelementptr inbounds i8, i8* %113, i64 4, !dbg !93
  %122 = bitcast i8* %121 to i32*, !dbg !93
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %120, i8 0, i64 20, i1 false) #10, !dbg !93
  store i32 2, i32* %122, align 4, !dbg !93, !tbaa !150
  %rubyId_x289.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !93
  store i64 %rubyId_x289.i, i64* %keywords17175.sub.i, align 8, !dbg !93
  %rubyId_y290.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !93
  store i64 %rubyId_y290.i, i64* %50, align 8, !dbg !93
  %123 = call noalias nonnull i8* @ruby_xmalloc2(i64 2, i64 8) #12, !dbg !93
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %123, i8* nonnull align 8 %1, i64 16, i1 false) #10, !dbg !93
  %124 = getelementptr inbounds i8, i8* %113, i64 32, !dbg !93
  %125 = bitcast i8* %124 to i8**, !dbg !93
  store i8* %123, i8** %125, align 8, !dbg !93, !tbaa !151
  %126 = call i64 @rb_intern(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str_minus, i64 0, i64 0)) #10, !dbg !93
  %127 = bitcast i8* %113 to %struct.rb_sorbet_param_struct*, !dbg !93
  call void @rb_add_method_sorbet(i64 %96, i64 %126, i64 (i32, i64*, i64)* nonnull @"func_Object#minus", %struct.rb_sorbet_param_struct* nonnull %127, i32 1, i8* %stackFrame2865.i) #10, !dbg !93
  %128 = getelementptr inbounds i64, i64* %79, i64 18, !dbg !93
  store i64* %128, i64** %74, align 8, !dbg !93, !tbaa !12
  %rubyId_lt.i5 = load i64, i64* @rubyIdPrecomputed_lt, align 8, !dbg !94
  %rawSym297.i = call i64 @rb_id2sym(i64 %rubyId_lt.i5) #10, !dbg !94
  %rubyId_normal298.i = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !94
  %rawSym299.i = call i64 @rb_id2sym(i64 %rubyId_normal298.i) #10, !dbg !94
  %stackFrame3043.i = load i8*, i8** bitcast (%struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#lt" to i8**), align 8, !dbg !94
  %129 = call noalias nonnull i8* @ruby_xcalloc(i64 1, i64 64) #12, !dbg !94
  %130 = bitcast i8* %129 to i16*, !dbg !94
  %131 = load i16, i16* %130, align 8, !dbg !94
  %132 = and i16 %131, -384, !dbg !94
  %133 = or i16 %132, 1, !dbg !94
  store i16 %133, i16* %130, align 8, !dbg !94
  %134 = getelementptr inbounds i8, i8* %129, i64 8, !dbg !94
  %135 = bitcast i8* %134 to i32*, !dbg !94
  store i32 2, i32* %135, align 8, !dbg !94, !tbaa !148
  %136 = getelementptr inbounds i8, i8* %129, i64 12, !dbg !94
  %137 = getelementptr inbounds i8, i8* %129, i64 4, !dbg !94
  %138 = bitcast i8* %137 to i32*, !dbg !94
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %136, i8 0, i64 20, i1 false) #10, !dbg !94
  store i32 2, i32* %138, align 4, !dbg !94, !tbaa !150
  %rubyId_x307.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !94
  store i64 %rubyId_x307.i, i64* %keywords34176.sub.i, align 8, !dbg !94
  %rubyId_y308.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !94
  store i64 %rubyId_y308.i, i64* %53, align 8, !dbg !94
  %139 = call noalias nonnull i8* @ruby_xmalloc2(i64 2, i64 8) #12, !dbg !94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %139, i8* nonnull align 8 %2, i64 16, i1 false) #10, !dbg !94
  %140 = getelementptr inbounds i8, i8* %129, i64 32, !dbg !94
  %141 = bitcast i8* %140 to i8**, !dbg !94
  store i8* %139, i8** %141, align 8, !dbg !94, !tbaa !151
  %142 = call i64 @rb_intern(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_lt, i64 0, i64 0)) #10, !dbg !94
  %143 = bitcast i8* %129 to %struct.rb_sorbet_param_struct*, !dbg !94
  call void @rb_add_method_sorbet(i64 %96, i64 %142, i64 (i32, i64*, i64)* nonnull @"func_Object#lt", %struct.rb_sorbet_param_struct* nonnull %143, i32 1, i8* %stackFrame3043.i) #10, !dbg !94
  %144 = getelementptr inbounds i64, i64* %79, i64 23, !dbg !94
  store i64* %144, i64** %74, align 8, !dbg !94, !tbaa !12
  %rubyId_lte.i6 = load i64, i64* @rubyIdPrecomputed_lte, align 8, !dbg !95
  %rawSym315.i = call i64 @rb_id2sym(i64 %rubyId_lte.i6) #10, !dbg !95
  %rubyId_normal316.i = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !95
  %rawSym317.i = call i64 @rb_id2sym(i64 %rubyId_normal316.i) #10, !dbg !95
  %stackFrame3221.i = load i8*, i8** bitcast (%struct.rb_iseq_struct** @"stackFramePrecomputed_func_Object#lte" to i8**), align 8, !dbg !95
  %145 = call noalias nonnull i8* @ruby_xcalloc(i64 1, i64 64) #12, !dbg !95
  %146 = bitcast i8* %145 to i16*, !dbg !95
  %147 = load i16, i16* %146, align 8, !dbg !95
  %148 = and i16 %147, -384, !dbg !95
  %149 = or i16 %148, 1, !dbg !95
  store i16 %149, i16* %146, align 8, !dbg !95
  %150 = getelementptr inbounds i8, i8* %145, i64 8, !dbg !95
  %151 = bitcast i8* %150 to i32*, !dbg !95
  store i32 2, i32* %151, align 8, !dbg !95, !tbaa !148
  %152 = getelementptr inbounds i8, i8* %145, i64 12, !dbg !95
  %153 = getelementptr inbounds i8, i8* %145, i64 4, !dbg !95
  %154 = bitcast i8* %153 to i32*, !dbg !95
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %152, i8 0, i64 20, i1 false) #10, !dbg !95
  store i32 2, i32* %154, align 4, !dbg !95, !tbaa !150
  %rubyId_x325.i = load i64, i64* @rubyIdPrecomputed_x, align 8, !dbg !95
  store i64 %rubyId_x325.i, i64* %keywords49177.sub.i, align 8, !dbg !95
  %rubyId_y326.i = load i64, i64* @rubyIdPrecomputed_y, align 8, !dbg !95
  store i64 %rubyId_y326.i, i64* %56, align 8, !dbg !95
  %155 = call noalias nonnull i8* @ruby_xmalloc2(i64 2, i64 8) #12, !dbg !95
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %155, i8* nonnull align 8 %3, i64 16, i1 false) #10, !dbg !95
  %156 = getelementptr inbounds i8, i8* %145, i64 32, !dbg !95
  %157 = bitcast i8* %156 to i8**, !dbg !95
  store i8* %155, i8** %157, align 8, !dbg !95, !tbaa !151
  %158 = call i64 @rb_intern(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_lte, i64 0, i64 0)) #10, !dbg !95
  %159 = bitcast i8* %145 to %struct.rb_sorbet_param_struct*, !dbg !95
  call void @rb_add_method_sorbet(i64 %96, i64 %158, i64 (i32, i64*, i64)* nonnull @"func_Object#lte", %struct.rb_sorbet_param_struct* nonnull %159, i32 1, i8* %stackFrame3221.i) #10, !dbg !95
  %160 = getelementptr inbounds i64, i64* %79, i64 27, !dbg !95
  store i64* %160, i64** %74, align 8, !dbg !95, !tbaa !12
  %161 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !96, !tbaa !12
  %162 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %161, i64 0, i32 2, !dbg !96
  %163 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %162, align 8, !dbg !96, !tbaa !14
  %164 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %163, i64 0, i32 1, !dbg !96
  %165 = load i64*, i64** %164, align 8, !dbg !96, !tbaa !53
  %166 = getelementptr inbounds i64, i64* %165, i64 1, !dbg !96
  store i64 %65, i64* %165, align 8, !dbg !96, !tbaa !4
  %167 = getelementptr inbounds i64, i64* %165, i64 3, !dbg !96
  store i64* %167, i64** %164, align 8, !dbg !96, !tbaa !53
  %168 = bitcast i64* %166 to <2 x i64>*, !dbg !96
  store <2 x i64> <i64 45035996273704962, i64 54043195528445954>, <2 x i64>* %168, align 8, !dbg !96, !tbaa !4
  %send339.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_plus, i64 0) #10, !dbg !96
  %169 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !97, !tbaa !12
  %170 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %169, i64 0, i32 2, !dbg !97
  %171 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %170, align 8, !dbg !97, !tbaa !14
  %172 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %171, i64 0, i32 1, !dbg !97
  %173 = load i64*, i64** %172, align 8, !dbg !97, !tbaa !53
  %174 = getelementptr inbounds i64, i64* %173, i64 1, !dbg !97
  store i64 %65, i64* %173, align 8, !dbg !97, !tbaa !4
  %175 = getelementptr inbounds i64, i64* %173, i64 2, !dbg !97
  store i64* %175, i64** %172, align 8, !dbg !97, !tbaa !53
  store i64 %send339.i, i64* %174, align 8, !dbg !97, !tbaa !4
  %send344.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p, i64 0) #10, !dbg !97
  %176 = getelementptr inbounds i64, i64* %79, i64 28, !dbg !97
  store i64* %176, i64** %74, align 8, !dbg !97, !tbaa !12
  %177 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !98, !tbaa !12
  %178 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %177, i64 0, i32 2, !dbg !98
  %179 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %178, align 8, !dbg !98, !tbaa !14
  %180 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %179, i64 0, i32 1, !dbg !98
  %181 = load i64*, i64** %180, align 8, !dbg !98, !tbaa !53
  %182 = getelementptr inbounds i64, i64* %181, i64 1, !dbg !98
  store i64 %65, i64* %181, align 8, !dbg !98, !tbaa !4
  %183 = getelementptr inbounds i64, i64* %181, i64 3, !dbg !98
  store i64* %183, i64** %180, align 8, !dbg !98, !tbaa !53
  %184 = bitcast i64* %182 to <2 x i64>*, !dbg !98
  store <2 x i64> <i64 146704757861593906, i64 194442913911721170>, <2 x i64>* %184, align 8, !dbg !98, !tbaa !4
  %send352.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_minus, i64 0) #10, !dbg !98
  %185 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !99, !tbaa !12
  %186 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %185, i64 0, i32 2, !dbg !99
  %187 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %186, align 8, !dbg !99, !tbaa !14
  %188 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %187, i64 0, i32 1, !dbg !99
  %189 = load i64*, i64** %188, align 8, !dbg !99, !tbaa !53
  %190 = getelementptr inbounds i64, i64* %189, i64 1, !dbg !99
  store i64 %65, i64* %189, align 8, !dbg !99, !tbaa !4
  %191 = getelementptr inbounds i64, i64* %189, i64 2, !dbg !99
  store i64* %191, i64** %188, align 8, !dbg !99, !tbaa !53
  store i64 %send352.i, i64* %190, align 8, !dbg !99, !tbaa !4
  %send358.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.18, i64 0) #10, !dbg !99
  %192 = getelementptr inbounds i64, i64* %79, i64 29, !dbg !99
  store i64* %192, i64** %74, align 8, !dbg !99, !tbaa !12
  %193 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !100, !tbaa !12
  %194 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %193, i64 0, i32 2, !dbg !100
  %195 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %194, align 8, !dbg !100, !tbaa !14
  %196 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %195, i64 0, i32 1, !dbg !100
  %197 = load i64*, i64** %196, align 8, !dbg !100, !tbaa !53
  %198 = getelementptr inbounds i64, i64* %197, i64 1, !dbg !100
  store i64 %65, i64* %197, align 8, !dbg !100, !tbaa !4
  %199 = getelementptr inbounds i64, i64* %197, i64 3, !dbg !100
  store i64* %199, i64** %196, align 8, !dbg !100, !tbaa !53
  %200 = bitcast i64* %198 to <2 x i64>*, !dbg !100
  store <2 x i64> <i64 193204424014194282, i64 53142475602971858>, <2 x i64>* %200, align 8, !dbg !100, !tbaa !4
  %send366.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lt, i64 0) #10, !dbg !100
  %201 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !101, !tbaa !12
  %202 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %201, i64 0, i32 2, !dbg !101
  %203 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %202, align 8, !dbg !101, !tbaa !14
  %204 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %203, i64 0, i32 1, !dbg !101
  %205 = load i64*, i64** %204, align 8, !dbg !101, !tbaa !53
  %206 = getelementptr inbounds i64, i64* %205, i64 1, !dbg !101
  store i64 %65, i64* %205, align 8, !dbg !101, !tbaa !4
  %207 = getelementptr inbounds i64, i64* %205, i64 2, !dbg !101
  store i64* %207, i64** %204, align 8, !dbg !101, !tbaa !53
  store i64 %send366.i, i64* %206, align 8, !dbg !101, !tbaa !4
  %send372.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.19, i64 0) #10, !dbg !101
  %208 = getelementptr inbounds i64, i64* %79, i64 30, !dbg !101
  store i64* %208, i64** %74, align 8, !dbg !101, !tbaa !12
  %209 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !102, !tbaa !12
  %210 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %209, i64 0, i32 2, !dbg !102
  %211 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %210, align 8, !dbg !102, !tbaa !14
  %212 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %211, i64 0, i32 1, !dbg !102
  %213 = load i64*, i64** %212, align 8, !dbg !102, !tbaa !53
  %214 = getelementptr inbounds i64, i64* %213, i64 1, !dbg !102
  store i64 %65, i64* %213, align 8, !dbg !102, !tbaa !4
  %215 = getelementptr inbounds i64, i64* %213, i64 3, !dbg !102
  store i64* %215, i64** %212, align 8, !dbg !102, !tbaa !53
  %216 = bitcast i64* %214 to <2 x i64>*, !dbg !102
  store <2 x i64> <i64 61248954932238746, i64 133982088914272258>, <2 x i64>* %216, align 8, !dbg !102, !tbaa !4
  %send381.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lt.20, i64 0) #10, !dbg !102
  %217 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !103, !tbaa !12
  %218 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %217, i64 0, i32 2, !dbg !103
  %219 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %218, align 8, !dbg !103, !tbaa !14
  %220 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %219, i64 0, i32 1, !dbg !103
  %221 = load i64*, i64** %220, align 8, !dbg !103, !tbaa !53
  %222 = getelementptr inbounds i64, i64* %221, i64 1, !dbg !103
  store i64 %65, i64* %221, align 8, !dbg !103, !tbaa !4
  %223 = getelementptr inbounds i64, i64* %221, i64 2, !dbg !103
  store i64* %223, i64** %220, align 8, !dbg !103, !tbaa !53
  store i64 %send381.i, i64* %222, align 8, !dbg !103, !tbaa !4
  %send387.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.21, i64 0) #10, !dbg !103
  %224 = getelementptr inbounds i64, i64* %79, i64 31, !dbg !103
  store i64* %224, i64** %74, align 8, !dbg !103, !tbaa !12
  %225 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !104, !tbaa !12
  %226 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %225, i64 0, i32 2, !dbg !104
  %227 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %226, align 8, !dbg !104, !tbaa !14
  %228 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %227, i64 0, i32 1, !dbg !104
  %229 = load i64*, i64** %228, align 8, !dbg !104, !tbaa !53
  %230 = getelementptr inbounds i64, i64* %229, i64 1, !dbg !104
  store i64 %65, i64* %229, align 8, !dbg !104, !tbaa !4
  %231 = getelementptr inbounds i64, i64* %229, i64 3, !dbg !104
  store i64* %231, i64** %228, align 8, !dbg !104, !tbaa !53
  %232 = bitcast i64* %230 to <2 x i64>*, !dbg !104
  store <2 x i64> <i64 180200280090161970, i64 155261597153597850>, <2 x i64>* %232, align 8, !dbg !104, !tbaa !4
  %send395.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lte, i64 0) #10, !dbg !104
  %233 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !105, !tbaa !12
  %234 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %233, i64 0, i32 2, !dbg !105
  %235 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %234, align 8, !dbg !105, !tbaa !14
  %236 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %235, i64 0, i32 1, !dbg !105
  %237 = load i64*, i64** %236, align 8, !dbg !105, !tbaa !53
  %238 = getelementptr inbounds i64, i64* %237, i64 1, !dbg !105
  store i64 %65, i64* %237, align 8, !dbg !105, !tbaa !4
  %239 = getelementptr inbounds i64, i64* %237, i64 2, !dbg !105
  store i64* %239, i64** %236, align 8, !dbg !105, !tbaa !53
  store i64 %send395.i, i64* %238, align 8, !dbg !105, !tbaa !4
  %send401.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.22, i64 0) #10, !dbg !105
  %240 = getelementptr inbounds i64, i64* %79, i64 32, !dbg !105
  store i64* %240, i64** %74, align 8, !dbg !105, !tbaa !12
  %241 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !106, !tbaa !12
  %242 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %241, i64 0, i32 2, !dbg !106
  %243 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %242, align 8, !dbg !106, !tbaa !14
  %244 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %243, i64 0, i32 1, !dbg !106
  %245 = load i64*, i64** %244, align 8, !dbg !106, !tbaa !53
  %246 = getelementptr inbounds i64, i64* %245, i64 1, !dbg !106
  store i64 %65, i64* %245, align 8, !dbg !106, !tbaa !4
  %247 = getelementptr inbounds i64, i64* %245, i64 3, !dbg !106
  store i64* %247, i64** %244, align 8, !dbg !106, !tbaa !53
  %248 = bitcast i64* %246 to <2 x i64>*, !dbg !106
  store <2 x i64> <i64 57646075230342354, i64 155261597153597850>, <2 x i64>* %248, align 8, !dbg !106, !tbaa !4
  %send410.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lte.23, i64 0) #10, !dbg !106
  %249 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !107, !tbaa !12
  %250 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %249, i64 0, i32 2, !dbg !107
  %251 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %250, align 8, !dbg !107, !tbaa !14
  %252 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %251, i64 0, i32 1, !dbg !107
  %253 = load i64*, i64** %252, align 8, !dbg !107, !tbaa !53
  %254 = getelementptr inbounds i64, i64* %253, i64 1, !dbg !107
  store i64 %65, i64* %253, align 8, !dbg !107, !tbaa !4
  %255 = getelementptr inbounds i64, i64* %253, i64 2, !dbg !107
  store i64* %255, i64** %252, align 8, !dbg !107, !tbaa !53
  store i64 %send410.i, i64* %254, align 8, !dbg !107, !tbaa !4
  %send416.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.24, i64 0) #10, !dbg !107
  %256 = getelementptr inbounds i64, i64* %79, i64 33, !dbg !107
  store i64* %256, i64** %74, align 8, !dbg !107, !tbaa !12
  %257 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !108, !tbaa !12
  %258 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %257, i64 0, i32 2, !dbg !108
  %259 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %258, align 8, !dbg !108, !tbaa !14
  %260 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %259, i64 0, i32 1, !dbg !108
  %261 = load i64*, i64** %260, align 8, !dbg !108, !tbaa !53
  %262 = getelementptr inbounds i64, i64* %261, i64 1, !dbg !108
  store i64 %65, i64* %261, align 8, !dbg !108, !tbaa !4
  %263 = getelementptr inbounds i64, i64* %261, i64 3, !dbg !108
  store i64* %263, i64** %260, align 8, !dbg !108, !tbaa !53
  %264 = bitcast i64* %262 to <2 x i64>*, !dbg !108
  store <2 x i64> <i64 75660473739824338, i64 75660473739824338>, <2 x i64>* %264, align 8, !dbg !108, !tbaa !4
  %send425.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lte.25, i64 0) #10, !dbg !108
  %265 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !109, !tbaa !12
  %266 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %265, i64 0, i32 2, !dbg !109
  %267 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %266, align 8, !dbg !109, !tbaa !14
  %268 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %267, i64 0, i32 1, !dbg !109
  %269 = load i64*, i64** %268, align 8, !dbg !109, !tbaa !53
  %270 = getelementptr inbounds i64, i64* %269, i64 1, !dbg !109
  store i64 %65, i64* %269, align 8, !dbg !109, !tbaa !4
  %271 = getelementptr inbounds i64, i64* %269, i64 2, !dbg !109
  store i64* %271, i64** %268, align 8, !dbg !109, !tbaa !53
  store i64 %send425.i, i64* %270, align 8, !dbg !109, !tbaa !4
  %send431.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.26, i64 0) #10, !dbg !109
  %272 = getelementptr inbounds i64, i64* %79, i64 36, !dbg !109
  store i64* %272, i64** %74, align 8, !dbg !109, !tbaa !12
  %273 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !110, !tbaa !12
  %274 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %273, i64 0, i32 2, !dbg !110
  %275 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %274, align 8, !dbg !110, !tbaa !14
  %276 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %275, i64 0, i32 1, !dbg !110
  %277 = load i64*, i64** %276, align 8, !dbg !110, !tbaa !53
  %278 = getelementptr inbounds i64, i64* %277, i64 1, !dbg !110
  store i64 %65, i64* %277, align 8, !dbg !110, !tbaa !4
  %279 = getelementptr inbounds i64, i64* %277, i64 3, !dbg !110
  store i64* %279, i64** %276, align 8, !dbg !110, !tbaa !53
  %280 = bitcast i64* %278 to <2 x i64>*, !dbg !110
  store <2 x i64> <i64 45035996273704962, i64 17>, <2 x i64>* %280, align 8, !dbg !110, !tbaa !4
  %send439.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_plus.27, i64 0) #10, !dbg !110
  %281 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !111, !tbaa !12
  %282 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %281, i64 0, i32 2, !dbg !111
  %283 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %282, align 8, !dbg !111, !tbaa !14
  %284 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %283, i64 0, i32 1, !dbg !111
  %285 = load i64*, i64** %284, align 8, !dbg !111, !tbaa !53
  %286 = getelementptr inbounds i64, i64* %285, i64 1, !dbg !111
  store i64 %65, i64* %285, align 8, !dbg !111, !tbaa !4
  %287 = getelementptr inbounds i64, i64* %285, i64 2, !dbg !111
  store i64* %287, i64** %284, align 8, !dbg !111, !tbaa !53
  store i64 %send439.i, i64* %286, align 8, !dbg !111, !tbaa !4
  %send445.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.28, i64 0) #10, !dbg !111
  %288 = getelementptr inbounds i64, i64* %79, i64 37, !dbg !111
  store i64* %288, i64** %74, align 8, !dbg !111, !tbaa !12
  %rubyStr_8.9.i = load i64, i64* @rubyStrFrozen_8.9, align 8, !dbg !112
  %289 = load i64, i64* @rb_mKernel, align 8, !dbg !112
  %290 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !112, !tbaa !12
  %291 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %290, i64 0, i32 2, !dbg !112
  %292 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %291, align 8, !dbg !112, !tbaa !14
  %293 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %292, i64 0, i32 1, !dbg !112
  %294 = load i64*, i64** %293, align 8, !dbg !112, !tbaa !53
  %295 = getelementptr inbounds i64, i64* %294, i64 1, !dbg !112
  store i64 %289, i64* %294, align 8, !dbg !112, !tbaa !4
  %296 = getelementptr inbounds i64, i64* %294, i64 2, !dbg !112
  store i64* %296, i64** %293, align 8, !dbg !112, !tbaa !53
  store i64 %rubyStr_8.9.i, i64* %295, align 8, !dbg !112, !tbaa !4
  %send450.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_Rational, i64 0) #10, !dbg !112
  %297 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !113, !tbaa !12
  %298 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %297, i64 0, i32 2, !dbg !113
  %299 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %298, align 8, !dbg !113, !tbaa !14
  %300 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %299, i64 0, i32 1, !dbg !113
  %301 = load i64*, i64** %300, align 8, !dbg !113, !tbaa !53
  %302 = getelementptr inbounds i64, i64* %301, i64 1, !dbg !113
  store i64 %65, i64* %301, align 8, !dbg !113, !tbaa !4
  %303 = getelementptr inbounds i64, i64* %301, i64 2, !dbg !113
  store i64 36028797018963970, i64* %302, align 8, !dbg !113, !tbaa !4
  %304 = getelementptr inbounds i64, i64* %301, i64 3, !dbg !113
  store i64* %304, i64** %300, align 8, !dbg !113, !tbaa !53
  store i64 %send450.i, i64* %303, align 8, !dbg !113, !tbaa !4
  %send457.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_plus.29, i64 0) #10, !dbg !113
  %305 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !114, !tbaa !12
  %306 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %305, i64 0, i32 2, !dbg !114
  %307 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %306, align 8, !dbg !114, !tbaa !14
  %308 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %307, i64 0, i32 1, !dbg !114
  %309 = load i64*, i64** %308, align 8, !dbg !114, !tbaa !53
  %310 = getelementptr inbounds i64, i64* %309, i64 1, !dbg !114
  store i64 %65, i64* %309, align 8, !dbg !114, !tbaa !4
  %311 = getelementptr inbounds i64, i64* %309, i64 2, !dbg !114
  store i64* %311, i64** %308, align 8, !dbg !114, !tbaa !53
  store i64 %send457.i, i64* %310, align 8, !dbg !114, !tbaa !4
  %send463.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.30, i64 0) #10, !dbg !114
  %312 = getelementptr inbounds i64, i64* %79, i64 38, !dbg !114
  store i64* %312, i64** %74, align 8, !dbg !114, !tbaa !12
  %rubyStr_5.i = load i64, i64* @rubyStrFrozen_5, align 8, !dbg !115
  %313 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !115, !tbaa !12
  %314 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %313, i64 0, i32 2, !dbg !115
  %315 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %314, align 8, !dbg !115, !tbaa !14
  %316 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %315, i64 0, i32 1, !dbg !115
  %317 = load i64*, i64** %316, align 8, !dbg !115, !tbaa !53
  %318 = getelementptr inbounds i64, i64* %317, i64 1, !dbg !115
  store i64 %289, i64* %317, align 8, !dbg !115, !tbaa !4
  %319 = getelementptr inbounds i64, i64* %317, i64 2, !dbg !115
  store i64 1, i64* %318, align 8, !dbg !115, !tbaa !4
  %320 = getelementptr inbounds i64, i64* %317, i64 3, !dbg !115
  store i64* %320, i64** %316, align 8, !dbg !115, !tbaa !53
  store i64 %rubyStr_5.i, i64* %319, align 8, !dbg !115, !tbaa !4
  %send470.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_Complex, i64 0) #10, !dbg !115
  %321 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !116, !tbaa !12
  %322 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %321, i64 0, i32 2, !dbg !116
  %323 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %322, align 8, !dbg !116, !tbaa !14
  %324 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %323, i64 0, i32 1, !dbg !116
  %325 = load i64*, i64** %324, align 8, !dbg !116, !tbaa !53
  %326 = getelementptr inbounds i64, i64* %325, i64 1, !dbg !116
  store i64 %65, i64* %325, align 8, !dbg !116, !tbaa !4
  %327 = getelementptr inbounds i64, i64* %325, i64 2, !dbg !116
  store i64 36028797018963970, i64* %326, align 8, !dbg !116, !tbaa !4
  %328 = getelementptr inbounds i64, i64* %325, i64 3, !dbg !116
  store i64* %328, i64** %324, align 8, !dbg !116, !tbaa !53
  store i64 %send470.i, i64* %327, align 8, !dbg !116, !tbaa !4
  %send477.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_plus.31, i64 0) #10, !dbg !116
  %329 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !117, !tbaa !12
  %330 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %329, i64 0, i32 2, !dbg !117
  %331 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %330, align 8, !dbg !117, !tbaa !14
  %332 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %331, i64 0, i32 1, !dbg !117
  %333 = load i64*, i64** %332, align 8, !dbg !117, !tbaa !53
  %334 = getelementptr inbounds i64, i64* %333, i64 1, !dbg !117
  store i64 %65, i64* %333, align 8, !dbg !117, !tbaa !4
  %335 = getelementptr inbounds i64, i64* %333, i64 2, !dbg !117
  store i64* %335, i64** %332, align 8, !dbg !117, !tbaa !53
  store i64 %send477.i, i64* %334, align 8, !dbg !117, !tbaa !4
  %send483.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.32, i64 0) #10, !dbg !117
  %336 = getelementptr inbounds i64, i64* %79, i64 40, !dbg !117
  store i64* %336, i64** %74, align 8, !dbg !117, !tbaa !12
  %337 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !118, !tbaa !12
  %338 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %337, i64 0, i32 2, !dbg !118
  %339 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %338, align 8, !dbg !118, !tbaa !14
  %340 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %339, i64 0, i32 1, !dbg !118
  %341 = load i64*, i64** %340, align 8, !dbg !118, !tbaa !53
  %342 = getelementptr inbounds i64, i64* %341, i64 1, !dbg !118
  store i64 %65, i64* %341, align 8, !dbg !118, !tbaa !4
  %343 = getelementptr inbounds i64, i64* %341, i64 3, !dbg !118
  store i64* %343, i64** %340, align 8, !dbg !118, !tbaa !53
  %344 = bitcast i64* %342 to <2 x i64>*, !dbg !118
  store <2 x i64> <i64 199678348478539370, i64 7>, <2 x i64>* %344, align 8, !dbg !118, !tbaa !4
  %send492.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_minus.33, i64 0) #10, !dbg !118
  %345 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !119, !tbaa !12
  %346 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %345, i64 0, i32 2, !dbg !119
  %347 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %346, align 8, !dbg !119, !tbaa !14
  %348 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %347, i64 0, i32 1, !dbg !119
  %349 = load i64*, i64** %348, align 8, !dbg !119, !tbaa !53
  %350 = getelementptr inbounds i64, i64* %349, i64 1, !dbg !119
  store i64 %65, i64* %349, align 8, !dbg !119, !tbaa !4
  %351 = getelementptr inbounds i64, i64* %349, i64 2, !dbg !119
  store i64* %351, i64** %348, align 8, !dbg !119, !tbaa !53
  store i64 %send492.i, i64* %350, align 8, !dbg !119, !tbaa !4
  %send498.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.34, i64 0) #10, !dbg !119
  %352 = getelementptr inbounds i64, i64* %79, i64 41, !dbg !119
  store i64* %352, i64** %74, align 8, !dbg !119, !tbaa !12
  %rubyStr_15.4.i = load i64, i64* @rubyStrFrozen_15.4, align 8, !dbg !120
  %353 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !120, !tbaa !12
  %354 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %353, i64 0, i32 2, !dbg !120
  %355 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %354, align 8, !dbg !120, !tbaa !14
  %356 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %355, i64 0, i32 1, !dbg !120
  %357 = load i64*, i64** %356, align 8, !dbg !120, !tbaa !53
  %358 = getelementptr inbounds i64, i64* %357, i64 1, !dbg !120
  store i64 %289, i64* %357, align 8, !dbg !120, !tbaa !4
  %359 = getelementptr inbounds i64, i64* %357, i64 2, !dbg !120
  store i64* %359, i64** %356, align 8, !dbg !120, !tbaa !53
  store i64 %rubyStr_15.4.i, i64* %358, align 8, !dbg !120, !tbaa !4
  %send504.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_Rational.35, i64 0) #10, !dbg !120
  %360 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !121, !tbaa !12
  %361 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %360, i64 0, i32 2, !dbg !121
  %362 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %361, align 8, !dbg !121, !tbaa !14
  %363 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %362, i64 0, i32 1, !dbg !121
  %364 = load i64*, i64** %363, align 8, !dbg !121, !tbaa !53
  %365 = getelementptr inbounds i64, i64* %364, i64 1, !dbg !121
  store i64 %65, i64* %364, align 8, !dbg !121, !tbaa !4
  %366 = getelementptr inbounds i64, i64* %364, i64 2, !dbg !121
  store i64 199622053483197234, i64* %365, align 8, !dbg !121, !tbaa !4
  %367 = getelementptr inbounds i64, i64* %364, i64 3, !dbg !121
  store i64* %367, i64** %363, align 8, !dbg !121, !tbaa !53
  store i64 %send504.i, i64* %366, align 8, !dbg !121, !tbaa !4
  %send511.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_minus.36, i64 0) #10, !dbg !121
  %368 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !122, !tbaa !12
  %369 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %368, i64 0, i32 2, !dbg !122
  %370 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %369, align 8, !dbg !122, !tbaa !14
  %371 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %370, i64 0, i32 1, !dbg !122
  %372 = load i64*, i64** %371, align 8, !dbg !122, !tbaa !53
  %373 = getelementptr inbounds i64, i64* %372, i64 1, !dbg !122
  store i64 %65, i64* %372, align 8, !dbg !122, !tbaa !4
  %374 = getelementptr inbounds i64, i64* %372, i64 2, !dbg !122
  store i64* %374, i64** %371, align 8, !dbg !122, !tbaa !53
  store i64 %send511.i, i64* %373, align 8, !dbg !122, !tbaa !4
  %send517.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.37, i64 0) #10, !dbg !122
  %375 = getelementptr inbounds i64, i64* %79, i64 42, !dbg !122
  store i64* %375, i64** %74, align 8, !dbg !122, !tbaa !12
  %rubyStr_18.i = load i64, i64* @rubyStrFrozen_18, align 8, !dbg !123
  %376 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !123, !tbaa !12
  %377 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %376, i64 0, i32 2, !dbg !123
  %378 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %377, align 8, !dbg !123, !tbaa !14
  %379 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %378, i64 0, i32 1, !dbg !123
  %380 = load i64*, i64** %379, align 8, !dbg !123, !tbaa !53
  %381 = getelementptr inbounds i64, i64* %380, i64 1, !dbg !123
  store i64 %289, i64* %380, align 8, !dbg !123, !tbaa !4
  %382 = getelementptr inbounds i64, i64* %380, i64 2, !dbg !123
  store i64 1, i64* %381, align 8, !dbg !123, !tbaa !4
  %383 = getelementptr inbounds i64, i64* %380, i64 3, !dbg !123
  store i64* %383, i64** %379, align 8, !dbg !123, !tbaa !53
  store i64 %rubyStr_18.i, i64* %382, align 8, !dbg !123, !tbaa !4
  %send525.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_Complex.38, i64 0) #10, !dbg !123
  %384 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !124, !tbaa !12
  %385 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %384, i64 0, i32 2, !dbg !124
  %386 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %385, align 8, !dbg !124, !tbaa !14
  %387 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %386, i64 0, i32 1, !dbg !124
  %388 = load i64*, i64** %387, align 8, !dbg !124, !tbaa !53
  %389 = getelementptr inbounds i64, i64* %388, i64 1, !dbg !124
  store i64 %65, i64* %388, align 8, !dbg !124, !tbaa !4
  %390 = getelementptr inbounds i64, i64* %388, i64 2, !dbg !124
  store i64 199565758487855106, i64* %389, align 8, !dbg !124, !tbaa !4
  %391 = getelementptr inbounds i64, i64* %388, i64 3, !dbg !124
  store i64* %391, i64** %387, align 8, !dbg !124, !tbaa !53
  store i64 %send525.i, i64* %390, align 8, !dbg !124, !tbaa !4
  %send532.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_minus.39, i64 0) #10, !dbg !124
  %392 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !125, !tbaa !12
  %393 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %392, i64 0, i32 2, !dbg !125
  %394 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %393, align 8, !dbg !125, !tbaa !14
  %395 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %394, i64 0, i32 1, !dbg !125
  %396 = load i64*, i64** %395, align 8, !dbg !125, !tbaa !53
  %397 = getelementptr inbounds i64, i64* %396, i64 1, !dbg !125
  store i64 %65, i64* %396, align 8, !dbg !125, !tbaa !4
  %398 = getelementptr inbounds i64, i64* %396, i64 2, !dbg !125
  store i64* %398, i64** %395, align 8, !dbg !125, !tbaa !53
  store i64 %send532.i, i64* %397, align 8, !dbg !125, !tbaa !4
  %send538.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.40, i64 0) #10, !dbg !125
  %399 = getelementptr inbounds i64, i64* %79, i64 44, !dbg !125
  store i64* %399, i64** %74, align 8, !dbg !125, !tbaa !12
  %400 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !126, !tbaa !12
  %401 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %400, i64 0, i32 2, !dbg !126
  %402 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %401, align 8, !dbg !126, !tbaa !14
  %403 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %402, i64 0, i32 1, !dbg !126
  %404 = load i64*, i64** %403, align 8, !dbg !126, !tbaa !53
  %405 = getelementptr inbounds i64, i64* %404, i64 1, !dbg !126
  store i64 %65, i64* %404, align 8, !dbg !126, !tbaa !4
  %406 = getelementptr inbounds i64, i64* %404, i64 3, !dbg !126
  store i64* %406, i64** %403, align 8, !dbg !126, !tbaa !53
  %407 = bitcast i64* %405 to <2 x i64>*, !dbg !126
  store <2 x i64> <i64 113040350646999450, i64 13>, <2 x i64>* %407, align 8, !dbg !126, !tbaa !4
  %send547.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lt.41, i64 0) #10, !dbg !126
  %408 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !127, !tbaa !12
  %409 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %408, i64 0, i32 2, !dbg !127
  %410 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %409, align 8, !dbg !127, !tbaa !14
  %411 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %410, i64 0, i32 1, !dbg !127
  %412 = load i64*, i64** %411, align 8, !dbg !127, !tbaa !53
  %413 = getelementptr inbounds i64, i64* %412, i64 1, !dbg !127
  store i64 %65, i64* %412, align 8, !dbg !127, !tbaa !4
  %414 = getelementptr inbounds i64, i64* %412, i64 2, !dbg !127
  store i64* %414, i64** %411, align 8, !dbg !127, !tbaa !53
  store i64 %send547.i, i64* %413, align 8, !dbg !127, !tbaa !4
  %send553.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.42, i64 0) #10, !dbg !127
  %415 = getelementptr inbounds i64, i64* %79, i64 45, !dbg !127
  store i64* %415, i64** %74, align 8, !dbg !127, !tbaa !12
  %rubyStr_25.4.i = load i64, i64* @rubyStrFrozen_25.4, align 8, !dbg !128
  %416 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !128, !tbaa !12
  %417 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %416, i64 0, i32 2, !dbg !128
  %418 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %417, align 8, !dbg !128, !tbaa !14
  %419 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %418, i64 0, i32 1, !dbg !128
  %420 = load i64*, i64** %419, align 8, !dbg !128, !tbaa !53
  %421 = getelementptr inbounds i64, i64* %420, i64 1, !dbg !128
  store i64 %289, i64* %420, align 8, !dbg !128, !tbaa !4
  %422 = getelementptr inbounds i64, i64* %420, i64 2, !dbg !128
  store i64* %422, i64** %419, align 8, !dbg !128, !tbaa !53
  store i64 %rubyStr_25.4.i, i64* %421, align 8, !dbg !128, !tbaa !4
  %send559.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_Rational.43, i64 0) #10, !dbg !128
  %423 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !129, !tbaa !12
  %424 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %423, i64 0, i32 2, !dbg !129
  %425 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %424, align 8, !dbg !129, !tbaa !14
  %426 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %425, i64 0, i32 1, !dbg !129
  %427 = load i64*, i64** %426, align 8, !dbg !129, !tbaa !53
  %428 = getelementptr inbounds i64, i64* %427, i64 1, !dbg !129
  store i64 %65, i64* %427, align 8, !dbg !129, !tbaa !4
  %429 = getelementptr inbounds i64, i64* %427, i64 2, !dbg !129
  store i64 113040350646999450, i64* %428, align 8, !dbg !129, !tbaa !4
  %430 = getelementptr inbounds i64, i64* %427, i64 3, !dbg !129
  store i64* %430, i64** %426, align 8, !dbg !129, !tbaa !53
  store i64 %send559.i, i64* %429, align 8, !dbg !129, !tbaa !4
  %send566.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lt.44, i64 0) #10, !dbg !129
  %431 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !130, !tbaa !12
  %432 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %431, i64 0, i32 2, !dbg !130
  %433 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %432, align 8, !dbg !130, !tbaa !14
  %434 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %433, i64 0, i32 1, !dbg !130
  %435 = load i64*, i64** %434, align 8, !dbg !130, !tbaa !53
  %436 = getelementptr inbounds i64, i64* %435, i64 1, !dbg !130
  store i64 %65, i64* %435, align 8, !dbg !130, !tbaa !4
  %437 = getelementptr inbounds i64, i64* %435, i64 2, !dbg !130
  store i64* %437, i64** %434, align 8, !dbg !130, !tbaa !53
  store i64 %send566.i, i64* %436, align 8, !dbg !130, !tbaa !4
  %send572.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.45, i64 0) #10, !dbg !130
  %438 = getelementptr inbounds i64, i64* %79, i64 47, !dbg !130
  store i64* %438, i64** %74, align 8, !dbg !130, !tbaa !12
  %439 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !131, !tbaa !12
  %440 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %439, i64 0, i32 2, !dbg !131
  %441 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %440, align 8, !dbg !131, !tbaa !14
  %442 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %441, i64 0, i32 1, !dbg !131
  %443 = load i64*, i64** %442, align 8, !dbg !131, !tbaa !53
  %444 = getelementptr inbounds i64, i64* %443, i64 1, !dbg !131
  store i64 %65, i64* %443, align 8, !dbg !131, !tbaa !4
  %445 = getelementptr inbounds i64, i64* %443, i64 3, !dbg !131
  store i64* %445, i64** %442, align 8, !dbg !131, !tbaa !53
  %446 = bitcast i64* %444 to <2 x i64>*, !dbg !131
  store <2 x i64> <i64 113040350646999450, i64 41>, <2 x i64>* %446, align 8, !dbg !131, !tbaa !4
  %send581.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lte.46, i64 0) #10, !dbg !131
  %447 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !132, !tbaa !12
  %448 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %447, i64 0, i32 2, !dbg !132
  %449 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %448, align 8, !dbg !132, !tbaa !14
  %450 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %449, i64 0, i32 1, !dbg !132
  %451 = load i64*, i64** %450, align 8, !dbg !132, !tbaa !53
  %452 = getelementptr inbounds i64, i64* %451, i64 1, !dbg !132
  store i64 %65, i64* %451, align 8, !dbg !132, !tbaa !4
  %453 = getelementptr inbounds i64, i64* %451, i64 2, !dbg !132
  store i64* %453, i64** %450, align 8, !dbg !132, !tbaa !53
  store i64 %send581.i, i64* %452, align 8, !dbg !132, !tbaa !4
  %send587.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.47, i64 0) #10, !dbg !132
  %454 = getelementptr inbounds i64, i64* %79, i64 48, !dbg !132
  store i64* %454, i64** %74, align 8, !dbg !132, !tbaa !12
  %rubyStr_5.923.i = load i64, i64* @rubyStrFrozen_5.923, align 8, !dbg !133
  %455 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !133, !tbaa !12
  %456 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %455, i64 0, i32 2, !dbg !133
  %457 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %456, align 8, !dbg !133, !tbaa !14
  %458 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %457, i64 0, i32 1, !dbg !133
  %459 = load i64*, i64** %458, align 8, !dbg !133, !tbaa !53
  %460 = getelementptr inbounds i64, i64* %459, i64 1, !dbg !133
  store i64 %289, i64* %459, align 8, !dbg !133, !tbaa !4
  %461 = getelementptr inbounds i64, i64* %459, i64 2, !dbg !133
  store i64* %461, i64** %458, align 8, !dbg !133, !tbaa !53
  store i64 %rubyStr_5.923.i, i64* %460, align 8, !dbg !133, !tbaa !4
  %send593.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_Rational.48, i64 0) #10, !dbg !133
  %462 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !134, !tbaa !12
  %463 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %462, i64 0, i32 2, !dbg !134
  %464 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %463, align 8, !dbg !134, !tbaa !14
  %465 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %464, i64 0, i32 1, !dbg !134
  %466 = load i64*, i64** %465, align 8, !dbg !134, !tbaa !53
  %467 = getelementptr inbounds i64, i64* %466, i64 1, !dbg !134
  store i64 %65, i64* %466, align 8, !dbg !134, !tbaa !4
  %468 = getelementptr inbounds i64, i64* %466, i64 2, !dbg !134
  store i64 113040350646999450, i64* %467, align 8, !dbg !134, !tbaa !4
  %469 = getelementptr inbounds i64, i64* %466, i64 3, !dbg !134
  store i64* %469, i64** %465, align 8, !dbg !134, !tbaa !53
  store i64 %send593.i, i64* %468, align 8, !dbg !134, !tbaa !4
  %send600.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_lte.49, i64 0) #10, !dbg !134
  %470 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !135, !tbaa !12
  %471 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %470, i64 0, i32 2, !dbg !135
  %472 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %471, align 8, !dbg !135, !tbaa !14
  %473 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %472, i64 0, i32 1, !dbg !135
  %474 = load i64*, i64** %473, align 8, !dbg !135, !tbaa !53
  %475 = getelementptr inbounds i64, i64* %474, i64 1, !dbg !135
  store i64 %65, i64* %474, align 8, !dbg !135, !tbaa !4
  %476 = getelementptr inbounds i64, i64* %474, i64 2, !dbg !135
  store i64* %476, i64** %473, align 8, !dbg !135, !tbaa !53
  store i64 %send600.i, i64* %475, align 8, !dbg !135, !tbaa !4
  %send606.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_p.50, i64 0) #10, !dbg !135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: cold minsize noreturn nounwind sspreq uwtable
define internal fastcc void @"func_Object#lt.cold.1"(i64) unnamed_addr #9 {
newFuncRoot:
  tail call void @sorbet_cast_failure(i64 %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str_Return value", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str_T::Boolean", i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: cold minsize noreturn nounwind sspreq uwtable
define internal fastcc void @"func_Object#lt.cold.2"(i64 %rawArg_x) unnamed_addr #9 {
newFuncRoot:
  tail call void @sorbet_cast_failure(i64 %rawArg_x, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_sig, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str_Float, i64 0, i64 0)) #10, !dbg !55
  unreachable, !dbg !55
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #10

; Function Attrs: ssp
define linkonce void @"const_recompute_T::Sig"() local_unnamed_addr #11 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"str_T::Sig", i64 0, i64 0), i64 6)
  store i64 %1, i64* @"guarded_const_T::Sig", align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !146
  store i64 %2, i64* @"guard_epoch_T::Sig", align 8
  ret void
}

attributes #0 = { "addedToSilenceEmptyAttrsError" }
attributes #1 = { cold noreturn }
attributes #2 = { noreturn }
attributes #3 = { alwaysinline nounwind ssp uwtable }
attributes #4 = { allocsize(0,1) }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind ssp uwtable }
attributes #7 = { nounwind sspreq uwtable }
attributes #8 = { sspreq }
attributes #9 = { cold minsize noreturn nounwind sspreq uwtable }
attributes #10 = { nounwind }
attributes #11 = { ssp }
attributes #12 = { nounwind allocsize(0,1) }
attributes #13 = { noreturn nounwind }
attributes #14 = { noinline }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "Sorbet LLVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3)
!2 = !DIFile(filename: "test/testdata/compiler/float-intrinsics.rb", directory: ".")
!3 = !{}
!4 = !{!5, !5, i64 0}
!5 = !{!"long", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = distinct !DISubprogram(name: "Object#plus", linkageName: "func_Object#plus", scope: null, file: !2, line: 8, type: !9, scopeLine: 8, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!9 = !DISubroutineType(types: !10)
!10 = !{!11}
!11 = !DIBasicType(name: "VALUE", size: 64, encoding: DW_ATE_signed)
!12 = !{!13, !13, i64 0}
!13 = !{!"any pointer", !6, i64 0}
!14 = !{!15, !13, i64 16}
!15 = !{!"rb_execution_context_struct", !13, i64 0, !5, i64 8, !13, i64 16, !13, i64 24, !13, i64 32, !16, i64 40, !16, i64 44, !13, i64 48, !13, i64 56, !13, i64 64, !5, i64 72, !5, i64 80, !13, i64 88, !5, i64 96, !13, i64 104, !13, i64 112, !5, i64 120, !5, i64 128, !6, i64 136, !6, i64 137, !5, i64 144, !17, i64 152}
!16 = !{!"int", !6, i64 0}
!17 = !{!"", !13, i64 0, !13, i64 8, !5, i64 16, !6, i64 24}
!18 = !{!19, !13, i64 16}
!19 = !{!"rb_control_frame_struct", !13, i64 0, !13, i64 8, !13, i64 16, !5, i64 24, !13, i64 32, !13, i64 40, !13, i64 48}
!20 = !{!21, !13, i64 16}
!21 = !{!"rb_iseq_struct", !5, i64 0, !5, i64 8, !13, i64 16, !6, i64 24}
!22 = !{!23, !13, i64 8}
!23 = !{!"rb_iseq_constant_body", !6, i64 0, !16, i64 4, !13, i64 8, !24, i64 16, !26, i64 64, !29, i64 120, !13, i64 152, !13, i64 160, !13, i64 168, !13, i64 176, !13, i64 184, !13, i64 192, !30, i64 200, !16, i64 232, !16, i64 236, !16, i64 240, !16, i64 244, !16, i64 248, !6, i64 252, !5, i64 256}
!24 = !{!"", !25, i64 0, !16, i64 4, !16, i64 8, !16, i64 12, !16, i64 16, !16, i64 20, !16, i64 24, !16, i64 28, !13, i64 32, !13, i64 40}
!25 = !{!"", !16, i64 0, !16, i64 0, !16, i64 0, !16, i64 0, !16, i64 0, !16, i64 0, !16, i64 0, !16, i64 0, !16, i64 1, !16, i64 1}
!26 = !{!"rb_iseq_location_struct", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !16, i64 32, !27, i64 36}
!27 = !{!"rb_code_location_struct", !28, i64 0, !28, i64 8}
!28 = !{!"rb_code_position_struct", !16, i64 0, !16, i64 4}
!29 = !{!"iseq_insn_info", !13, i64 0, !13, i64 8, !16, i64 16, !13, i64 24}
!30 = !{!"", !5, i64 0, !5, i64 8, !5, i64 16, !13, i64 24}
!31 = !DILocation(line: 8, column: 1, scope: !8)
!32 = !{!"branch_weights", i32 4000000, i32 4001}
!33 = !DILocation(line: 8, column: 10, scope: !8)
!34 = !{!"branch_weights", i32 1073205, i32 2146410443}
!35 = !{!36, !5, i64 0}
!36 = !{!"RBasic", !5, i64 0, !5, i64 8}
!37 = !{!"branch_weights", i32 2000, i32 1}
!38 = !DILocation(line: 18, column: 8, scope: !39, inlinedAt: !40)
!39 = distinct !DISubprogram(name: "Object#lt", linkageName: "func_Object#lt", scope: null, file: !2, line: 18, type: !9, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!40 = distinct !DILocation(line: 8, column: 10, scope: !8)
!41 = !DILocation(line: 8, column: 13, scope: !8)
!42 = !DILocation(line: 9, column: 3, scope: !8)
!43 = !{!44}
!44 = distinct !{!44, !45, !"sorbet_int_rb_float_plus: argument 0"}
!45 = distinct !{!45, !"sorbet_int_rb_float_plus"}
!46 = distinct !DISubprogram(name: "Object#minus", linkageName: "func_Object#minus", scope: null, file: !2, line: 13, type: !9, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!47 = !DILocation(line: 13, column: 1, scope: !46)
!48 = !DILocation(line: 13, column: 11, scope: !46)
!49 = !DILocation(line: 18, column: 8, scope: !39, inlinedAt: !50)
!50 = distinct !DILocation(line: 13, column: 11, scope: !46)
!51 = !DILocation(line: 13, column: 14, scope: !46)
!52 = !DILocation(line: 14, column: 3, scope: !46)
!53 = !{!19, !13, i64 8}
!54 = !DILocation(line: 18, column: 1, scope: !39)
!55 = !DILocation(line: 18, column: 8, scope: !39)
!56 = !DILocation(line: 18, column: 11, scope: !39)
!57 = !DILocation(line: 19, column: 3, scope: !39)
!58 = !{!59}
!59 = distinct !{!59, !60, !"sorbet_int_flo_lt: argument 0"}
!60 = distinct !{!60, !"sorbet_int_flo_lt"}
!61 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!62 = distinct !DISubprogram(name: "Object#lte", linkageName: "func_Object#lte", scope: null, file: !2, line: 23, type: !9, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!63 = !DILocation(line: 23, column: 1, scope: !62)
!64 = !DILocation(line: 23, column: 9, scope: !62)
!65 = !DILocation(line: 18, column: 8, scope: !39, inlinedAt: !66)
!66 = distinct !DILocation(line: 23, column: 9, scope: !62)
!67 = !DILocation(line: 23, column: 12, scope: !62)
!68 = !DILocation(line: 24, column: 3, scope: !62)
!69 = !{!70}
!70 = distinct !{!70, !71, !"sorbet_int_flo_le: argument 0"}
!71 = distinct !{!71, !"sorbet_int_flo_le"}
!72 = !DILocation(line: 7, column: 6, scope: !73)
!73 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.<static-init>$152$block_1", scope: !74, file: !2, line: 5, type: !9, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!74 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.<static-init>$152", scope: null, file: !2, line: 5, type: !9, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!75 = !DILocation(line: 12, column: 6, scope: !76)
!76 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.<static-init>$152$block_2", scope: !74, file: !2, line: 5, type: !9, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!77 = !DILocation(line: 17, column: 6, scope: !78)
!78 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.<static-init>$152$block_3", scope: !74, file: !2, line: 5, type: !9, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!79 = !DILocation(line: 22, column: 6, scope: !80)
!80 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.<static-init>$152$block_4", scope: !74, file: !2, line: 5, type: !9, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!81 = !DILocation(line: 7, column: 1, scope: !74)
!82 = !DILocation(line: 7, column: 26, scope: !73)
!83 = !DILocation(line: 7, column: 45, scope: !73)
!84 = !DILocation(line: 12, column: 1, scope: !74)
!85 = !DILocation(line: 12, column: 26, scope: !76)
!86 = !DILocation(line: 12, column: 45, scope: !76)
!87 = !DILocation(line: 17, column: 1, scope: !74)
!88 = !DILocation(line: 17, column: 26, scope: !78)
!89 = !DILocation(line: 22, column: 1, scope: !74)
!90 = !DILocation(line: 22, column: 26, scope: !80)
!91 = !DILocation(line: 5, column: 1, scope: !74)
!92 = !DILocation(line: 8, column: 1, scope: !74)
!93 = !DILocation(line: 13, column: 1, scope: !74)
!94 = !DILocation(line: 18, column: 1, scope: !74)
!95 = !DILocation(line: 23, column: 1, scope: !74)
!96 = !DILocation(line: 27, column: 3, scope: !74)
!97 = !DILocation(line: 27, column: 1, scope: !74)
!98 = !DILocation(line: 28, column: 3, scope: !74)
!99 = !DILocation(line: 28, column: 1, scope: !74)
!100 = !DILocation(line: 29, column: 3, scope: !74)
!101 = !DILocation(line: 29, column: 1, scope: !74)
!102 = !DILocation(line: 30, column: 3, scope: !74)
!103 = !DILocation(line: 30, column: 1, scope: !74)
!104 = !DILocation(line: 31, column: 3, scope: !74)
!105 = !DILocation(line: 31, column: 1, scope: !74)
!106 = !DILocation(line: 32, column: 3, scope: !74)
!107 = !DILocation(line: 32, column: 1, scope: !74)
!108 = !DILocation(line: 33, column: 3, scope: !74)
!109 = !DILocation(line: 33, column: 1, scope: !74)
!110 = !DILocation(line: 36, column: 3, scope: !74)
!111 = !DILocation(line: 36, column: 1, scope: !74)
!112 = !DILocation(line: 37, column: 13, scope: !74)
!113 = !DILocation(line: 37, column: 3, scope: !74)
!114 = !DILocation(line: 37, column: 1, scope: !74)
!115 = !DILocation(line: 38, column: 13, scope: !74)
!116 = !DILocation(line: 38, column: 3, scope: !74)
!117 = !DILocation(line: 38, column: 1, scope: !74)
!118 = !DILocation(line: 40, column: 3, scope: !74)
!119 = !DILocation(line: 40, column: 1, scope: !74)
!120 = !DILocation(line: 41, column: 15, scope: !74)
!121 = !DILocation(line: 41, column: 3, scope: !74)
!122 = !DILocation(line: 41, column: 1, scope: !74)
!123 = !DILocation(line: 42, column: 15, scope: !74)
!124 = !DILocation(line: 42, column: 3, scope: !74)
!125 = !DILocation(line: 42, column: 1, scope: !74)
!126 = !DILocation(line: 44, column: 3, scope: !74)
!127 = !DILocation(line: 44, column: 1, scope: !74)
!128 = !DILocation(line: 45, column: 12, scope: !74)
!129 = !DILocation(line: 45, column: 3, scope: !74)
!130 = !DILocation(line: 45, column: 1, scope: !74)
!131 = !DILocation(line: 47, column: 3, scope: !74)
!132 = !DILocation(line: 47, column: 1, scope: !74)
!133 = !DILocation(line: 48, column: 13, scope: !74)
!134 = !DILocation(line: 48, column: 3, scope: !74)
!135 = !DILocation(line: 48, column: 1, scope: !74)
!136 = !{!137, !5, i64 400}
!137 = !{!"rb_vm_struct", !5, i64 0, !138, i64 8, !13, i64 192, !13, i64 200, !13, i64 208, !141, i64 216, !6, i64 224, !139, i64 264, !139, i64 280, !139, i64 296, !139, i64 312, !5, i64 328, !16, i64 336, !16, i64 340, !16, i64 344, !16, i64 344, !16, i64 344, !16, i64 344, !16, i64 348, !5, i64 352, !6, i64 360, !5, i64 400, !5, i64 408, !5, i64 416, !5, i64 424, !5, i64 432, !5, i64 440, !5, i64 448, !13, i64 456, !13, i64 464, !142, i64 472, !143, i64 992, !13, i64 1016, !13, i64 1024, !16, i64 1032, !16, i64 1036, !139, i64 1040, !6, i64 1056, !5, i64 1096, !5, i64 1104, !5, i64 1112, !5, i64 1120, !5, i64 1128, !16, i64 1136, !13, i64 1144, !13, i64 1152, !13, i64 1160, !13, i64 1168, !13, i64 1176, !13, i64 1184, !16, i64 1192, !144, i64 1200, !6, i64 1232}
!138 = !{!"rb_global_vm_lock_struct", !13, i64 0, !6, i64 8, !139, i64 48, !13, i64 64, !16, i64 72, !6, i64 80, !6, i64 128, !16, i64 176, !16, i64 180}
!139 = !{!"list_head", !140, i64 0}
!140 = !{!"list_node", !13, i64 0, !13, i64 8}
!141 = !{!"long long", !6, i64 0}
!142 = !{!"", !6, i64 0}
!143 = !{!"rb_hook_list_struct", !13, i64 0, !16, i64 8, !16, i64 12, !16, i64 16}
!144 = !{!"", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24}
!145 = !{!19, !13, i64 32}
!146 = !{!141, !141, i64 0}
!147 = !{!"branch_weights", i32 10000, i32 1}
!148 = !{!149, !16, i64 8}
!149 = !{!"rb_sorbet_param_struct", !25, i64 0, !16, i64 4, !16, i64 8, !16, i64 12, !16, i64 16, !16, i64 20, !16, i64 24, !16, i64 28, !13, i64 32, !16, i64 40, !16, i64 44, !16, i64 48, !16, i64 52, !13, i64 56}
!150 = !{!149, !16, i64 4}
!151 = !{!149, !13, i64 32}
