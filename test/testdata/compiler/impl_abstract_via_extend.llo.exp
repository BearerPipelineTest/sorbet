; ModuleID = 'payload'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"

%struct.rb_vm_struct = type { i64, %struct.rb_global_vm_lock_struct, %struct.rb_thread_struct*, %struct.rb_thread_struct*, i8*, i64, %union.pthread_mutex_t, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i32, i32, i8, i32, i64, [5 x i64], i64, i64, i64, i64, i64, i64, i64, %struct.st_table*, %struct.st_table*, %struct.anon.3, %struct.rb_hook_list_struct, %struct.st_table*, %struct.rb_postponed_job_struct*, i32, i32, %struct.list_head, %union.pthread_mutex_t, i64, i64, i64, i64, i64, i32, %struct.st_table*, %struct.rb_objspace*, %struct.rb_at_exit_list*, i64*, %struct.st_table*, %struct.rb_builtin_function*, i32, %struct.anon.4, [29 x i16] }
%struct.rb_global_vm_lock_struct = type { %struct.rb_thread_struct*, %union.pthread_mutex_t, %struct.list_head, %struct.rb_thread_struct*, i32, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32 }
%union.pthread_cond_t = type { %struct.anon.2 }
%struct.anon.2 = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%struct.rb_thread_struct = type { %struct.list_node, i64, %struct.rb_vm_struct*, %struct.rb_execution_context_struct*, i64, %struct.rb_calling_info*, i64, i64, i64, i8, i8, i32, %struct.native_thread_data_struct, i8*, i64, i64, i64, i64, %union.pthread_mutex_t, %struct.rb_unblock_callback, i64, %struct.rb_mutex_struct*, %struct.rb_thread_list_struct*, %union.anon.7, i32, i64, %struct.rb_fiber_struct*, [5 x i8*], i64 }
%struct.list_node = type { %struct.list_node*, %struct.list_node* }
%struct.rb_execution_context_struct = type { i64*, i64, %struct.rb_control_frame_struct*, %struct.rb_vm_tag*, %struct.rb_vm_protect_tag*, i32, i32, %struct.rb_fiber_struct*, %struct.rb_thread_struct*, %struct.st_table*, i64, i64, i64*, i64, %struct.rb_ensure_list*, %struct.rb_trace_arg_struct*, i64, i64, i8, i8, i64, %struct.anon.5 }
%struct.rb_control_frame_struct = type { i64*, i64*, %struct.rb_iseq_struct*, i64, i64*, i8*, i64* }
%struct.rb_iseq_struct = type { i64, i64, %struct.rb_iseq_constant_body*, %union.anon.14 }
%struct.rb_iseq_constant_body = type { i32, i32, i64*, %struct.anon, %struct.rb_iseq_location_struct, %struct.iseq_insn_info, i64*, %struct.iseq_catch_table*, %struct.rb_iseq_struct*, %struct.rb_iseq_struct*, %union.iseq_inline_storage_entry*, %struct.rb_call_data*, %struct.anon.13, i32, i32, i32, i32, i32, i8, i64 }
%struct.anon = type { %struct.anon.0, i32, i32, i32, i32, i32, i32, i32, i64*, %struct.rb_iseq_param_keyword* }
%struct.anon.0 = type { i16, [2 x i8] }
%struct.rb_iseq_param_keyword = type { i32, i32, i32, i32, i64*, i64* }
%struct.rb_iseq_location_struct = type { i64, i64, i64, i64, i32, %struct.rb_code_location_struct }
%struct.rb_code_location_struct = type { %struct.rb_code_position_struct, %struct.rb_code_position_struct }
%struct.rb_code_position_struct = type { i32, i32 }
%struct.iseq_insn_info = type { %struct.iseq_insn_info_entry*, i32*, i32, %struct.succ_index_table* }
%struct.iseq_insn_info_entry = type opaque
%struct.succ_index_table = type opaque
%struct.iseq_catch_table = type opaque
%union.iseq_inline_storage_entry = type { %struct.iseq_inline_cache_entry }
%struct.iseq_inline_cache_entry = type { i64, %struct.rb_cref_struct*, i64 }
%struct.rb_cref_struct = type { i64, i64, i64, %struct.rb_cref_struct*, %struct.rb_scope_visi_struct }
%struct.rb_scope_visi_struct = type { i8, [3 x i8] }
%struct.rb_call_data = type { %struct.rb_call_cache, %struct.rb_call_info }
%struct.rb_call_cache = type { i64, [3 x i64], %struct.rb_callable_method_entry_struct*, i64, i64 (%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_calling_info*, %struct.rb_call_data*)*, %union.anon.12 }
%struct.rb_callable_method_entry_struct = type { i64, i64, %struct.rb_method_definition_struct*, i64, i64 }
%struct.rb_method_definition_struct = type { i64, %union.anon.10, i64, i64 }
%union.anon.10 = type { %struct.rb_method_cfunc_struct }
%struct.rb_method_cfunc_struct = type { i64 (...)*, i64 (i64, i32, i64*, i64 (...)*)*, i32 }
%union.anon.12 = type { i32 }
%struct.rb_call_info = type { i64, i32, i32 }
%struct.anon.13 = type { i64, i64, i64, i64* }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i64, i32 }
%struct.rb_vm_tag = type { i64, i64, [5 x i8*], %struct.rb_vm_tag*, i32 }
%struct.rb_vm_protect_tag = type { %struct.rb_vm_protect_tag* }
%struct.rb_ensure_list = type { %struct.rb_ensure_list*, %struct.rb_ensure_entry }
%struct.rb_ensure_entry = type { i64, i64 (i64)*, i64 }
%struct.rb_trace_arg_struct = type { i32, %struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, i64, i64, i64, i64, i64, i32, i32, i64 }
%struct.anon.5 = type { i64*, i64*, i64, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.rb_calling_info = type { i64, i64, i32, i32 }
%struct.native_thread_data_struct = type { %struct.list_head, %union.anon.6 }
%union.anon.6 = type { %union.pthread_cond_t }
%struct.rb_unblock_callback = type { void (i8*)*, i8* }
%struct.rb_mutex_struct = type opaque
%struct.rb_thread_list_struct = type { %struct.rb_thread_list_struct*, %struct.rb_thread_struct* }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i64, i64, i32 }
%struct.rb_fiber_struct = type opaque
%struct.anon.3 = type { [65 x i64] }
%struct.rb_hook_list_struct = type { %struct.rb_event_hook_struct*, i32, i32, i32 }
%struct.rb_event_hook_struct = type opaque
%struct.rb_postponed_job_struct = type opaque
%struct.list_head = type { %struct.list_node }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.rb_objspace = type opaque
%struct.rb_at_exit_list = type { void (%struct.rb_vm_struct*)*, %struct.rb_at_exit_list* }
%struct.st_table = type { i8, i8, i8, i32, %struct.st_hash_type*, i64, i64*, i64, i64, %struct.st_table_entry* }
%struct.st_hash_type = type { i32 (i64, i64)*, i64 (i64)* }
%struct.st_table_entry = type opaque
%struct.rb_builtin_function = type opaque
%struct.anon.4 = type { i64, i64, i64, i64 }
%struct.FunctionInlineCache = type { %struct.rb_kwarg_call_data }
%struct.rb_kwarg_call_data = type { %struct.rb_call_cache, %struct.rb_call_info_with_kwarg }
%struct.rb_call_info_with_kwarg = type { %struct.rb_call_info, %struct.rb_call_info_kw_arg* }
%struct.rb_call_info_kw_arg = type { i32, [1 x i64] }
%struct.rb_sorbet_param_struct = type { %struct.anon.0, i32, i32, i32, i32, i32, i32, i32, i64*, i32, i32, i32, i32, i64* }
%struct.RClass = type { %struct.iseq_inline_iv_cache_entry, i64, %struct.rb_classext_struct*, i64 }
%struct.iseq_inline_iv_cache_entry = type { i64, i64 }
%struct.rb_classext_struct = type { %struct.st_table*, %struct.st_table*, %struct.rb_id_table*, %struct.rb_id_table*, %struct.rb_id_table*, %struct.rb_subclass_entry*, %struct.rb_subclass_entry**, %struct.rb_subclass_entry**, i64, i64, i64 (i64)*, i64 }
%struct.rb_id_table = type opaque
%struct.rb_subclass_entry = type { i64, %struct.rb_subclass_entry* }

@ruby_current_vm_ptr = external local_unnamed_addr global %struct.rb_vm_struct*, align 8
@ruby_current_execution_context_ptr = external local_unnamed_addr global %struct.rb_execution_context_struct*, align 8
@ruby_vm_global_constant_state = external local_unnamed_addr global i64, align 8
@rb_eRuntimeError = external local_unnamed_addr global i64, align 8
@.str.6 = private unnamed_addr constant [42 x i8] c"unimplemented super with a missing method\00", align 1
@.str.8 = private unnamed_addr constant [95 x i8] c"sorbet_getBuildSCMRevision: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"sorbet_getIsReleaseBuild: Shared objects compiled by sorbet_llvm must be run by sorbet_ruby.\00", align 1
@"stackFramePrecomputed_func_<root>.<static-init>$152" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"rubyIdPrecomputed_<top (required)>" = internal unnamed_addr global i64 0, align 8
@"str_<top (required)>" = private unnamed_addr constant [17 x i8] c"<top (required)>\00", align 1
@"rubyStrFrozen_<top (required)>" = internal unnamed_addr global i64 0, align 8
@"rubyStrFrozen_test/testdata/compiler/impl_abstract_via_extend.rb" = internal unnamed_addr global i64 0, align 8
@"str_test/testdata/compiler/impl_abstract_via_extend.rb" = private unnamed_addr constant [51 x i8] c"test/testdata/compiler/impl_abstract_via_extend.rb\00", align 1
@str_IFoo = private unnamed_addr constant [5 x i8] c"IFoo\00", align 1
@"rubyStrFrozen_./impl_abstract_via_extend__1" = internal unnamed_addr global i64 0, align 8
@"str_./impl_abstract_via_extend__1" = private unnamed_addr constant [30 x i8] c"./impl_abstract_via_extend__1\00", align 1
@ic_require_relative = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_require_relative = internal unnamed_addr global i64 0, align 8
@str_require_relative = private unnamed_addr constant [17 x i8] c"require_relative\00", align 1
@"stackFramePrecomputed_func_IFoo#foo" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@rubyIdPrecomputed_foo = internal unnamed_addr global i64 0, align 8
@str_foo = private unnamed_addr constant [4 x i8] c"foo\00", align 1
@"stackFramePrecomputed_func_IFoo.<static-init>" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"stackFramePrecomputed_func_IFoo.<static-init>$block_1" = internal unnamed_addr global %struct.rb_iseq_struct* null, align 8
@"rubyIdPrecomputed_block for" = internal unnamed_addr global i64 0, align 8
@"str_block for" = private unnamed_addr constant [10 x i8] c"block for\00", align 1
@ic_sig = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_sig = internal unnamed_addr global i64 0, align 8
@str_sig = private unnamed_addr constant [4 x i8] c"sig\00", align 1
@ic_abstract = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_abstract = internal unnamed_addr global i64 0, align 8
@str_abstract = private unnamed_addr constant [9 x i8] c"abstract\00", align 1
@ic_returns = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_returns = internal unnamed_addr global i64 0, align 8
@str_returns = private unnamed_addr constant [8 x i8] c"returns\00", align 1
@"str_T::Helpers" = private unnamed_addr constant [11 x i8] c"T::Helpers\00", align 1
@ic_extend = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_extend = internal unnamed_addr global i64 0, align 8
@str_extend = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@"str_T::Sig" = private unnamed_addr constant [7 x i8] c"T::Sig\00", align 1
@ic_extend.1 = internal global %struct.FunctionInlineCache zeroinitializer
@"ic_abstract!" = internal global %struct.FunctionInlineCache zeroinitializer
@"rubyIdPrecomputed_abstract!" = internal unnamed_addr global i64 0, align 8
@"str_abstract!" = private unnamed_addr constant [10 x i8] c"abstract!\00", align 1
@rubyIdPrecomputed_normal = internal unnamed_addr global i64 0, align 8
@str_normal = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@ic_keep_def = internal global %struct.FunctionInlineCache zeroinitializer
@rubyIdPrecomputed_keep_def = internal unnamed_addr global i64 0, align 8
@str_keep_def = private unnamed_addr constant [9 x i8] c"keep_def\00", align 1
@"guard_epoch_T::Helpers" = linkonce local_unnamed_addr global i64 0
@"guarded_const_T::Helpers" = linkonce local_unnamed_addr global i64 0
@"guard_epoch_T::Sig" = linkonce local_unnamed_addr global i64 0
@"guarded_const_T::Sig" = linkonce local_unnamed_addr global i64 0
@guard_epoch_IFoo = linkonce local_unnamed_addr global i64 0
@guarded_const_IFoo = linkonce local_unnamed_addr global i64 0

; Function Attrs: noreturn
declare void @sorbet_raiseArity(i32, i32, i32) local_unnamed_addr #0

declare %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64, i64, i64, i64, %struct.rb_iseq_struct*, i32, i32, i32, i64*, i32, i32) local_unnamed_addr #1

declare i64 @sorbet_getConstant(i8*, i64) local_unnamed_addr #1

declare i64 @sorbet_readRealpath() local_unnamed_addr #1

declare void @sorbet_pushStaticInitFrame(i64) local_unnamed_addr #1

declare void @sorbet_popRubyStack() local_unnamed_addr #1

declare void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache*, i64, i32, i32, i32, i64*) local_unnamed_addr #1

declare i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache*, i64) local_unnamed_addr #1

declare void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_iseq_struct*) local_unnamed_addr #1

declare i64 @rb_define_module(i8*) local_unnamed_addr #1

declare i64 @rb_intern(i8*) local_unnamed_addr #1

declare void @rb_add_method_sorbet(i64, i64, i64 (i32, i64*, i64)*, %struct.rb_sorbet_param_struct*, i32, i8*) local_unnamed_addr #1

declare i64 @rb_intern2(i8*, i64) local_unnamed_addr #1

declare i64 @rb_id2sym(i64) local_unnamed_addr #1

declare i64 @rb_fstring_new(i8*, i64) local_unnamed_addr #1

declare void @rb_gc_register_mark_object(i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @rb_raise(i64, i8*, ...) local_unnamed_addr #0

declare %struct.rb_callable_method_entry_struct* @rb_vm_frame_method_entry(%struct.rb_control_frame_struct*) local_unnamed_addr #1

declare %struct.rb_callable_method_entry_struct* @rb_callable_method_entry(i64, i64) local_unnamed_addr #1

declare i64 @rb_vm_call_kw(%struct.rb_execution_context_struct*, i64, i64, i32, i64*, %struct.rb_callable_method_entry_struct*, i32) local_unnamed_addr #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define noalias nonnull i8* @sorbet_allocateParamInfo() local_unnamed_addr #2 {
  %1 = tail call noalias nonnull i8* @ruby_xcalloc(i64 1, i64 64) #10
  ret i8* %1
}

; Function Attrs: allocsize(0,1)
declare noalias nonnull i8* @ruby_xcalloc(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak i32 @sorbet_getIsReleaseBuild() local_unnamed_addr #4 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !4
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define weak i8* @sorbet_getBuildSCMRevision() local_unnamed_addr #4 {
  %1 = load i64, i64* @rb_eRuntimeError, align 8, !tbaa !4
  tail call void (i64, i8*, ...) @rb_raise(i64 %1, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.8, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: sspreq
define void @Init_impl_abstract_via_extend() local_unnamed_addr #5 {
entry:
  %locals1.i.i = alloca [0 x i64], align 8
  %realpath = tail call i64 @sorbet_readRealpath()
  %0 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 16) #8
  store i64 %0, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %1 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str_require_relative, i64 0, i64 0), i64 16) #8
  store i64 %1, i64* @rubyIdPrecomputed_require_relative, align 8
  %2 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_foo, i64 0, i64 0), i64 3) #8
  store i64 %2, i64* @rubyIdPrecomputed_foo, align 8
  %3 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str_block for", i64 0, i64 0), i64 9) #8
  store i64 %3, i64* @"rubyIdPrecomputed_block for", align 8
  %4 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_sig, i64 0, i64 0), i64 3) #8
  store i64 %4, i64* @rubyIdPrecomputed_sig, align 8
  %5 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str_abstract, i64 0, i64 0), i64 8) #8
  store i64 %5, i64* @rubyIdPrecomputed_abstract, align 8
  %6 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str_returns, i64 0, i64 0), i64 7) #8
  store i64 %6, i64* @rubyIdPrecomputed_returns, align 8
  %7 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str_extend, i64 0, i64 0), i64 6) #8
  store i64 %7, i64* @rubyIdPrecomputed_extend, align 8
  %8 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str_abstract!", i64 0, i64 0), i64 9) #8
  store i64 %8, i64* @"rubyIdPrecomputed_abstract!", align 8
  %9 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str_normal, i64 0, i64 0), i64 6) #8
  store i64 %9, i64* @rubyIdPrecomputed_normal, align 8
  %10 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str_keep_def, i64 0, i64 0), i64 8) #8
  store i64 %10, i64* @rubyIdPrecomputed_keep_def, align 8
  %11 = tail call i64 @rb_fstring_new(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 16) #8
  tail call void @rb_gc_register_mark_object(i64 %11) #8
  store i64 %11, i64* @"rubyStrFrozen_<top (required)>", align 8
  %12 = tail call i64 @rb_fstring_new(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @"str_test/testdata/compiler/impl_abstract_via_extend.rb", i64 0, i64 0), i64 50) #8
  tail call void @rb_gc_register_mark_object(i64 %12) #8
  store i64 %12, i64* @"rubyStrFrozen_test/testdata/compiler/impl_abstract_via_extend.rb", align 8
  %13 = bitcast [0 x i64]* %locals1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 0, i8* nonnull %13)
  %"rubyId_<top (required)>.i.i" = load i64, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %"rubyStr_<top (required)>.i.i" = load i64, i64* @"rubyStrFrozen_<top (required)>", align 8
  %locals1.sub.i.i = getelementptr inbounds [0 x i64], [0 x i64]* %locals1.i.i, i64 0, i64 0
  %14 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_<top (required)>.i.i", i64 %"rubyId_<top (required)>.i.i", i64 %12, i64 %realpath, %struct.rb_iseq_struct* null, i32 1, i32 1, i32 14, i64* nonnull %locals1.sub.i.i, i32 0, i32 2)
  store %struct.rb_iseq_struct* %14, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152", align 8
  call void @llvm.lifetime.end.p0i8(i64 0, i8* nonnull %13)
  %15 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str_./impl_abstract_via_extend__1", i64 0, i64 0), i64 29) #8
  call void @rb_gc_register_mark_object(i64 %15) #8
  store i64 %15, i64* @"rubyStrFrozen_./impl_abstract_via_extend__1", align 8
  %rubyId_require_relative.i = load i64, i64* @rubyIdPrecomputed_require_relative, align 8, !dbg !8
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_require_relative, i64 %rubyId_require_relative.i, i32 20, i32 1, i32 0, i64* null), !dbg !8
  %16 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_foo, i64 0, i64 0), i64 3) #8
  call void @rb_gc_register_mark_object(i64 %16) #8
  call void @llvm.lifetime.start.p0i8(i64 0, i8* nonnull %13)
  %rubyId_foo.i.i = load i64, i64* @rubyIdPrecomputed_foo, align 8
  %"rubyStr_test/testdata/compiler/impl_abstract_via_extend.rb.i15.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/impl_abstract_via_extend.rb", align 8
  %17 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %16, i64 %rubyId_foo.i.i, i64 %"rubyStr_test/testdata/compiler/impl_abstract_via_extend.rb.i15.i", i64 %realpath, %struct.rb_iseq_struct* null, i32 1, i32 11, i32 11, i64* nonnull %locals1.sub.i.i, i32 0, i32 1)
  store %struct.rb_iseq_struct* %17, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_IFoo#foo", align 8
  call void @llvm.lifetime.end.p0i8(i64 0, i8* nonnull %13)
  call void @llvm.lifetime.start.p0i8(i64 0, i8* nonnull %13)
  %"rubyId_<top (required)>.i18.i" = load i64, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  %"rubyStr_<top (required)>.i19.i" = load i64, i64* @"rubyStrFrozen_<top (required)>", align 8
  %"rubyStr_test/testdata/compiler/impl_abstract_via_extend.rb.i20.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/impl_abstract_via_extend.rb", align 8
  %18 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %"rubyStr_<top (required)>.i19.i", i64 %"rubyId_<top (required)>.i18.i", i64 %"rubyStr_test/testdata/compiler/impl_abstract_via_extend.rb.i20.i", i64 %realpath, %struct.rb_iseq_struct* null, i32 1, i32 5, i32 5, i64* nonnull %locals1.sub.i.i, i32 0, i32 4)
  store %struct.rb_iseq_struct* %18, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_IFoo.<static-init>", align 8
  call void @llvm.lifetime.end.p0i8(i64 0, i8* nonnull %13)
  %19 = call i64 @rb_fstring_new(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str_block for", i64 0, i64 0), i64 9) #8
  call void @rb_gc_register_mark_object(i64 %19) #8
  %stackFrame.i.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_IFoo.<static-init>", align 8
  %"rubyId_block for.i.i" = load i64, i64* @"rubyIdPrecomputed_block for", align 8
  %"rubyStr_test/testdata/compiler/impl_abstract_via_extend.rb.i22.i" = load i64, i64* @"rubyStrFrozen_test/testdata/compiler/impl_abstract_via_extend.rb", align 8
  %20 = call %struct.rb_iseq_struct* @sorbet_allocateRubyStackFrame(i64 %19, i64 %"rubyId_block for.i.i", i64 %"rubyStr_test/testdata/compiler/impl_abstract_via_extend.rb.i22.i", i64 %realpath, %struct.rb_iseq_struct* %stackFrame.i.i, i32 2, i32 5, i32 5, i64* null, i32 0, i32 4)
  store %struct.rb_iseq_struct* %20, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_IFoo.<static-init>$block_1", align 8
  %rubyId_sig.i = load i64, i64* @rubyIdPrecomputed_sig, align 8, !dbg !13
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_sig, i64 %rubyId_sig.i, i32 20, i32 1, i32 0, i64* null), !dbg !13
  %rubyId_abstract.i = load i64, i64* @rubyIdPrecomputed_abstract, align 8, !dbg !15
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_abstract, i64 %rubyId_abstract.i, i32 20, i32 0, i32 0, i64* null), !dbg !15
  %rubyId_returns.i = load i64, i64* @rubyIdPrecomputed_returns, align 8, !dbg !15
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_returns, i64 %rubyId_returns.i, i32 16, i32 1, i32 0, i64* null), !dbg !15
  %rubyId_extend.i = load i64, i64* @rubyIdPrecomputed_extend, align 8, !dbg !17
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_extend, i64 %rubyId_extend.i, i32 20, i32 1, i32 0, i64* null), !dbg !17
  %rubyId_extend8.i = load i64, i64* @rubyIdPrecomputed_extend, align 8, !dbg !18
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_extend.1, i64 %rubyId_extend8.i, i32 20, i32 1, i32 0, i64* null), !dbg !18
  %"rubyId_abstract!.i" = load i64, i64* @"rubyIdPrecomputed_abstract!", align 8, !dbg !19
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @"ic_abstract!", i64 %"rubyId_abstract!.i", i32 20, i32 0, i32 0, i64* null), !dbg !19
  %rubyId_keep_def.i = load i64, i64* @rubyIdPrecomputed_keep_def, align 8, !dbg !20
  call void @sorbet_setupFunctionInlineCache(%struct.FunctionInlineCache* nonnull @ic_keep_def, i64 %rubyId_keep_def.i, i32 16, i32 3, i32 0, i64* null), !dbg !20
  %21 = load %struct.rb_vm_struct*, %struct.rb_vm_struct** @ruby_current_vm_ptr, align 8, !tbaa !21
  %22 = getelementptr inbounds %struct.rb_vm_struct, %struct.rb_vm_struct* %21, i64 0, i32 18
  %23 = load i64, i64* %22, align 8, !tbaa !23
  %stackFrame.i = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_<root>.<static-init>$152", align 8
  %24 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !21
  %25 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %24, i64 0, i32 2
  %26 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %25, align 8, !tbaa !33
  %27 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %26, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame.i, %struct.rb_iseq_struct** %27, align 8, !tbaa !36
  %28 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %26, i64 0, i32 4
  %29 = load i64*, i64** %28, align 8, !tbaa !38
  %30 = load i64, i64* %29, align 8, !tbaa !4
  %31 = and i64 %30, -33
  store i64 %31, i64* %29, align 8, !tbaa !4
  call void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct* %24, %struct.rb_control_frame_struct* %26, %struct.rb_iseq_struct* %stackFrame.i) #8
  %32 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %26, i64 0, i32 0
  %33 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** %27, align 8, !tbaa !36
  %34 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %33, i64 0, i32 2
  %35 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %34, align 8, !tbaa !39
  %36 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %35, i64 0, i32 2
  %37 = load i64*, i64** %36, align 8, !tbaa !41
  %38 = getelementptr inbounds i64, i64* %37, i64 5
  store i64* %38, i64** %32, align 8, !dbg !50, !tbaa !21
  %39 = call i64 @rb_define_module(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str_IFoo, i64 0, i64 0)) #8, !dbg !51
  call void @sorbet_pushStaticInitFrame(i64 %39) #8, !dbg !51
  %stackFrame.i.i1 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** @"stackFramePrecomputed_func_IFoo.<static-init>", align 8
  %40 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !21
  %41 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %40, i64 0, i32 2
  %42 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %41, align 8, !tbaa !33
  %43 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %42, i64 0, i32 2
  store %struct.rb_iseq_struct* %stackFrame.i.i1, %struct.rb_iseq_struct** %43, align 8, !tbaa !36
  %44 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %42, i64 0, i32 4
  %45 = load i64*, i64** %44, align 8, !tbaa !38
  %46 = load i64, i64* %45, align 8, !tbaa !4
  %47 = and i64 %46, -33
  store i64 %47, i64* %45, align 8, !tbaa !4
  call void @sorbet_setMethodStackFrame(%struct.rb_execution_context_struct* %40, %struct.rb_control_frame_struct* %42, %struct.rb_iseq_struct* %stackFrame.i.i1) #8
  %48 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %42, i64 0, i32 0
  %49 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** %43, align 8, !tbaa !36
  %50 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %49, i64 0, i32 2
  %51 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %50, align 8, !tbaa !39
  %52 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %51, i64 0, i32 2
  %53 = load i64*, i64** %52, align 8, !tbaa !41
  %54 = getelementptr inbounds i64, i64* %53, i64 2, !dbg !52
  store i64* %54, i64** %48, align 8, !dbg !52, !tbaa !21
  %55 = load i64, i64* @"guard_epoch_T::Helpers", align 8, !dbg !54
  %56 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !54, !tbaa !55
  %needTakeSlowPath = icmp eq i64 %55, %56, !dbg !54
  br i1 %needTakeSlowPath, label %58, label %57, !dbg !54, !prof !56

57:                                               ; preds = %entry
  call void @"const_recompute_T::Helpers"(), !dbg !54
  br label %58, !dbg !54

58:                                               ; preds = %entry, %57
  %59 = load i64, i64* @"guarded_const_T::Helpers", align 8, !dbg !54
  %60 = load i64, i64* @"guard_epoch_T::Helpers", align 8, !dbg !54
  %61 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !54, !tbaa !55
  %guardUpdated = icmp eq i64 %60, %61, !dbg !54
  call void @llvm.assume(i1 %guardUpdated), !dbg !54
  %62 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !54, !tbaa !21
  %63 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %62, i64 0, i32 2, !dbg !54
  %64 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %63, align 8, !dbg !54, !tbaa !33
  %65 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %64, i64 0, i32 1, !dbg !54
  %66 = load i64*, i64** %65, align 8, !dbg !54, !tbaa !57
  %67 = getelementptr inbounds i64, i64* %66, i64 1, !dbg !54
  store i64 %39, i64* %66, align 8, !dbg !54, !tbaa !4
  %68 = getelementptr inbounds i64, i64* %66, i64 2, !dbg !54
  store i64* %68, i64** %65, align 8, !dbg !54, !tbaa !57
  store i64 %59, i64* %67, align 8, !dbg !54, !tbaa !4
  %send.i.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_extend, i64 0) #8, !dbg !54
  %69 = getelementptr inbounds i64, i64* %53, i64 3, !dbg !54
  store i64* %69, i64** %48, align 8, !dbg !54, !tbaa !21
  %70 = load i64, i64* @"guard_epoch_T::Sig", align 8, !dbg !58
  %71 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !58, !tbaa !55
  %needTakeSlowPath3 = icmp eq i64 %70, %71, !dbg !58
  br i1 %needTakeSlowPath3, label %73, label %72, !dbg !58, !prof !56

72:                                               ; preds = %58
  call void @"const_recompute_T::Sig"(), !dbg !58
  br label %73, !dbg !58

73:                                               ; preds = %58, %72
  %74 = load i64, i64* @"guarded_const_T::Sig", align 8, !dbg !58
  %75 = load i64, i64* @"guard_epoch_T::Sig", align 8, !dbg !58
  %76 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !58, !tbaa !55
  %guardUpdated4 = icmp eq i64 %75, %76, !dbg !58
  call void @llvm.assume(i1 %guardUpdated4), !dbg !58
  %77 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !58, !tbaa !21
  %78 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %77, i64 0, i32 2, !dbg !58
  %79 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %78, align 8, !dbg !58, !tbaa !33
  %80 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %79, i64 0, i32 1, !dbg !58
  %81 = load i64*, i64** %80, align 8, !dbg !58, !tbaa !57
  %82 = getelementptr inbounds i64, i64* %81, i64 1, !dbg !58
  store i64 %39, i64* %81, align 8, !dbg !58, !tbaa !4
  %83 = getelementptr inbounds i64, i64* %81, i64 2, !dbg !58
  store i64* %83, i64** %80, align 8, !dbg !58, !tbaa !57
  store i64 %74, i64* %82, align 8, !dbg !58, !tbaa !4
  %send40.i.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_extend.1, i64 0) #8, !dbg !58
  %84 = getelementptr inbounds i64, i64* %53, i64 4, !dbg !58
  store i64* %84, i64** %48, align 8, !dbg !58, !tbaa !21
  %85 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !59, !tbaa !21
  %86 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %85, i64 0, i32 2, !dbg !59
  %87 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %86, align 8, !dbg !59, !tbaa !33
  %88 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %87, i64 0, i32 1, !dbg !59
  %89 = load i64*, i64** %88, align 8, !dbg !59, !tbaa !57
  %90 = getelementptr inbounds i64, i64* %89, i64 1, !dbg !59
  store i64* %90, i64** %88, align 8, !dbg !59, !tbaa !57
  store i64 %39, i64* %89, align 8, !dbg !59, !tbaa !4
  %send44.i.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @"ic_abstract!", i64 0) #8, !dbg !59
  %91 = getelementptr inbounds i64, i64* %53, i64 7, !dbg !59
  store i64* %91, i64** %48, align 8, !dbg !59, !tbaa !21
  %rubyId_foo.i.i2 = load i64, i64* @rubyIdPrecomputed_foo, align 8, !dbg !60
  %rawSym.i.i = call i64 @rb_id2sym(i64 %rubyId_foo.i.i2) #8, !dbg !60
  %rubyId_normal.i.i = load i64, i64* @rubyIdPrecomputed_normal, align 8, !dbg !60
  %rawSym45.i.i = call i64 @rb_id2sym(i64 %rubyId_normal.i.i) #8, !dbg !60
  %92 = load i64, i64* @guard_epoch_IFoo, align 8, !dbg !60
  %93 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !60, !tbaa !55
  %needTakeSlowPath5 = icmp eq i64 %92, %93, !dbg !60
  br i1 %needTakeSlowPath5, label %95, label %94, !dbg !60, !prof !56

94:                                               ; preds = %73
  call void @const_recompute_IFoo(), !dbg !60
  br label %95, !dbg !60

95:                                               ; preds = %73, %94
  %96 = load i64, i64* @guarded_const_IFoo, align 8, !dbg !60
  %97 = load i64, i64* @guard_epoch_IFoo, align 8, !dbg !60
  %98 = load i64, i64* @ruby_vm_global_constant_state, align 8, !dbg !60, !tbaa !55
  %guardUpdated6 = icmp eq i64 %97, %98, !dbg !60
  call void @llvm.assume(i1 %guardUpdated6), !dbg !60
  %stackFrame471.i.i = load i8*, i8** bitcast (%struct.rb_iseq_struct** @"stackFramePrecomputed_func_IFoo#foo" to i8**), align 8, !dbg !60
  %99 = call noalias nonnull i8* @ruby_xcalloc(i64 1, i64 64) #10, !dbg !60
  %100 = bitcast i8* %99 to i16*, !dbg !60
  %101 = load i16, i16* %100, align 8, !dbg !60
  %102 = and i16 %101, -384, !dbg !60
  store i16 %102, i16* %100, align 8, !dbg !60
  %103 = getelementptr inbounds i8, i8* %99, i64 4, !dbg !60
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %103, i8 0, i64 28, i1 false) #8, !dbg !60
  %104 = call i64 @rb_intern(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str_foo, i64 0, i64 0)) #8, !dbg !60
  %105 = bitcast i8* %99 to %struct.rb_sorbet_param_struct*, !dbg !60
  call void @rb_add_method_sorbet(i64 %96, i64 %104, i64 (i32, i64*, i64)* nonnull @"func_IFoo#foo", %struct.rb_sorbet_param_struct* nonnull %105, i32 1, i8* %stackFrame471.i.i) #8, !dbg !60
  call void @sorbet_popRubyStack() #8, !dbg !51
  %106 = getelementptr inbounds i64, i64* %37, i64 14, !dbg !50
  store i64* %106, i64** %32, align 8, !dbg !50, !tbaa !21
  %"rubyStr_./impl_abstract_via_extend__1.i" = load i64, i64* @"rubyStrFrozen_./impl_abstract_via_extend__1", align 8, !dbg !61
  %107 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !8, !tbaa !21
  %108 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %107, i64 0, i32 2, !dbg !8
  %109 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %108, align 8, !dbg !8, !tbaa !33
  %110 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %109, i64 0, i32 1, !dbg !8
  %111 = load i64*, i64** %110, align 8, !dbg !8, !tbaa !57
  %112 = getelementptr inbounds i64, i64* %111, i64 1, !dbg !8
  store i64 %23, i64* %111, align 8, !dbg !8, !tbaa !4
  %113 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !8
  store i64* %113, i64** %110, align 8, !dbg !8, !tbaa !57
  store i64 %"rubyStr_./impl_abstract_via_extend__1.i", i64* %112, align 8, !dbg !8, !tbaa !4
  %send.i = call i64 @sorbet_callFuncWithCache(%struct.FunctionInlineCache* nonnull @ic_require_relative, i64 0) #8, !dbg !8
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define i64 @"func_IFoo#foo"(i32 %argc, i64* nocapture readnone %argArray, i64 %selfRaw) #6 !dbg !62 {
functionEntryInitializers:
  %0 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !21
  %1 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %0, i64 0, i32 2
  %2 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %1, align 8, !tbaa !33
  %3 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 0
  %4 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %2, i64 0, i32 2
  %5 = load %struct.rb_iseq_struct*, %struct.rb_iseq_struct** %4, align 8, !tbaa !36
  %6 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %5, i64 0, i32 2
  %7 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %6, align 8, !tbaa !39
  %8 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %7, i64 0, i32 2
  %9 = load i64*, i64** %8, align 8, !tbaa !41
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  store i64* %10, i64** %3, align 8, !tbaa !21
  %tooManyArgs = icmp eq i32 %argc, 0, !dbg !63
  br i1 %tooManyArgs, label %fillRequiredArgs, label %argCountFailBlock, !dbg !63, !prof !64

argCountFailBlock:                                ; preds = %functionEntryInitializers
  tail call void @sorbet_raiseArity(i32 %argc, i32 0, i32 0) #8, !dbg !63
  unreachable, !dbg !63

fillRequiredArgs:                                 ; preds = %functionEntryInitializers
  %11 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !dbg !63, !tbaa !21
  %12 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %11, i64 0, i32 2, !dbg !63
  %13 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %12, align 8, !dbg !63, !tbaa !33, !noalias !65
  %14 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %13, i64 0, i32 3, !dbg !63
  %15 = load i64, i64* %14, align 8, !dbg !63, !tbaa !68, !noalias !65
  %16 = tail call %struct.rb_callable_method_entry_struct* @rb_vm_frame_method_entry(%struct.rb_control_frame_struct* %13) #8, !dbg !63, !noalias !65
  %17 = getelementptr inbounds %struct.rb_callable_method_entry_struct, %struct.rb_callable_method_entry_struct* %16, i64 0, i32 1, !dbg !63
  %18 = bitcast i64* %17 to %struct.RClass**, !dbg !63
  %19 = load %struct.RClass*, %struct.RClass** %18, align 8, !dbg !63, !tbaa !69, !noalias !65
  %20 = getelementptr inbounds %struct.RClass, %struct.RClass* %19, i64 0, i32 2, !dbg !63
  %21 = load %struct.rb_classext_struct*, %struct.rb_classext_struct** %20, align 8, !dbg !63, !tbaa !71, !noalias !65
  %22 = getelementptr inbounds %struct.rb_classext_struct, %struct.rb_classext_struct* %21, i64 0, i32 8, !dbg !63
  %23 = bitcast i64* %22 to %struct.RClass**, !dbg !63
  %24 = load %struct.RClass*, %struct.RClass** %23, align 8, !dbg !63, !tbaa !74, !noalias !65
  %25 = getelementptr inbounds %struct.RClass, %struct.RClass* %24, i64 0, i32 1, !dbg !63
  %26 = load i64, i64* %25, align 8, !dbg !63, !tbaa !76
  %27 = getelementptr inbounds %struct.rb_callable_method_entry_struct, %struct.rb_callable_method_entry_struct* %16, i64 0, i32 2, !dbg !63
  %28 = load %struct.rb_method_definition_struct*, %struct.rb_method_definition_struct** %27, align 8, !dbg !63, !tbaa !77, !noalias !65
  %29 = getelementptr inbounds %struct.rb_method_definition_struct, %struct.rb_method_definition_struct* %28, i64 0, i32 2, !dbg !63
  %30 = load i64, i64* %29, align 8, !dbg !63, !tbaa !78, !noalias !65
  %31 = tail call %struct.rb_callable_method_entry_struct* @rb_callable_method_entry(i64 %26, i64 %30) #8, !dbg !63, !noalias !65
  %32 = icmp eq %struct.rb_callable_method_entry_struct* %31, null, !dbg !63
  br i1 %32, label %33, label %sorbet_callSuper.exit, !dbg !63

33:                                               ; preds = %fillRequiredArgs
  %34 = load i64, i64* @rb_eRuntimeError, align 8, !dbg !63, !tbaa !4
  tail call void (i64, i8*, ...) @rb_raise(i64 %34, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !63
  unreachable, !dbg !63

sorbet_callSuper.exit:                            ; preds = %fillRequiredArgs
  %35 = tail call i64 @rb_vm_call_kw(%struct.rb_execution_context_struct* %11, i64 %15, i64 %30, i32 0, i64* null, %struct.rb_callable_method_entry_struct* nonnull %31, i32 0) #8, !dbg !63
  ret i64 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: nounwind
declare void @llvm.assume(i1) #8

; Function Attrs: ssp
define linkonce void @"const_recompute_T::Helpers"() local_unnamed_addr #9 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str_T::Helpers", i64 0, i64 0), i64 10)
  store i64 %1, i64* @"guarded_const_T::Helpers", align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !55
  store i64 %2, i64* @"guard_epoch_T::Helpers", align 8
  ret void
}

; Function Attrs: ssp
define linkonce void @"const_recompute_T::Sig"() local_unnamed_addr #9 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"str_T::Sig", i64 0, i64 0), i64 6)
  store i64 %1, i64* @"guarded_const_T::Sig", align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !55
  store i64 %2, i64* @"guard_epoch_T::Sig", align 8
  ret void
}

; Function Attrs: ssp
define linkonce void @const_recompute_IFoo() local_unnamed_addr #9 {
  %1 = tail call i64 @sorbet_getConstant(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str_IFoo, i64 0, i64 0), i64 4)
  store i64 %1, i64* @guarded_const_IFoo, align 8
  %2 = load i64, i64* @ruby_vm_global_constant_state, align 8, !tbaa !55
  store i64 %2, i64* @guard_epoch_IFoo, align 8
  ret void
}

attributes #0 = { noreturn }
attributes #1 = { "addedToSilenceEmptyAttrsError" }
attributes #2 = { alwaysinline nounwind ssp uwtable }
attributes #3 = { allocsize(0,1) }
attributes #4 = { nounwind ssp uwtable }
attributes #5 = { sspreq }
attributes #6 = { nounwind sspreq uwtable }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { ssp }
attributes #10 = { nounwind allocsize(0,1) }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "Sorbet LLVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3)
!2 = !DIFile(filename: "test/testdata/compiler/impl_abstract_via_extend.rb", directory: ".")
!3 = !{}
!4 = !{!5, !5, i64 0}
!5 = !{!"long", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !DILocation(line: 14, column: 1, scope: !9)
!9 = distinct !DISubprogram(name: "<root>.<static-init>", linkageName: "func_<root>.<static-init>$152", scope: null, file: !2, line: 5, type: !10, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "VALUE", size: 64, encoding: DW_ATE_signed)
!13 = !DILocation(line: 10, column: 3, scope: !14)
!14 = distinct !DISubprogram(name: "IFoo.<static-init>", linkageName: "func_IFoo.<static-init>L64", scope: null, file: !2, line: 5, type: !10, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!15 = !DILocation(line: 10, column: 8, scope: !16)
!16 = distinct !DISubprogram(name: "IFoo.<static-init>", linkageName: "func_IFoo.<static-init>L64$block_1", scope: !14, file: !2, line: 5, type: !10, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!17 = !DILocation(line: 6, column: 3, scope: !14)
!18 = !DILocation(line: 7, column: 3, scope: !14)
!19 = !DILocation(line: 8, column: 3, scope: !14)
!20 = !DILocation(line: 11, column: 3, scope: !14)
!21 = !{!22, !22, i64 0}
!22 = !{!"any pointer", !6, i64 0}
!23 = !{!24, !5, i64 400}
!24 = !{!"rb_vm_struct", !5, i64 0, !25, i64 8, !22, i64 192, !22, i64 200, !22, i64 208, !29, i64 216, !6, i64 224, !26, i64 264, !26, i64 280, !26, i64 296, !26, i64 312, !5, i64 328, !28, i64 336, !28, i64 340, !28, i64 344, !28, i64 344, !28, i64 344, !28, i64 344, !28, i64 348, !5, i64 352, !6, i64 360, !5, i64 400, !5, i64 408, !5, i64 416, !5, i64 424, !5, i64 432, !5, i64 440, !5, i64 448, !22, i64 456, !22, i64 464, !30, i64 472, !31, i64 992, !22, i64 1016, !22, i64 1024, !28, i64 1032, !28, i64 1036, !26, i64 1040, !6, i64 1056, !5, i64 1096, !5, i64 1104, !5, i64 1112, !5, i64 1120, !5, i64 1128, !28, i64 1136, !22, i64 1144, !22, i64 1152, !22, i64 1160, !22, i64 1168, !22, i64 1176, !22, i64 1184, !28, i64 1192, !32, i64 1200, !6, i64 1232}
!25 = !{!"rb_global_vm_lock_struct", !22, i64 0, !6, i64 8, !26, i64 48, !22, i64 64, !28, i64 72, !6, i64 80, !6, i64 128, !28, i64 176, !28, i64 180}
!26 = !{!"list_head", !27, i64 0}
!27 = !{!"list_node", !22, i64 0, !22, i64 8}
!28 = !{!"int", !6, i64 0}
!29 = !{!"long long", !6, i64 0}
!30 = !{!"", !6, i64 0}
!31 = !{!"rb_hook_list_struct", !22, i64 0, !28, i64 8, !28, i64 12, !28, i64 16}
!32 = !{!"", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24}
!33 = !{!34, !22, i64 16}
!34 = !{!"rb_execution_context_struct", !22, i64 0, !5, i64 8, !22, i64 16, !22, i64 24, !22, i64 32, !28, i64 40, !28, i64 44, !22, i64 48, !22, i64 56, !22, i64 64, !5, i64 72, !5, i64 80, !22, i64 88, !5, i64 96, !22, i64 104, !22, i64 112, !5, i64 120, !5, i64 128, !6, i64 136, !6, i64 137, !5, i64 144, !35, i64 152}
!35 = !{!"", !22, i64 0, !22, i64 8, !5, i64 16, !6, i64 24}
!36 = !{!37, !22, i64 16}
!37 = !{!"rb_control_frame_struct", !22, i64 0, !22, i64 8, !22, i64 16, !5, i64 24, !22, i64 32, !22, i64 40, !22, i64 48}
!38 = !{!37, !22, i64 32}
!39 = !{!40, !22, i64 16}
!40 = !{!"rb_iseq_struct", !5, i64 0, !5, i64 8, !22, i64 16, !6, i64 24}
!41 = !{!42, !22, i64 8}
!42 = !{!"rb_iseq_constant_body", !6, i64 0, !28, i64 4, !22, i64 8, !43, i64 16, !45, i64 64, !48, i64 120, !22, i64 152, !22, i64 160, !22, i64 168, !22, i64 176, !22, i64 184, !22, i64 192, !49, i64 200, !28, i64 232, !28, i64 236, !28, i64 240, !28, i64 244, !28, i64 248, !6, i64 252, !5, i64 256}
!43 = !{!"", !44, i64 0, !28, i64 4, !28, i64 8, !28, i64 12, !28, i64 16, !28, i64 20, !28, i64 24, !28, i64 28, !22, i64 32, !22, i64 40}
!44 = !{!"", !28, i64 0, !28, i64 0, !28, i64 0, !28, i64 0, !28, i64 0, !28, i64 0, !28, i64 0, !28, i64 0, !28, i64 1, !28, i64 1}
!45 = !{!"rb_iseq_location_struct", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !28, i64 32, !46, i64 36}
!46 = !{!"rb_code_location_struct", !47, i64 0, !47, i64 8}
!47 = !{!"rb_code_position_struct", !28, i64 0, !28, i64 4}
!48 = !{!"iseq_insn_info", !22, i64 0, !22, i64 8, !28, i64 16, !22, i64 24}
!49 = !{!"", !5, i64 0, !5, i64 8, !5, i64 16, !22, i64 24}
!50 = !DILocation(line: 0, scope: !9)
!51 = !DILocation(line: 5, column: 1, scope: !9)
!52 = !DILocation(line: 10, column: 3, scope: !14, inlinedAt: !53)
!53 = distinct !DILocation(line: 5, column: 1, scope: !9)
!54 = !DILocation(line: 6, column: 3, scope: !14, inlinedAt: !53)
!55 = !{!29, !29, i64 0}
!56 = !{!"branch_weights", i32 10000, i32 1}
!57 = !{!37, !22, i64 8}
!58 = !DILocation(line: 7, column: 3, scope: !14, inlinedAt: !53)
!59 = !DILocation(line: 8, column: 3, scope: !14, inlinedAt: !53)
!60 = !DILocation(line: 11, column: 3, scope: !14, inlinedAt: !53)
!61 = !DILocation(line: 14, column: 18, scope: !9)
!62 = distinct !DISubprogram(name: "IFoo#foo", linkageName: "func_IFoo#foo", scope: null, file: !2, line: 11, type: !10, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!63 = !DILocation(line: 11, column: 3, scope: !62)
!64 = !{!"branch_weights", i32 2000, i32 1}
!65 = !{!66}
!66 = distinct !{!66, !67, !"sorbet_callSuper: argument 0"}
!67 = distinct !{!67, !"sorbet_callSuper"}
!68 = !{!37, !5, i64 24}
!69 = !{!70, !5, i64 8}
!70 = !{!"rb_callable_method_entry_struct", !5, i64 0, !5, i64 8, !22, i64 16, !5, i64 24, !5, i64 32}
!71 = !{!72, !22, i64 24}
!72 = !{!"RClass", !73, i64 0, !5, i64 16, !22, i64 24, !29, i64 32}
!73 = !{!"RBasic", !5, i64 0, !5, i64 8}
!74 = !{!75, !5, i64 64}
!75 = !{!"rb_classext_struct", !22, i64 0, !22, i64 8, !22, i64 16, !22, i64 24, !22, i64 32, !22, i64 40, !22, i64 48, !22, i64 56, !5, i64 64, !5, i64 72, !22, i64 80, !5, i64 88}
!76 = !{!72, !5, i64 16}
!77 = !{!70, !22, i64 16}
!78 = !{!79, !5, i64 32}
!79 = !{!"rb_method_definition_struct", !6, i64 0, !28, i64 0, !28, i64 4, !6, i64 8, !5, i64 32, !5, i64 40}
