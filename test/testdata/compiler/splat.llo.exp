; ModuleID = 'payload'
source_filename = "compiler/IREmitter/Payload/payload.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%struct.rb_data_type_struct = type { i8*, %struct.anon.19, %struct.rb_data_type_struct*, i8*, i64 }
%struct.anon.19 = type { void (i8*)*, void (i8*)*, i64 (i8*)*, [2 x i8*] }
%struct.rb_execution_context_struct = type { i64*, i64, %struct.rb_control_frame_struct*, %struct.rb_vm_tag*, %struct.rb_vm_protect_tag*, i32, i32, %struct.rb_fiber_struct*, %struct.rb_thread_struct*, %struct.st_table*, i64, i64, i64*, i64, %struct.rb_ensure_list*, %struct.rb_trace_arg_struct*, i64, i64, i8, i8, i64, %struct.anon.18 }
%struct.rb_control_frame_struct = type { i64*, i64*, %struct.rb_iseq_struct*, i64, i64*, i8*, i64* }
%struct.rb_iseq_struct = type { i64, i64, %struct.rb_iseq_constant_body*, %union.anon.15 }
%struct.rb_iseq_constant_body = type { i32, i32, i64*, %struct.anon.1, %struct.rb_iseq_location_struct, %struct.iseq_insn_info, i64*, %struct.iseq_catch_table*, %struct.rb_iseq_struct*, %struct.rb_iseq_struct*, %union.iseq_inline_storage_entry*, %struct.rb_call_info*, %struct.rb_call_cache*, %struct.anon.14, i32, i32, i32, i32, i32, i8 }
%struct.anon.1 = type { %struct.anon.2, i32, i32, i32, i32, i32, i32, i32, i64*, %struct.rb_iseq_param_keyword* }
%struct.anon.2 = type { i8, [3 x i8] }
%struct.rb_iseq_param_keyword = type { i32, i32, i32, i32, i64*, i64* }
%struct.rb_iseq_location_struct = type { i64, i64, i64, i64, i32, %struct.rb_code_location_struct }
%struct.rb_code_location_struct = type { %struct.rb_code_position_struct, %struct.rb_code_position_struct }
%struct.rb_code_position_struct = type { i32, i32 }
%struct.iseq_insn_info = type { %struct.iseq_insn_info_entry*, i32*, i32, %struct.succ_index_table* }
%struct.iseq_insn_info_entry = type { i32, i32 }
%struct.succ_index_table = type opaque
%struct.iseq_catch_table = type opaque
%union.iseq_inline_storage_entry = type { %struct.iseq_inline_cache_entry }
%struct.iseq_inline_cache_entry = type { i64, %struct.rb_cref_struct*, %union.anon.11 }
%struct.rb_cref_struct = type { i64, i64, i64, %struct.rb_cref_struct*, %struct.rb_scope_visi_struct }
%struct.rb_scope_visi_struct = type { i8, [3 x i8] }
%union.anon.11 = type { i64 }
%struct.rb_call_info = type { i64, i32, i32 }
%struct.rb_call_cache = type { i64, i64, %struct.rb_callable_method_entry_struct*, i64 (%struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, %struct.rb_calling_info*, %struct.rb_call_info*, %struct.rb_call_cache*)*, %union.anon.13 }
%struct.rb_callable_method_entry_struct = type { i64, i64, %struct.rb_method_definition_struct*, i64, i64 }
%struct.rb_method_definition_struct = type { i64, %union.anon.12, i64 }
%union.anon.12 = type { %struct.rb_method_cfunc_struct }
%struct.rb_method_cfunc_struct = type { i64 (...)*, i64 (i64 (...)*, i64, i32, i64*)*, i32 }
%struct.rb_calling_info = type { i64, i64, i32 }
%union.anon.13 = type { i32 }
%struct.anon.14 = type { i64, i64, i64, i64* }
%union.anon.15 = type { %struct.anon.16 }
%struct.anon.16 = type { i64, i32 }
%struct.rb_vm_tag = type { i64, i64, [38 x i32], %struct.rb_vm_tag*, i32 }
%struct.rb_vm_protect_tag = type { %struct.rb_vm_protect_tag* }
%struct.rb_fiber_struct = type opaque
%struct.rb_thread_struct = type { %struct.list_node, i64, %struct.rb_vm_struct*, %struct.rb_execution_context_struct*, i64, %struct.rb_calling_info*, i64, i64, %struct._opaque_pthread_t*, i8, i8, i32, %struct.native_thread_data_struct, i8*, i64, i64, i64, i64, %struct._opaque_pthread_mutex_t, %struct.rb_unblock_callback, i64, %struct.rb_mutex_struct*, %struct.rb_thread_list_struct*, %union.anon.8, i32, i64, %struct.rb_fiber_struct*, [38 x i32], i64 }
%struct.list_node = type { %struct.list_node*, %struct.list_node* }
%struct.rb_vm_struct = type { i64, %struct.rb_global_vm_lock_struct, %struct.rb_thread_struct*, %struct.rb_thread_struct*, i8*, i64, %struct._opaque_pthread_mutex_t, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i32, i8, i32, i64, [5 x i64], i64, i64, i64, i64, i64, i64, i64, %struct.st_table*, %struct.st_table*, %struct.anon.4, %struct.rb_hook_list_struct, %struct.st_table*, %struct.rb_postponed_job_struct*, i32, i32, %struct.list_head, %struct._opaque_pthread_mutex_t, i64, i64, i64, i64, i64, i32, i64, %struct.rb_objspace*, %struct.rb_at_exit_list*, i64*, %struct.st_table*, %struct.anon.5, [28 x i16] }
%struct.rb_global_vm_lock_struct = type { %struct.rb_thread_struct*, %struct._opaque_pthread_mutex_t, %struct.list_head, %struct.rb_thread_struct*, i32, %struct._opaque_pthread_cond_t, %struct._opaque_pthread_cond_t, i32, i32 }
%struct._opaque_pthread_cond_t = type { i64, [40 x i8] }
%struct.anon.4 = type { [32 x i64], [32 x i8] }
%struct.rb_hook_list_struct = type { %struct.rb_event_hook_struct*, i32, i32, i32 }
%struct.rb_event_hook_struct = type opaque
%struct.rb_postponed_job_struct = type opaque
%struct.list_head = type { %struct.list_node }
%struct.rb_objspace = type opaque
%struct.rb_at_exit_list = type { void (%struct.rb_vm_struct*)*, %struct.rb_at_exit_list* }
%struct.anon.5 = type { i64, i64, i64, i64 }
%struct._opaque_pthread_t = type { i64, %struct.__darwin_pthread_handler_rec*, [8176 x i8] }
%struct.__darwin_pthread_handler_rec = type { void (i8*)*, i8*, %struct.__darwin_pthread_handler_rec* }
%struct.native_thread_data_struct = type { %union.anon.6, %struct.anon.7 }
%union.anon.6 = type { %struct.list_node }
%struct.anon.7 = type { %struct._opaque_pthread_cond_t, %struct._opaque_pthread_cond_t }
%struct._opaque_pthread_mutex_t = type { i64, [56 x i8] }
%struct.rb_unblock_callback = type { void (i8*)*, i8* }
%struct.rb_mutex_struct = type opaque
%struct.rb_thread_list_struct = type { %struct.rb_thread_list_struct*, %struct.rb_thread_struct* }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i64, i64 }
%struct.st_table = type { i8, i8, i8, i32, %struct.st_hash_type*, i64, i64*, i64, i64, %struct.st_table_entry* }
%struct.st_hash_type = type { i32 (...)*, i64 (...)* }
%struct.st_table_entry = type opaque
%struct.rb_ensure_list = type { %struct.rb_ensure_list*, %struct.rb_ensure_entry }
%struct.rb_ensure_entry = type { i64, i64 (...)*, i64 }
%struct.rb_trace_arg_struct = type { i32, %struct.rb_execution_context_struct*, %struct.rb_control_frame_struct*, i64, i64, i64, i64, i64, i32, i32, i64 }
%struct.anon.18 = type { i64*, i64*, i64, [37 x i32] }
%struct.RBasic = type { i64, i64 }
%struct.RString = type { %struct.RBasic, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { i64, i8*, %union.anon.0 }
%union.anon.0 = type { i64 }
%struct.rb_ast_body_struct = type { %struct.RNode*, i64, i32 }
%struct.RNode = type { i64, %union.anon.20, %union.anon.21, %union.anon.22, %struct.rb_code_location_struct, i32 }
%union.anon.20 = type { %struct.RNode* }
%union.anon.21 = type { %struct.RNode* }
%union.anon.22 = type { %struct.RNode* }
%struct.RArray = type { %struct.RBasic, %union.anon.25 }
%union.anon.25 = type { %struct.anon.26 }
%struct.anon.26 = type { i64, %union.anon.27, i64* }
%union.anon.27 = type { i64 }

@.str = private unnamed_addr constant [5 x i8] c"%li\0B\00", align 1
@rb_cObject = external local_unnamed_addr constant i64, align 8
@.str.9 = private unnamed_addr constant [16 x i8] c"CompiledClosure\00", align 1
@closureInfo = local_unnamed_addr constant %struct.rb_data_type_struct { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i32 0, i32 0), %struct.anon.19 { void (i8*)* @sorbet_Closure_mark, void (i8*)* inttoptr (i64 -1 to void (i8*)*), i64 (i8*)* @sorbet_Closure_size, [2 x i8*] zeroinitializer }, %struct.rb_data_type_struct* null, i8* null, i64 1 }, align 8
@ruby_current_execution_context_ptr = external local_unnamed_addr global %struct.rb_execution_context_struct*, align 8
@"stackFramePrecomputed_func_<root>.<static-init>$111" = internal unnamed_addr global i8* null, align 8
@"rubyIdPrecomputed_<top (required)>" = internal unnamed_addr global i64 0, align 8
@"str_<top (required)>" = private unnamed_addr constant [17 x i8] c"<top (required)>\00", align 1
@"str_test/testdata/compiler/splat.rb" = private unnamed_addr constant [32 x i8] c"test/testdata/compiler/splat.rb\00", align 1
@"rubyIdPrecomputed_[]" = internal unnamed_addr global i64 0, align 8
@"str_[]" = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@rubyIdPrecomputed_puts = internal unnamed_addr global i64 0, align 8
@str_puts = private unnamed_addr constant [5 x i8] c"puts\00", align 1
@llvm.global_ctors = appending global [4 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @"Constr_rubyIdPrecomputed_<top (required)>", i8* bitcast (i64* @"rubyIdPrecomputed_<top (required)>" to i8*) }, { i32, void ()*, i8* } { i32 0, void ()* @"Constr_stackFramePrecomputed_func_<root>.<static-init>$111", i8* bitcast (i8** @"stackFramePrecomputed_func_<root>.<static-init>$111" to i8*) }, { i32, void ()*, i8* } { i32 0, void ()* @"Constr_rubyIdPrecomputed_[]", i8* bitcast (i64* @"rubyIdPrecomputed_[]" to i8*) }, { i32, void ()*, i8* } { i32 0, void ()* @Constr_rubyIdPrecomputed_puts, i8* bitcast (i64* @rubyIdPrecomputed_puts to i8*) }]

; Function Attrs: nounwind ssp uwtable
define weak i8* @dbg_pi(i64 %0) local_unnamed_addr #0 {
  %2 = tail call i8* @rb_id2name(i64 %0) #7
  ret i8* %2
}

declare i8* @rb_id2name(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak i8* @dbg_p(i64 %0) local_unnamed_addr #0 {
  %2 = tail call i64 (i8*, ...) @rb_sprintf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 %0) #7
  %3 = inttoptr i64 %2 to %struct.RBasic*
  %4 = getelementptr inbounds %struct.RBasic, %struct.RBasic* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8, !tbaa !0
  %6 = and i64 %5, 8192
  %7 = icmp eq i64 %6, 0
  %8 = tail call i64 (i8*, ...) @rb_sprintf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 %0) #7
  %9 = inttoptr i64 %8 to %struct.RString*
  br i1 %7, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.RString, %struct.RString* %9, i64 0, i32 1
  %12 = bitcast %union.anon* %11 to i8*
  br label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.RString, %struct.RString* %9, i64 0, i32 1, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8, !tbaa !5
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi i8* [ %12, %10 ], [ %15, %13 ]
  ret i8* %17
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @rb_sprintf(i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define void @stopInDebugger() local_unnamed_addr #0 {
  tail call void asm sideeffect "int $$3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !6
  ret void
}

declare i64 @rb_str_new(i8*, i64) local_unnamed_addr #1

declare i64 @rb_ary_new_from_values(i64, i64*) local_unnamed_addr #1

declare i64 @rb_ary_push(i64, i64) local_unnamed_addr #1

declare i64 @rb_intern2(i8*, i64) local_unnamed_addr #1

declare i64 @rb_funcallv(i64, i64, i32, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @sorbet_Closure_mark(i8* %0) #0 {
  %2 = bitcast i8* %0 to i32*
  %3 = load i32, i32* %2, align 8, !tbaa !7
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = bitcast i8* %5 to i64*
  tail call void @rb_gc_mark_values(i64 %4, i64* nonnull %6) #7
  ret void
}

declare void @rb_gc_mark_values(i64, i64*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @sorbet_Closure_size(i8* nocapture readonly %0) #3 {
  %2 = bitcast i8* %0 to i32*
  %3 = load i32, i32* %2, align 8, !tbaa !7
  %4 = sext i32 %3 to i64
  %5 = shl nsw i64 %4, 3
  %6 = add nsw i64 %5, 8
  ret i64 %6
}

declare %struct.rb_iseq_struct* @rb_iseq_new(%struct.rb_ast_body_struct*, i64, i64, i64, %struct.rb_iseq_struct*, i32) local_unnamed_addr #1

declare i8* @ruby_xmalloc2(i64, i64) local_unnamed_addr #1

declare void @rb_iseq_insns_info_encode_positions(%struct.rb_iseq_struct*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define i64** @sorbet_setRubyStackFrame(i8* %0) local_unnamed_addr #4 {
  %2 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %3 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %2, i64 0, i32 2
  %4 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %3, align 8, !tbaa !11
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %4, i64 0, i32 2
  %6 = bitcast %struct.rb_iseq_struct** %5 to i8**
  store i8* %0, i8** %6, align 8, !tbaa !14
  %7 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %4, i64 0, i32 4
  %8 = load i64*, i64** %7, align 8, !tbaa !16
  %9 = load i64, i64* %8, align 8, !tbaa !17
  %10 = and i64 %9, -129
  store i64 %10, i64* %8, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %4, i64 0, i32 0
  ret i64** %11
}

declare i64 @rb_ary_new() local_unnamed_addr #1

declare i64 @rb_ary_dup(i64) local_unnamed_addr #1

declare i64 @rb_ary_entry(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp
define internal void @"Constr_stackFramePrecomputed_func_<root>.<static-init>$111"() #5 {
constr:
  %0 = tail call i64 @rb_str_new(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 16) #7
  %1 = tail call i64 @rb_str_new(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str_test/testdata/compiler/splat.rb", i64 0, i64 0), i64 31) #7
  %2 = tail call i64 @rb_str_new(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str_test/testdata/compiler/splat.rb", i64 0, i64 0), i64 31) #7
  %3 = tail call %struct.rb_iseq_struct* @rb_iseq_new(%struct.rb_ast_body_struct* null, i64 %0, i64 %1, i64 %2, %struct.rb_iseq_struct* null, i32 0) #7
  %4 = tail call i8* @ruby_xmalloc2(i64 8, i64 8) #7
  %5 = tail call i8* @ruby_xmalloc2(i64 8, i64 4) #7
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 4, !tbaa !7
  %7 = bitcast i8* %4 to i32*
  store i32 3, i32* %7, align 4, !tbaa !18
  %8 = getelementptr inbounds i8, i8* %5, i64 4
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4, !tbaa !7
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 4, i32* %11, align 4, !tbaa !18
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 2, i32* %13, align 4, !tbaa !7
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 5, i32* %15, align 4, !tbaa !18
  %16 = getelementptr inbounds i8, i8* %5, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 3, i32* %17, align 4, !tbaa !7
  %18 = getelementptr inbounds i8, i8* %4, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 6, i32* %19, align 4, !tbaa !18
  %20 = getelementptr inbounds i8, i8* %5, i64 16
  %21 = bitcast i8* %20 to i32*
  store i32 4, i32* %21, align 4, !tbaa !7
  %22 = getelementptr inbounds i8, i8* %4, i64 32
  %23 = bitcast i8* %22 to i32*
  store i32 7, i32* %23, align 4, !tbaa !18
  %24 = getelementptr inbounds i8, i8* %5, i64 20
  %25 = bitcast i8* %24 to i32*
  store i32 5, i32* %25, align 4, !tbaa !7
  %26 = getelementptr inbounds i8, i8* %4, i64 40
  %27 = bitcast i8* %26 to i32*
  store i32 8, i32* %27, align 4, !tbaa !18
  %28 = getelementptr inbounds i8, i8* %5, i64 24
  %29 = bitcast i8* %28 to i32*
  store i32 6, i32* %29, align 4, !tbaa !7
  %30 = getelementptr inbounds i8, i8* %4, i64 48
  %31 = bitcast i8* %30 to i32*
  store i32 9, i32* %31, align 4, !tbaa !18
  %32 = getelementptr inbounds i8, i8* %5, i64 28
  %33 = bitcast i8* %32 to i32*
  store i32 7, i32* %33, align 4, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %4, i64 56
  %35 = bitcast i8* %34 to i32*
  store i32 10, i32* %35, align 4, !tbaa !18
  %36 = getelementptr inbounds %struct.rb_iseq_struct, %struct.rb_iseq_struct* %3, i64 0, i32 2
  %37 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %36, align 8, !tbaa !20
  %38 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %37, i64 0, i32 5, i32 0
  %39 = bitcast %struct.iseq_insn_info_entry** %38 to i8**
  store i8* %4, i8** %39, align 8, !tbaa !22
  %40 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %37, i64 0, i32 5, i32 1
  %41 = bitcast i32** %40 to i8**
  store i8* %5, i8** %41, align 8, !tbaa !31
  %42 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %37, i64 0, i32 1
  store i32 8, i32* %42, align 4, !tbaa !32
  %43 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %37, i64 0, i32 5, i32 2
  store i32 8, i32* %43, align 8, !tbaa !33
  tail call void @rb_iseq_insns_info_encode_positions(%struct.rb_iseq_struct* %3) #7
  %44 = load %struct.rb_iseq_constant_body*, %struct.rb_iseq_constant_body** %36, align 8, !tbaa !20
  %45 = getelementptr inbounds %struct.rb_iseq_constant_body, %struct.rb_iseq_constant_body* %44, i64 0, i32 2
  store i64* null, i64** %45, align 8, !tbaa !34
  store %struct.rb_iseq_struct* %3, %struct.rb_iseq_struct** bitcast (i8** @"stackFramePrecomputed_func_<root>.<static-init>$111" to %struct.rb_iseq_struct**), align 8
  ret void
}

; Function Attrs: nounwind ssp
define internal void @"Constr_rubyIdPrecomputed_<top (required)>"() #5 {
constr:
  %0 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str_<top (required)>", i64 0, i64 0), i64 16) #7
  store i64 %0, i64* @"rubyIdPrecomputed_<top (required)>", align 8
  ret void
}

; Function Attrs: nounwind ssp
define internal void @"Constr_rubyIdPrecomputed_[]"() #5 {
constr:
  %0 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str_[]", i64 0, i64 0), i64 2) #7
  store i64 %0, i64* @"rubyIdPrecomputed_[]", align 8
  ret void
}

; Function Attrs: nounwind ssp
define internal void @Constr_rubyIdPrecomputed_puts() #5 {
constr:
  %0 = tail call i64 @rb_intern2(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str_puts, i64 0, i64 0), i64 4) #7
  store i64 %0, i64* @rubyIdPrecomputed_puts, align 8
  ret void
}

; Function Attrs: nounwind sspreq
define void @Init_test_testdata_compiler_splat() local_unnamed_addr #6 {
typeTestSuccess.i:
  %callArgs.i = alloca [7 x i64], align 16
  %0 = load i64, i64* @rb_cObject, align 8
  %1 = bitcast [7 x i64]* %callArgs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1)
  %"rubyId_[].i" = load i64, i64* @"rubyIdPrecomputed_[]", align 8
  %rubyId_puts.i = load i64, i64* @rubyIdPrecomputed_puts, align 8
  %"stackFrame_func_<root>.<static-init>$1118.i" = load i64, i64* bitcast (i8** @"stackFramePrecomputed_func_<root>.<static-init>$111" to i64*), align 8
  %2 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %3 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %2, i64 0, i32 2
  %4 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %3, align 8, !tbaa !11
  %5 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %4, i64 0, i32 2
  %6 = bitcast %struct.rb_iseq_struct** %5 to i64*
  store i64 %"stackFrame_func_<root>.<static-init>$1118.i", i64* %6, align 8, !tbaa !14
  %7 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %4, i64 0, i32 4
  %8 = load i64*, i64** %7, align 8, !tbaa !16
  %9 = load i64, i64* %8, align 8, !tbaa !17
  %10 = and i64 %9, -129
  store i64 %10, i64* %8, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %4, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %11, align 8, !tbaa !35
  %12 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %13 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %12, i64 0, i32 2
  %14 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %13, align 8, !tbaa !11
  %15 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %14, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %15, align 8, !tbaa !35
  %16 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %17 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %16, i64 0, i32 2
  %18 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %17, align 8, !tbaa !11
  %19 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %18, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %19, align 8, !tbaa !35
  %20 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %20, i64 0, i32 2
  %22 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %21, align 8, !tbaa !11
  %23 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %22, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %23, align 8, !tbaa !35
  %24 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %25 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %24, i64 0, i32 2
  %26 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %25, align 8, !tbaa !11
  %27 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %26, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %27, align 8, !tbaa !35
  %28 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %28, i64 0, i32 2
  %30 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %29, align 8, !tbaa !11
  %31 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %30, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %31, align 8, !tbaa !35
  %32 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %33 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %32, i64 0, i32 2
  %34 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %33, align 8, !tbaa !11
  %35 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %34, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %35, align 8, !tbaa !35
  %36 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %37 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %36, i64 0, i32 2
  %38 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %37, align 8, !tbaa !11
  %39 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %38, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %39, align 8, !tbaa !35
  %40 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %41 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %40, i64 0, i32 2
  %42 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %41, align 8, !tbaa !11
  %43 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %42, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %43, align 8, !tbaa !35
  %callArgsAddr.i = getelementptr inbounds [7 x i64], [7 x i64]* %callArgs.i, i64 0, i64 0
  %callArgsAddr103.i = getelementptr inbounds [7 x i64], [7 x i64]* %callArgs.i, i64 0, i64 1
  %callArgsAddr105.i = getelementptr inbounds [7 x i64], [7 x i64]* %callArgs.i, i64 0, i64 2
  %44 = bitcast [7 x i64]* %callArgs.i to <4 x i64>*
  store <4 x i64> <i64 3, i64 5, i64 7, i64 9>, <4 x i64>* %44, align 16
  %callArgsAddr109.i = getelementptr inbounds [7 x i64], [7 x i64]* %callArgs.i, i64 0, i64 4
  %45 = bitcast i64* %callArgsAddr109.i to <2 x i64>*
  store <2 x i64> <i64 11, i64 13>, <2 x i64>* %45, align 16
  %callArgsAddr113.i = getelementptr inbounds [7 x i64], [7 x i64]* %callArgs.i, i64 0, i64 6
  store i64 15, i64* %callArgsAddr113.i, align 16
  %46 = call i64 @rb_ary_new_from_values(i64 7, i64* nonnull %callArgsAddr.i) #7
  %47 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %48 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %47, i64 0, i32 2
  %49 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %48, align 8, !tbaa !11
  %50 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %49, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %50, align 8, !tbaa !35
  %51 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %52 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %51, i64 0, i32 2
  %53 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %52, align 8, !tbaa !11
  %54 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %53, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %54, align 8, !tbaa !35
  %55 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %56 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %55, i64 0, i32 2
  %57 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %56, align 8, !tbaa !11
  %58 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %57, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %58, align 8, !tbaa !35
  %59 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %60 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %59, i64 0, i32 2
  %61 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %60, align 8, !tbaa !11
  %62 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %61, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %62, align 8, !tbaa !35
  store i64 %46, i64* %callArgsAddr.i, align 16
  %63 = bitcast i64* %callArgsAddr103.i to <2 x i64>*
  store <2 x i64> <i64 3, i64 5>, <2 x i64>* %63, align 8
  %64 = inttoptr i64 %46 to %struct.RBasic*
  %65 = getelementptr inbounds %struct.RBasic, %struct.RBasic* %64, i64 0, i32 0
  %66 = load i64, i64* %65, align 8, !tbaa !0, !noalias !36
  %67 = and i64 %66, 8192
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %typeTestSuccess.i
  %70 = lshr i64 %66, 15
  %71 = and i64 %70, 3
  br label %rb_array_len.exit.i1.i

72:                                               ; preds = %typeTestSuccess.i
  %73 = inttoptr i64 %46 to %struct.RArray*
  %74 = getelementptr inbounds %struct.RArray, %struct.RArray* %73, i64 0, i32 1, i32 0, i32 0
  %75 = load i64, i64* %74, align 8, !tbaa !5, !noalias !36
  br label %rb_array_len.exit.i1.i

rb_array_len.exit.i1.i:                           ; preds = %72, %69
  %76 = phi i64 [ %71, %69 ], [ %75, %72 ]
  %77 = trunc i64 %76 to i32
  %78 = sub i32 3, %77
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %sorbet_splatIntrinsic.exit2.i

80:                                               ; preds = %rb_array_len.exit.i1.i
  %81 = call i64 @rb_ary_dup(i64 %46) #7, !noalias !36
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i32 [ 0, %80 ], [ %85, %82 ]
  %84 = call i64 @rb_ary_push(i64 %81, i64 8) #7, !noalias !36
  %85 = add nuw nsw i32 %83, 1
  %86 = icmp eq i32 %85, %78
  br i1 %86, label %sorbet_splatIntrinsic.exit2.i, label %82

sorbet_splatIntrinsic.exit2.i:                    ; preds = %82, %rb_array_len.exit.i1.i
  %87 = phi i64 [ %46, %rb_array_len.exit.i1.i ], [ %81, %82 ]
  %88 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %89 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %88, i64 0, i32 2
  %90 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %89, align 8, !tbaa !11
  %91 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %90, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %91, align 8, !tbaa !35
  %92 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %93 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %92, i64 0, i32 2
  %94 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %93, align 8, !tbaa !11
  %95 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %94, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %95, align 8, !tbaa !35
  %96 = and i64 %87, 7
  %97 = icmp ne i64 %96, 0
  %98 = and i64 %87, -9
  %99 = icmp eq i64 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %sorbet_isa_Array.exit6.thread.i, label %sorbet_isa_Array.exit6.i, !prof !39

sorbet_isa_Array.exit6.thread.i:                  ; preds = %sorbet_splatIntrinsic.exit2.i
  store i64 1, i64* %callArgsAddr.i, align 16
  br label %"slowSymCallIntrinsic_[].i"

sorbet_isa_Array.exit6.i:                         ; preds = %sorbet_splatIntrinsic.exit2.i
  %101 = inttoptr i64 %87 to %struct.RBasic*
  %102 = getelementptr inbounds %struct.RBasic, %struct.RBasic* %101, i64 0, i32 0
  %103 = load i64, i64* %102, align 8, !tbaa !0
  %104 = and i64 %103, 31
  %105 = icmp eq i64 %104, 7
  store i64 1, i64* %callArgsAddr.i, align 16
  br i1 %105, label %"fastSymCallIntrinsic_[].i", label %"slowSymCallIntrinsic_[].i", !prof !40, !misexpect !41

"afterSymCallIntrinsic_[].i":                     ; preds = %"fastSymCallIntrinsic_[].i", %"slowSymCallIntrinsic_[].i"
  %106 = phi i1 [ true, %"fastSymCallIntrinsic_[].i" ], [ false, %"slowSymCallIntrinsic_[].i" ]
  %"symIntrinsicRawPhi_[].i" = phi i64 [ %116, %"fastSymCallIntrinsic_[].i" ], [ %115, %"slowSymCallIntrinsic_[].i" ]
  %107 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %108 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %107, i64 0, i32 2
  %109 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %108, align 8, !tbaa !11
  %110 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %109, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %110, align 8, !tbaa !35
  %111 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %112 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %111, i64 0, i32 2
  %113 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %112, align 8, !tbaa !11
  %114 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %113, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %114, align 8, !tbaa !35
  store i64 -3, i64* %callArgsAddr.i, align 16
  br i1 %106, label %"fastSymCallIntrinsic_[]139.i", label %"slowSymCallIntrinsic_[]138.i"

"slowSymCallIntrinsic_[].i":                      ; preds = %sorbet_isa_Array.exit6.i, %sorbet_isa_Array.exit6.thread.i
  %115 = call i64 @rb_funcallv(i64 %87, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"afterSymCallIntrinsic_[].i"

"fastSymCallIntrinsic_[].i":                      ; preds = %sorbet_isa_Array.exit6.i
  %116 = call i64 @rb_ary_entry(i64 %87, i64 0) #7
  br label %"afterSymCallIntrinsic_[].i"

"afterSymCallIntrinsic_[]137.i":                  ; preds = %"fastSymCallIntrinsic_[]139.i", %"slowSymCallIntrinsic_[]138.i"
  %"symIntrinsicRawPhi_[]149.i" = phi i64 [ %126, %"fastSymCallIntrinsic_[]139.i" ], [ %125, %"slowSymCallIntrinsic_[]138.i" ]
  %117 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %118 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %117, i64 0, i32 2
  %119 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %118, align 8, !tbaa !11
  %120 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %119, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %120, align 8, !tbaa !35
  %121 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %122 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %121, i64 0, i32 2
  %123 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %122, align 8, !tbaa !11
  %124 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %123, i64 0, i32 0
  store i64* inttoptr (i64 8 to i64*), i64** %124, align 8, !tbaa !35
  store i64 -1, i64* %callArgsAddr.i, align 16
  br i1 %106, label %"fastSymCallIntrinsic_[]154.i", label %"slowSymCallIntrinsic_[]153.i"

"slowSymCallIntrinsic_[]138.i":                   ; preds = %"afterSymCallIntrinsic_[].i"
  %125 = call i64 @rb_funcallv(i64 %87, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"afterSymCallIntrinsic_[]137.i"

"fastSymCallIntrinsic_[]139.i":                   ; preds = %"afterSymCallIntrinsic_[].i"
  %126 = call i64 @rb_ary_entry(i64 %87, i64 -2) #7
  br label %"afterSymCallIntrinsic_[]137.i"

"afterSymCallIntrinsic_[]152.i":                  ; preds = %"fastSymCallIntrinsic_[]154.i", %"slowSymCallIntrinsic_[]153.i"
  %"symIntrinsicRawPhi_[]164.i" = phi i64 [ %210, %"fastSymCallIntrinsic_[]154.i" ], [ %209, %"slowSymCallIntrinsic_[]153.i" ]
  %127 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %128 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %127, i64 0, i32 2
  %129 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %128, align 8, !tbaa !11
  %130 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %129, i64 0, i32 0
  store i64* inttoptr (i64 16 to i64*), i64** %130, align 8, !tbaa !35
  store i64 %"symIntrinsicRawPhi_[].i", i64* %callArgsAddr.i, align 16
  store i64 %"symIntrinsicRawPhi_[]149.i", i64* %callArgsAddr103.i, align 8
  store i64 %"symIntrinsicRawPhi_[]164.i", i64* %callArgsAddr105.i, align 16
  %131 = call i64 @rb_ary_new_from_values(i64 3, i64* nonnull %callArgsAddr.i) #7
  %132 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %133 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %132, i64 0, i32 2
  %134 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %133, align 8, !tbaa !11
  %135 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %134, i64 0, i32 0
  store i64* inttoptr (i64 16 to i64*), i64** %135, align 8, !tbaa !35
  store i64 %131, i64* %callArgsAddr.i, align 16
  %136 = call i64 @rb_funcallv(i64 %0, i64 %rubyId_puts.i, i32 1, i64* nonnull %callArgsAddr.i) #7
  %137 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %138 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %137, i64 0, i32 2
  %139 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %138, align 8, !tbaa !11
  %140 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %139, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %140, align 8, !tbaa !35
  %141 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %142 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %141, i64 0, i32 2
  %143 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %142, align 8, !tbaa !11
  %144 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %143, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %144, align 8, !tbaa !35
  %145 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %146 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %145, i64 0, i32 2
  %147 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %146, align 8, !tbaa !11
  %148 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %147, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %148, align 8, !tbaa !35
  %149 = bitcast [7 x i64]* %callArgs.i to <2 x i64>*
  store <2 x i64> <i64 3, i64 5>, <2 x i64>* %149, align 16
  %150 = call i64 @rb_ary_new_from_values(i64 2, i64* nonnull %callArgsAddr.i) #7
  %151 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %152 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %151, i64 0, i32 2
  %153 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %152, align 8, !tbaa !11
  %154 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %153, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %154, align 8, !tbaa !35
  %155 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %156 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %155, i64 0, i32 2
  %157 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %156, align 8, !tbaa !11
  %158 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %157, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %158, align 8, !tbaa !35
  %159 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %160 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %159, i64 0, i32 2
  %161 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %160, align 8, !tbaa !11
  %162 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %161, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %162, align 8, !tbaa !35
  %163 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %164 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %163, i64 0, i32 2
  %165 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %164, align 8, !tbaa !11
  %166 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %165, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %166, align 8, !tbaa !35
  store i64 %150, i64* %callArgsAddr.i, align 16
  store <2 x i64> <i64 3, i64 5>, <2 x i64>* %63, align 8
  %167 = inttoptr i64 %150 to %struct.RBasic*
  %168 = getelementptr inbounds %struct.RBasic, %struct.RBasic* %167, i64 0, i32 0
  %169 = load i64, i64* %168, align 8, !tbaa !0, !noalias !42
  %170 = and i64 %169, 8192
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %"afterSymCallIntrinsic_[]152.i"
  %173 = lshr i64 %169, 15
  %174 = and i64 %173, 3
  br label %rb_array_len.exit.i4.i

175:                                              ; preds = %"afterSymCallIntrinsic_[]152.i"
  %176 = inttoptr i64 %150 to %struct.RArray*
  %177 = getelementptr inbounds %struct.RArray, %struct.RArray* %176, i64 0, i32 1, i32 0, i32 0
  %178 = load i64, i64* %177, align 8, !tbaa !5, !noalias !42
  br label %rb_array_len.exit.i4.i

rb_array_len.exit.i4.i:                           ; preds = %175, %172
  %179 = phi i64 [ %174, %172 ], [ %178, %175 ]
  %180 = trunc i64 %179 to i32
  %181 = sub i32 3, %180
  %182 = icmp sgt i32 %181, 0
  br i1 %182, label %183, label %sorbet_splatIntrinsic.exit5.i

183:                                              ; preds = %rb_array_len.exit.i4.i
  %184 = call i64 @rb_ary_dup(i64 %150) #7, !noalias !42
  br label %185

185:                                              ; preds = %185, %183
  %186 = phi i32 [ 0, %183 ], [ %188, %185 ]
  %187 = call i64 @rb_ary_push(i64 %184, i64 8) #7, !noalias !42
  %188 = add nuw nsw i32 %186, 1
  %189 = icmp eq i32 %188, %181
  br i1 %189, label %sorbet_splatIntrinsic.exit5.i, label %185

sorbet_splatIntrinsic.exit5.i:                    ; preds = %185, %rb_array_len.exit.i4.i
  %190 = phi i64 [ %150, %rb_array_len.exit.i4.i ], [ %184, %185 ]
  %191 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %192 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %191, i64 0, i32 2
  %193 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %192, align 8, !tbaa !11
  %194 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %193, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %194, align 8, !tbaa !35
  %195 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %196 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %195, i64 0, i32 2
  %197 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %196, align 8, !tbaa !11
  %198 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %197, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %198, align 8, !tbaa !35
  %199 = and i64 %190, 7
  %200 = icmp ne i64 %199, 0
  %201 = and i64 %190, -9
  %202 = icmp eq i64 %201, 0
  %203 = or i1 %200, %202
  br i1 %203, label %sorbet_isa_Array.exit3.thread.i, label %sorbet_isa_Array.exit3.i, !prof !39

sorbet_isa_Array.exit3.thread.i:                  ; preds = %sorbet_splatIntrinsic.exit5.i
  store i64 1, i64* %callArgsAddr.i, align 16
  br label %"slowSymCallIntrinsic_[]198.i"

sorbet_isa_Array.exit3.i:                         ; preds = %sorbet_splatIntrinsic.exit5.i
  %204 = inttoptr i64 %190 to %struct.RBasic*
  %205 = getelementptr inbounds %struct.RBasic, %struct.RBasic* %204, i64 0, i32 0
  %206 = load i64, i64* %205, align 8, !tbaa !0
  %207 = and i64 %206, 31
  %208 = icmp eq i64 %207, 7
  store i64 1, i64* %callArgsAddr.i, align 16
  br i1 %208, label %"fastSymCallIntrinsic_[]199.i", label %"slowSymCallIntrinsic_[]198.i", !prof !40, !misexpect !41

"slowSymCallIntrinsic_[]153.i":                   ; preds = %"afterSymCallIntrinsic_[]137.i"
  %209 = call i64 @rb_funcallv(i64 %87, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"afterSymCallIntrinsic_[]152.i"

"fastSymCallIntrinsic_[]154.i":                   ; preds = %"afterSymCallIntrinsic_[]137.i"
  %210 = call i64 @rb_ary_entry(i64 %87, i64 -1) #7
  br label %"afterSymCallIntrinsic_[]152.i"

"afterSymCallIntrinsic_[]197.i":                  ; preds = %"fastSymCallIntrinsic_[]199.i", %"slowSymCallIntrinsic_[]198.i"
  %211 = phi i1 [ true, %"fastSymCallIntrinsic_[]199.i" ], [ false, %"slowSymCallIntrinsic_[]198.i" ]
  %"symIntrinsicRawPhi_[]209.i" = phi i64 [ %221, %"fastSymCallIntrinsic_[]199.i" ], [ %220, %"slowSymCallIntrinsic_[]198.i" ]
  %212 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %213 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %212, i64 0, i32 2
  %214 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %213, align 8, !tbaa !11
  %215 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %214, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %215, align 8, !tbaa !35
  %216 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %217 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %216, i64 0, i32 2
  %218 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %217, align 8, !tbaa !11
  %219 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %218, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %219, align 8, !tbaa !35
  store i64 -3, i64* %callArgsAddr.i, align 16
  br i1 %211, label %"fastSymCallIntrinsic_[]214.i", label %"slowSymCallIntrinsic_[]213.i"

"slowSymCallIntrinsic_[]198.i":                   ; preds = %sorbet_isa_Array.exit3.i, %sorbet_isa_Array.exit3.thread.i
  %220 = call i64 @rb_funcallv(i64 %190, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"afterSymCallIntrinsic_[]197.i"

"fastSymCallIntrinsic_[]199.i":                   ; preds = %sorbet_isa_Array.exit3.i
  %221 = call i64 @rb_ary_entry(i64 %190, i64 0) #7
  br label %"afterSymCallIntrinsic_[]197.i"

"afterSymCallIntrinsic_[]212.i":                  ; preds = %"fastSymCallIntrinsic_[]214.i", %"slowSymCallIntrinsic_[]213.i"
  %"symIntrinsicRawPhi_[]224.i" = phi i64 [ %231, %"fastSymCallIntrinsic_[]214.i" ], [ %230, %"slowSymCallIntrinsic_[]213.i" ]
  %222 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %223 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %222, i64 0, i32 2
  %224 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %223, align 8, !tbaa !11
  %225 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %224, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %225, align 8, !tbaa !35
  %226 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %227 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %226, i64 0, i32 2
  %228 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %227, align 8, !tbaa !11
  %229 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %228, i64 0, i32 0
  store i64* inttoptr (i64 32 to i64*), i64** %229, align 8, !tbaa !35
  store i64 -1, i64* %callArgsAddr.i, align 16
  br i1 %211, label %"fastSymCallIntrinsic_[]229.i", label %"slowSymCallIntrinsic_[]228.i"

"slowSymCallIntrinsic_[]213.i":                   ; preds = %"afterSymCallIntrinsic_[]197.i"
  %230 = call i64 @rb_funcallv(i64 %190, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"afterSymCallIntrinsic_[]212.i"

"fastSymCallIntrinsic_[]214.i":                   ; preds = %"afterSymCallIntrinsic_[]197.i"
  %231 = call i64 @rb_ary_entry(i64 %190, i64 -2) #7
  br label %"afterSymCallIntrinsic_[]212.i"

"afterSymCallIntrinsic_[]227.i":                  ; preds = %"fastSymCallIntrinsic_[]229.i", %"slowSymCallIntrinsic_[]228.i"
  %"symIntrinsicRawPhi_[]239.i" = phi i64 [ %306, %"fastSymCallIntrinsic_[]229.i" ], [ %305, %"slowSymCallIntrinsic_[]228.i" ]
  %232 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %233 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %232, i64 0, i32 2
  %234 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %233, align 8, !tbaa !11
  %235 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %234, i64 0, i32 0
  store i64* inttoptr (i64 40 to i64*), i64** %235, align 8, !tbaa !35
  store i64 %"symIntrinsicRawPhi_[]209.i", i64* %callArgsAddr.i, align 16
  store i64 %"symIntrinsicRawPhi_[]224.i", i64* %callArgsAddr103.i, align 8
  store i64 %"symIntrinsicRawPhi_[]239.i", i64* %callArgsAddr105.i, align 16
  %236 = call i64 @rb_ary_new_from_values(i64 3, i64* nonnull %callArgsAddr.i) #7
  %237 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %238 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %237, i64 0, i32 2
  %239 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %238, align 8, !tbaa !11
  %240 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %239, i64 0, i32 0
  store i64* inttoptr (i64 40 to i64*), i64** %240, align 8, !tbaa !35
  store i64 %236, i64* %callArgsAddr.i, align 16
  %241 = call i64 @rb_funcallv(i64 %0, i64 %rubyId_puts.i, i32 1, i64* nonnull %callArgsAddr.i) #7
  %242 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %243 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %242, i64 0, i32 2
  %244 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %243, align 8, !tbaa !11
  %245 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %244, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %245, align 8, !tbaa !35
  %246 = call i64 @rb_ary_new() #7
  %247 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %248 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %247, i64 0, i32 2
  %249 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %248, align 8, !tbaa !11
  %250 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %249, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %250, align 8, !tbaa !35
  %251 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %252 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %251, i64 0, i32 2
  %253 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %252, align 8, !tbaa !11
  %254 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %253, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %254, align 8, !tbaa !35
  %255 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %256 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %255, i64 0, i32 2
  %257 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %256, align 8, !tbaa !11
  %258 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %257, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %258, align 8, !tbaa !35
  %259 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %260 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %259, i64 0, i32 2
  %261 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %260, align 8, !tbaa !11
  %262 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %261, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %262, align 8, !tbaa !35
  store i64 %246, i64* %callArgsAddr.i, align 16
  store <2 x i64> <i64 3, i64 5>, <2 x i64>* %63, align 8
  %263 = inttoptr i64 %246 to %struct.RBasic*
  %264 = getelementptr inbounds %struct.RBasic, %struct.RBasic* %263, i64 0, i32 0
  %265 = load i64, i64* %264, align 8, !tbaa !0, !noalias !45
  %266 = and i64 %265, 8192
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %271, label %268

268:                                              ; preds = %"afterSymCallIntrinsic_[]227.i"
  %269 = lshr i64 %265, 15
  %270 = and i64 %269, 3
  br label %rb_array_len.exit.i.i

271:                                              ; preds = %"afterSymCallIntrinsic_[]227.i"
  %272 = inttoptr i64 %246 to %struct.RArray*
  %273 = getelementptr inbounds %struct.RArray, %struct.RArray* %272, i64 0, i32 1, i32 0, i32 0
  %274 = load i64, i64* %273, align 8, !tbaa !5, !noalias !45
  br label %rb_array_len.exit.i.i

rb_array_len.exit.i.i:                            ; preds = %271, %268
  %275 = phi i64 [ %270, %268 ], [ %274, %271 ]
  %276 = trunc i64 %275 to i32
  %277 = sub i32 3, %276
  %278 = icmp sgt i32 %277, 0
  br i1 %278, label %279, label %sorbet_splatIntrinsic.exit.i

279:                                              ; preds = %rb_array_len.exit.i.i
  %280 = call i64 @rb_ary_dup(i64 %246) #7, !noalias !45
  br label %281

281:                                              ; preds = %281, %279
  %282 = phi i32 [ 0, %279 ], [ %284, %281 ]
  %283 = call i64 @rb_ary_push(i64 %280, i64 8) #7, !noalias !45
  %284 = add nuw nsw i32 %282, 1
  %285 = icmp eq i32 %284, %277
  br i1 %285, label %sorbet_splatIntrinsic.exit.i, label %281

sorbet_splatIntrinsic.exit.i:                     ; preds = %281, %rb_array_len.exit.i.i
  %286 = phi i64 [ %246, %rb_array_len.exit.i.i ], [ %280, %281 ]
  %287 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %288 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %287, i64 0, i32 2
  %289 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %288, align 8, !tbaa !11
  %290 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %289, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %290, align 8, !tbaa !35
  %291 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %292 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %291, i64 0, i32 2
  %293 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %292, align 8, !tbaa !11
  %294 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %293, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %294, align 8, !tbaa !35
  %295 = and i64 %286, 7
  %296 = icmp ne i64 %295, 0
  %297 = and i64 %286, -9
  %298 = icmp eq i64 %297, 0
  %299 = or i1 %296, %298
  br i1 %299, label %sorbet_isa_Array.exit.thread.i, label %sorbet_isa_Array.exit.i, !prof !39

sorbet_isa_Array.exit.thread.i:                   ; preds = %sorbet_splatIntrinsic.exit.i
  store i64 1, i64* %callArgsAddr.i, align 16
  br label %"slowSymCallIntrinsic_[]268.i"

sorbet_isa_Array.exit.i:                          ; preds = %sorbet_splatIntrinsic.exit.i
  %300 = inttoptr i64 %286 to %struct.RBasic*
  %301 = getelementptr inbounds %struct.RBasic, %struct.RBasic* %300, i64 0, i32 0
  %302 = load i64, i64* %301, align 8, !tbaa !0
  %303 = and i64 %302, 31
  %304 = icmp eq i64 %303, 7
  store i64 1, i64* %callArgsAddr.i, align 16
  br i1 %304, label %"fastSymCallIntrinsic_[]269.i", label %"slowSymCallIntrinsic_[]268.i", !prof !40, !misexpect !41

"slowSymCallIntrinsic_[]228.i":                   ; preds = %"afterSymCallIntrinsic_[]212.i"
  %305 = call i64 @rb_funcallv(i64 %190, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"afterSymCallIntrinsic_[]227.i"

"fastSymCallIntrinsic_[]229.i":                   ; preds = %"afterSymCallIntrinsic_[]212.i"
  %306 = call i64 @rb_ary_entry(i64 %190, i64 -1) #7
  br label %"afterSymCallIntrinsic_[]227.i"

"afterSymCallIntrinsic_[]267.i":                  ; preds = %"fastSymCallIntrinsic_[]269.i", %"slowSymCallIntrinsic_[]268.i"
  %307 = phi i1 [ true, %"fastSymCallIntrinsic_[]269.i" ], [ false, %"slowSymCallIntrinsic_[]268.i" ]
  %"symIntrinsicRawPhi_[]279.i" = phi i64 [ %317, %"fastSymCallIntrinsic_[]269.i" ], [ %316, %"slowSymCallIntrinsic_[]268.i" ]
  %308 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %309 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %308, i64 0, i32 2
  %310 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %309, align 8, !tbaa !11
  %311 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %310, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %311, align 8, !tbaa !35
  %312 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %313 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %312, i64 0, i32 2
  %314 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %313, align 8, !tbaa !11
  %315 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %314, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %315, align 8, !tbaa !35
  store i64 -3, i64* %callArgsAddr.i, align 16
  br i1 %307, label %"fastSymCallIntrinsic_[]284.i", label %"slowSymCallIntrinsic_[]283.i"

"slowSymCallIntrinsic_[]268.i":                   ; preds = %sorbet_isa_Array.exit.i, %sorbet_isa_Array.exit.thread.i
  %316 = call i64 @rb_funcallv(i64 %286, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"afterSymCallIntrinsic_[]267.i"

"fastSymCallIntrinsic_[]269.i":                   ; preds = %sorbet_isa_Array.exit.i
  %317 = call i64 @rb_ary_entry(i64 %286, i64 0) #7
  br label %"afterSymCallIntrinsic_[]267.i"

"afterSymCallIntrinsic_[]282.i":                  ; preds = %"fastSymCallIntrinsic_[]284.i", %"slowSymCallIntrinsic_[]283.i"
  %"symIntrinsicRawPhi_[]294.i" = phi i64 [ %327, %"fastSymCallIntrinsic_[]284.i" ], [ %326, %"slowSymCallIntrinsic_[]283.i" ]
  %318 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %319 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %318, i64 0, i32 2
  %320 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %319, align 8, !tbaa !11
  %321 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %320, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %321, align 8, !tbaa !35
  %322 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %323 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %322, i64 0, i32 2
  %324 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %323, align 8, !tbaa !11
  %325 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %324, i64 0, i32 0
  store i64* inttoptr (i64 56 to i64*), i64** %325, align 8, !tbaa !35
  store i64 -1, i64* %callArgsAddr.i, align 16
  br i1 %307, label %"fastSymCallIntrinsic_[]299.i", label %"slowSymCallIntrinsic_[]298.i"

"slowSymCallIntrinsic_[]283.i":                   ; preds = %"afterSymCallIntrinsic_[]267.i"
  %326 = call i64 @rb_funcallv(i64 %286, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"afterSymCallIntrinsic_[]282.i"

"fastSymCallIntrinsic_[]284.i":                   ; preds = %"afterSymCallIntrinsic_[]267.i"
  %327 = call i64 @rb_ary_entry(i64 %286, i64 -2) #7
  br label %"afterSymCallIntrinsic_[]282.i"

"slowSymCallIntrinsic_[]298.i":                   ; preds = %"afterSymCallIntrinsic_[]282.i"
  %328 = call i64 @rb_funcallv(i64 %286, i64 %"rubyId_[].i", i32 1, i64* nonnull %callArgsAddr.i) #7
  br label %"func_<root>.<static-init>$111.exit"

"fastSymCallIntrinsic_[]299.i":                   ; preds = %"afterSymCallIntrinsic_[]282.i"
  %329 = call i64 @rb_ary_entry(i64 %286, i64 -1) #7
  br label %"func_<root>.<static-init>$111.exit"

"func_<root>.<static-init>$111.exit":             ; preds = %"slowSymCallIntrinsic_[]298.i", %"fastSymCallIntrinsic_[]299.i"
  %"symIntrinsicRawPhi_[]309.i" = phi i64 [ %329, %"fastSymCallIntrinsic_[]299.i" ], [ %328, %"slowSymCallIntrinsic_[]298.i" ]
  %330 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %331 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %330, i64 0, i32 2
  %332 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %331, align 8, !tbaa !11
  %333 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %332, i64 0, i32 0
  store i64* inttoptr (i64 64 to i64*), i64** %333, align 8, !tbaa !35
  store i64 %"symIntrinsicRawPhi_[]279.i", i64* %callArgsAddr.i, align 16
  store i64 %"symIntrinsicRawPhi_[]294.i", i64* %callArgsAddr103.i, align 8
  store i64 %"symIntrinsicRawPhi_[]309.i", i64* %callArgsAddr105.i, align 16
  %334 = call i64 @rb_ary_new_from_values(i64 3, i64* nonnull %callArgsAddr.i) #7
  %335 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %336 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %335, i64 0, i32 2
  %337 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %336, align 8, !tbaa !11
  %338 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %337, i64 0, i32 0
  store i64* inttoptr (i64 64 to i64*), i64** %338, align 8, !tbaa !35
  store i64 %334, i64* %callArgsAddr.i, align 16
  %339 = call i64 @rb_funcallv(i64 %0, i64 %rubyId_puts.i, i32 1, i64* nonnull %callArgsAddr.i) #7
  %340 = load %struct.rb_execution_context_struct*, %struct.rb_execution_context_struct** @ruby_current_execution_context_ptr, align 8, !tbaa !9
  %341 = getelementptr inbounds %struct.rb_execution_context_struct, %struct.rb_execution_context_struct* %340, i64 0, i32 2
  %342 = load %struct.rb_control_frame_struct*, %struct.rb_control_frame_struct** %341, align 8, !tbaa !11
  %343 = getelementptr inbounds %struct.rb_control_frame_struct, %struct.rb_control_frame_struct* %342, i64 0, i32 0
  store i64* inttoptr (i64 64 to i64*), i64** %343, align 8, !tbaa !35
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1)
  ret void
}

attributes #0 = { nounwind ssp uwtable }
attributes #1 = { "addedToSilenceEmptyAttrsError" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { norecurse nounwind readnone ssp uwtable }
attributes #4 = { nofree norecurse nounwind ssp uwtable }
attributes #5 = { nounwind ssp }
attributes #6 = { nounwind sspreq }
attributes #7 = { nounwind }

!0 = !{!1, !2, i64 0}
!1 = !{!"RBasic", !2, i64 0, !2, i64 8}
!2 = !{!"long", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!3, !3, i64 0}
!6 = !{i32 1088}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !3, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !3, i64 0}
!11 = !{!12, !10, i64 16}
!12 = !{!"rb_execution_context_struct", !10, i64 0, !2, i64 8, !10, i64 16, !10, i64 24, !10, i64 32, !8, i64 40, !8, i64 44, !10, i64 48, !10, i64 56, !10, i64 64, !2, i64 72, !2, i64 80, !10, i64 88, !2, i64 96, !10, i64 104, !10, i64 112, !2, i64 120, !2, i64 128, !3, i64 136, !3, i64 137, !2, i64 144, !13, i64 152}
!13 = !{!"", !10, i64 0, !10, i64 8, !2, i64 16, !3, i64 24}
!14 = !{!15, !10, i64 16}
!15 = !{!"rb_control_frame_struct", !10, i64 0, !10, i64 8, !10, i64 16, !2, i64 24, !10, i64 32, !10, i64 40, !10, i64 48}
!16 = !{!15, !10, i64 32}
!17 = !{!2, !2, i64 0}
!18 = !{!19, !8, i64 0}
!19 = !{!"iseq_insn_info_entry", !8, i64 0, !8, i64 4}
!20 = !{!21, !10, i64 16}
!21 = !{!"rb_iseq_struct", !2, i64 0, !2, i64 8, !10, i64 16, !3, i64 24}
!22 = !{!23, !10, i64 120}
!23 = !{!"rb_iseq_constant_body", !3, i64 0, !8, i64 4, !10, i64 8, !24, i64 16, !26, i64 64, !29, i64 120, !10, i64 152, !10, i64 160, !10, i64 168, !10, i64 176, !10, i64 184, !10, i64 192, !10, i64 200, !30, i64 208, !8, i64 240, !8, i64 244, !8, i64 248, !8, i64 252, !8, i64 256, !3, i64 260}
!24 = !{!"", !25, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !8, i64 16, !8, i64 20, !8, i64 24, !8, i64 28, !10, i64 32, !10, i64 40}
!25 = !{!"", !8, i64 0, !8, i64 0, !8, i64 0, !8, i64 0, !8, i64 0, !8, i64 0, !8, i64 0, !8, i64 0}
!26 = !{!"rb_iseq_location_struct", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !8, i64 32, !27, i64 36}
!27 = !{!"rb_code_location_struct", !28, i64 0, !28, i64 8}
!28 = !{!"rb_code_position_struct", !8, i64 0, !8, i64 4}
!29 = !{!"iseq_insn_info", !10, i64 0, !10, i64 8, !8, i64 16, !10, i64 24}
!30 = !{!"", !2, i64 0, !2, i64 8, !2, i64 16, !10, i64 24}
!31 = !{!23, !10, i64 128}
!32 = !{!23, !8, i64 4}
!33 = !{!23, !8, i64 136}
!34 = !{!23, !10, i64 8}
!35 = !{!15, !10, i64 0}
!36 = !{!37}
!37 = distinct !{!37, !38, !"sorbet_splatIntrinsic: argument 0"}
!38 = distinct !{!38, !"sorbet_splatIntrinsic"}
!39 = !{!"branch_weights", i32 1073205, i32 2146410443}
!40 = !{!"branch_weights", i32 2000, i32 1}
!41 = !{!"misexpect", i64 0, i64 2000, i64 1}
!42 = !{!43}
!43 = distinct !{!43, !44, !"sorbet_splatIntrinsic: argument 0"}
!44 = distinct !{!44, !"sorbet_splatIntrinsic"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"sorbet_splatIntrinsic: argument 0"}
!47 = distinct !{!47, !"sorbet_splatIntrinsic"}
