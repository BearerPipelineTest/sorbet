class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C OpEq><<C <todo sym>>> < (::<todo sym>)
    def b<<todo method>>(&<blk>)
      <emptyTree>
    end

    def b=<<todo method>>(_, &<blk>)
      <emptyTree>
    end

    def y<<todo method>>(&<blk>)
      <emptyTree>
    end

    def z<<todo method>>(&<blk>)
      <emptyTree>
    end

    def example<<todo method>>(a, &<blk>)
      begin
        begin
          a$2 = a
          a$3 = if a$2
            :a
          else
            a$2
          end
          a = a$3
        end
        begin
          b$4 = <self>
          b$5 = b$4.b()
          if b$5
            b$4.b=(:b)
          else
            b$5
          end
        end
        begin
          []$6 = a
          []$7 = <self>.y()
          []$8 = <self>.z()
          []$9 = []$6.[]([]$7, []$8)
          if []$9
            []$6.[]=([]$7, []$8, 1)
          else
            []$9
          end
        end
        begin
          a$10 = a
          if a$10
            <emptyTree>
          else
            begin
              a$11 = :a
              a$10 = a$11
              a$10
            end
          end
          a = a$10
        end
        begin
          b$12 = <self>
          b$13 = b$12.b()
          if b$13
            b$13
          else
            b$12.b=(:b)
          end
        end
        begin
          []$14 = a
          []$15 = <self>.y()
          []$16 = <self>.z()
          []$17 = []$14.[]([]$15, []$16)
          if []$17
            []$17
          else
            []$14.[]=([]$15, []$16, 1)
          end
        end
      end
    end
  end
end
